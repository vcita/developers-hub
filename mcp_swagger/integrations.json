{
  "openapi": "3.1.0",
  "info": {
    "title": "Integrations",
    "description": "Unified OpenAPI specification for integrations domain",
    "version": "3.0",
    "x-generated": {
      "timestamp": "2025-08-31T14:30:30.524Z",
      "sourceFiles": [
        "authbridge_internal.json",
        "import.json",
        "authbridge.json"
      ],
      "pathNormalizations": [
        {
          "file": "authbridge_internal.json",
          "basePath": "/v3",
          "transformations": [
            {
              "original": "/authbridge/idp_users/{actor_type}",
              "normalized": "/v3/authbridge/idp_users/{actor_type}",
              "basePath": "/v3"
            },
            {
              "original": "/authbridge/idp_users/{actor_type}/{idp_user_reference_id}",
              "normalized": "/v3/authbridge/idp_users/{actor_type}/{idp_user_reference_id}",
              "basePath": "/v3"
            },
            {
              "original": "/authbridge/idp_actor_mappings/{idp_actor_mappings_uid}/invite",
              "normalized": "/v3/authbridge/idp_actor_mappings/{idp_actor_mappings_uid}/invite",
              "basePath": "/v3"
            }
          ]
        },
        {
          "file": "authbridge.json",
          "basePath": "/v3",
          "transformations": [
            {
              "original": "/integrations/idp_actor_mappings",
              "normalized": "/v3/integrations/idp_actor_mappings",
              "basePath": "/v3"
            },
            {
              "original": "/integrations/idp_actor_mappings/{uid}",
              "normalized": "/v3/integrations/idp_actor_mappings/{uid}",
              "basePath": "/v3"
            }
          ]
        }
      ],
      "pathConflicts": [],
      "componentConflicts": [],
      "totalPaths": 9,
      "totalComponents": 8
    }
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "Unified API Gateway server"
    }
  ],
  "paths": {
    "/v3/authbridge/idp_users/{actor_type}": {
      "post": {
        "summary": "Create an IDP User",
        "description": "Create a user on the IDP using Directory token. Internal API.",
        "tags": [
          "IDP Users"
        ],
        "parameters": [
          {
            "name": "actor_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "business_uid",
                  "role_code",
                  "email",
                  "locale"
                ],
                "properties": {
                  "business_uid": {
                    "type": "string"
                  },
                  "role_code": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "locale": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "idp_user_reference_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "$ref": "#/components/responses/ErrorResponse"
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/authbridge/idp_users/{actor_type}/{idp_user_reference_id}": {
      "delete": {
        "summary": "Delete an IDP User",
        "description": "Deletes a user from the IDP. Used when staff creation fails. Internal API.",
        "tags": [
          "IDP Users"
        ],
        "parameters": [
          {
            "name": "actor_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idp_user_reference_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "$ref": "#/components/responses/ErrorResponse"
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "description": "User not found",
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/authbridge/idp_actor_mappings/{idp_actor_mappings_uid}/invite": {
      "post": {
        "summary": "Send Invitation to External IDP User",
        "description": "Sends an invitation to an existing external IDP user. Requires pre-existing mapping. Internal API.",
        "tags": [
          "Invitations"
        ],
        "parameters": [
          {
            "name": "idp_actor_mappings_uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "$ref": "#/components/responses/ErrorResponse"
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "description": "Mapping not found",
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/integrations/import_jobs": {
      "post": {
        "tags": [
          "Import"
        ],
        "summary": "Create a new ImportJob",
        "description": "Import products into a business account\n\nAvailable for **Staff Tokens**",
        "operationId": "ImportJobsController_create",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadEntityRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Import job created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/integrations/importJob.json",
                          "description": "Import job details"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/integrations/import_jobs/{uid}": {
      "get": {
        "tags": [
          "Import"
        ],
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Retrieve an ImportJob",
        "description": "Retrieve an import job by its UID\n\nAvailable for **Staff Tokens**",
        "operationId": "ImportJobsController_findOne",
        "responses": {
          "200": {
            "description": "Import job details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/integrations/importJob.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/integrations/import_job_items": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Get all ImportJobItems",
        "description": "Get all import job items for a specific import job\n\nAvailable for **Staff Tokens**",
        "operationId": "ImportJobItemsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "import_job_uid",
            "required": true,
            "in": "query",
            "description": "Import job UID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status of the import job item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of import job items",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MultiImportJobItemsResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/integrations/import_job_items/{uid}": {
      "get": {
        "tags": [
          "Import"
        ],
        "summary": "Retrieve an ImportJobItem",
        "description": "Retrieve an import job item by its UID\n\nAvailable for **Staff Tokens**",
        "operationId": "ImportJobItemsController_findOne",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import job item details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/integrations/importJobItem.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/integrations/idp_actor_mappings": {
      "get": {
        "summary": "List all IDP Actor Mappings",
        "parameters": [
          {
            "in": "query",
            "name": "idp_user_reference_id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by external reference ID of the IDP User"
          },
          {
            "in": "query",
            "name": "actor_type",
            "schema": {
              "type": "string",
              "enum": [
                "staff",
                "operator"
              ]
            },
            "description": "Filter by actor type. 'staff' refers to a staff member, while 'operator' refers to an operator in the Operators Portal."
          },
          {
            "in": "query",
            "name": "actor_uid",
            "schema": {
              "type": "string"
            },
            "description": "Filter by unique identifier of the actor in the inTandem platform"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of IDP Actor Mappings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IdpActorList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "IDP Actor Mapping"
        ],
        "description": "List all IDP Actor Mappings in the directory scope.\n\nAvailable for **Directory Tokens only**\n"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIdpActorMappingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "IDP Actor Mapping created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/integrations/idp_actor_mapping.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data or missing required fields"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions or not a Directory Token"
          },
          "422": {
            "description": "Unprocessable Entity - Business logic validation failed (e.g., invalid actor_uid or actor_type combination)"
          }
        },
        "summary": "Create an IDP Actor Mapping",
        "description": "Create a new IDP Actor Mapping for SSO integration.\n\nAvailable for **Directory Tokens only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "IDP Actor Mapping"
        ]
      }
    },
    "/v3/integrations/idp_actor_mappings/{uid}": {
      "delete": {
        "summary": "Delete an IDP Actor Mapping",
        "description": "Delete an IDP Actor Mapping by UID. Available for **Directory Tokens only**",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the IDP Actor Mapping",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "IDP Actor Mapping deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions or not a Directory Token"
          },
          "404": {
            "description": "Not Found - IDP Actor Mapping with the specified UID does not exist"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "IDP Actor Mapping"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ExcelProviderDataDto": {
        "type": "object",
        "title": "Excel Provider Data",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The file containing the records that should be imported"
          }
        },
        "required": [
          "file"
        ]
      },
      "ExistingImportJobDto": {
        "type": "object",
        "title": "Existing Import Job",
        "properties": {
          "source_import_job_uid": {
            "type": "string",
            "description": "The UID of the import job that was used for validation"
          }
        },
        "required": [
          "source_import_job_uid"
        ]
      },
      "UploadEntityRequestDto": {
        "type": "object",
        "properties": {
          "entity_type": {
            "type": "string",
            "enum": [
              "products"
            ],
            "description": "The type of the imported entity"
          },
          "provider_type": {
            "type": "string",
            "enum": [
              "excel",
              "import_job"
            ],
            "description": "The type of import provider"
          },
          "provider_data": {
            "description": "Provider-specific configuration data",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExcelProviderDataDto",
                "description": "Excel provider configuration"
              },
              {
                "$ref": "#/components/schemas/ExistingImportJobDto",
                "description": "Existing import job configuration"
              }
            ]
          },
          "job_type": {
            "type": "string",
            "enum": [
              "validate",
              "execute"
            ],
            "default": "execute",
            "description": "The type of job operation. 'validate' will go over the lines and return errors, use /v3/integrations/import_job_items to get detailed errors about each line.\n'execute' will run the import job. use /v3/integrations/import_job to get the progress of the import task."
          },
          "locale": {
            "type": "string",
            "enum": [
              "en",
              "he",
              "es",
              "fr",
              "de",
              "it",
              "nl",
              "pt",
              "zh"
            ],
            "description": "The locale of the import job, in use for translating error messages of the import job items"
          },
          "shared_entity_data": {
            "type": "object",
            "description": "Shared entity data for the import job, this data is shared between all import job items"
          }
        },
        "required": [
          "provider_type"
        ]
      },
      "MultiImportJobItemsResponseDto": {
        "type": "object",
        "properties": {
          "import_job_items": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/integrations/importJobItem.json"
            }
          }
        },
        "required": [
          "import_job_items"
        ]
      },
      "IdpActorList": {
        "type": "object",
        "properties": {
          "idp_actor_mappings": {
            "description": "List of IDP Actor Mappings",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/integrations/idp_actor_mapping.json"
            }
          }
        }
      },
      "CreateIdpActorMappingDTO": {
        "type": "object",
        "properties": {
          "idp_user_reference_id": {
            "type": "string",
            "description": "External reference ID of the IDP User, used to link the IDP User to an external system.",
            "example": "ext-12345"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "staff",
              "operator"
            ],
            "description": "Type of the actor in the inTandem platform. 'staff' refers to a staff member, while 'operator' refers to an operator in the Operators Portal.",
            "example": "staff"
          },
          "actor_uid": {
            "type": "string",
            "description": "Unique identifier of the actor in the inTandem platform. This is used to link the IDP actor to a specific staff member or operator.",
            "example": "staff-67890"
          }
        },
        "required": [
          "idp_user_reference_id",
          "actor_type",
          "actor_uid"
        ]
      },
      "UpdateIdpActorMappingDTO": {
        "type": "object",
        "properties": {
          "idp_user_reference_id": {
            "type": "string",
            "description": "External reference ID of the IDP User, used to link the IDP User to an external system.",
            "example": "ext-12345"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "staff",
              "operator"
            ],
            "description": "Type of the actor in the inTandem platform. 'staff' refers to a staff member, while 'operator' refers to an operator in the Operators Portal.",
            "example": "staff"
          },
          "actor_uid": {
            "type": "string",
            "description": "Unique identifier of the actor in the inTandem platform. This is used to link the IDP actor to a specific staff member or operator.",
            "example": "staff-67890"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "IDP Users",
      "description": "Operations for managing IDP users"
    },
    {
      "name": "Invitations",
      "description": "Operations for sending invitations to external IDP users"
    },
    {
      "name": "IDP Actor Mapping",
      "description": "The IDP Actor API facilitates seamless CRUD operations for managing users in an IDP integrated with SSO to the inTandem authorization bridge."
    }
  ]
}
