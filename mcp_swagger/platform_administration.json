{
  "openapi": "3.1.0",
  "info": {
    "title": "Platform_administration",
    "description": "Unified OpenAPI specification for platform_administration domain",
    "version": "3.0",
    "x-generated": {
      "timestamp": "2025-09-07T11:02:23.102Z",
      "sourceFiles": [
        "license.json",
        "legacy_v1_platform.json",
        "staff.json",
        "scheduling.json",
        "accounts.json",
        "oauth.json",
        "staff.json",
        "staff_member.json",
        "access_control.json"
      ],
      "pathNormalizations": [
        {
          "file": "license.json",
          "basePath": "/v3",
          "transformations": [
            {
              "original": "/license/offerings",
              "normalized": "/v3/license/offerings",
              "basePath": "/v3"
            },
            {
              "original": "/license/offerings/{uid}",
              "normalized": "/v3/license/offerings/{uid}",
              "basePath": "/v3"
            },
            {
              "original": "/license/directory_offerings",
              "normalized": "/v3/license/directory_offerings",
              "basePath": "/v3"
            },
            {
              "original": "/license/directory_offerings/{uid}",
              "normalized": "/v3/license/directory_offerings/{uid}",
              "basePath": "/v3"
            },
            {
              "original": "/license/directory_offerings/bulk",
              "normalized": "/v3/license/directory_offerings/bulk",
              "basePath": "/v3"
            },
            {
              "original": "/license/bundled_offerings",
              "normalized": "/v3/license/bundled_offerings",
              "basePath": "/v3"
            },
            {
              "original": "/license/bundled_offerings/bulk",
              "normalized": "/v3/license/bundled_offerings/bulk",
              "basePath": "/v3"
            },
            {
              "original": "/license/bundled_offerings/{uid}",
              "normalized": "/v3/license/bundled_offerings/{uid}",
              "basePath": "/v3"
            },
            {
              "original": "/license/subscriptions",
              "normalized": "/v3/license/subscriptions",
              "basePath": "/v3"
            },
            {
              "original": "/license/subscriptions/bulk",
              "normalized": "/v3/license/subscriptions/bulk",
              "basePath": "/v3"
            },
            {
              "original": "/license/subscriptions/{uid}",
              "normalized": "/v3/license/subscriptions/{uid}",
              "basePath": "/v3"
            },
            {
              "original": "/license/business_carts",
              "normalized": "/v3/license/business_carts",
              "basePath": "/v3"
            },
            {
              "original": "/license/business_carts/{uid}",
              "normalized": "/v3/license/business_carts/{uid}",
              "basePath": "/v3"
            },
            {
              "original": "/license/skus",
              "normalized": "/v3/license/skus",
              "basePath": "/v3"
            },
            {
              "original": "/license/features_packages",
              "normalized": "/v3/license/features_packages",
              "basePath": "/v3"
            }
          ]
        },
        {
          "file": "legacy_v1_platform.json",
          "basePath": "/platform/v1",
          "transformations": [
            {
              "original": "/businesses",
              "normalized": "/platform/v1/businesses",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/validate_login",
              "normalized": "/platform/v1/businesses/validate_login",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/verify_audience_claim",
              "normalized": "/platform/v1/businesses/verify_audience_claim",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}",
              "normalized": "/platform/v1/businesses/{business_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/directory/branding",
              "normalized": "/platform/v1/directory/branding",
              "basePath": "/platform/v1"
            },
            {
              "original": "/categories",
              "normalized": "/platform/v1/categories",
              "basePath": "/platform/v1"
            },
            {
              "original": "/categories/{category_id}/services",
              "normalized": "/platform/v1/categories/{category_id}/services",
              "basePath": "/platform/v1"
            },
            {
              "original": "/fields",
              "normalized": "/platform/v1/fields",
              "basePath": "/platform/v1"
            },
            {
              "original": "/fields/{field_id}",
              "normalized": "/platform/v1/fields/{field_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/forms",
              "normalized": "/platform/v1/forms",
              "basePath": "/platform/v1"
            },
            {
              "original": "/tokens",
              "normalized": "/platform/v1/tokens",
              "basePath": "/platform/v1"
            },
            {
              "original": "/tokens/revoke",
              "normalized": "/platform/v1/tokens/revoke",
              "basePath": "/platform/v1"
            },
            {
              "original": "/webhook/subscribe",
              "normalized": "/platform/v1/webhook/subscribe",
              "basePath": "/platform/v1"
            },
            {
              "original": "/webhook/unsubscribe",
              "normalized": "/platform/v1/webhook/unsubscribe",
              "basePath": "/platform/v1"
            },
            {
              "original": "/webhooks",
              "normalized": "/platform/v1/webhooks",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/features",
              "normalized": "/platform/v1/businesses/{business_id}/features",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/purchased_items",
              "normalized": "/platform/v1/businesses/{business_id}/purchased_items",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/recurly_data",
              "normalized": "/platform/v1/businesses/{business_id}/recurly_data",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/staffs",
              "normalized": "/platform/v1/businesses/{business_id}/staffs",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/staffs/{staff_id}",
              "normalized": "/platform/v1/businesses/{business_id}/staffs/{staff_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/staffs/{staff_id}/sessions",
              "normalized": "/platform/v1/businesses/{business_id}/staffs/{staff_id}/sessions",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/wizards",
              "normalized": "/platform/v1/businesses/{business_id}/wizards",
              "basePath": "/platform/v1"
            },
            {
              "original": "/businesses/{business_id}/wizards/{wizard_name}",
              "normalized": "/platform/v1/businesses/{business_id}/wizards/{wizard_name}",
              "basePath": "/platform/v1"
            }
          ]
        },
        {
          "file": "oauth.json",
          "basePath": "/oauth",
          "transformations": [
            {
              "original": "/token",
              "normalized": "/oauth/token",
              "basePath": "/oauth"
            },
            {
              "original": "/userinfo",
              "normalized": "/oauth/userinfo",
              "basePath": "/oauth"
            }
          ]
        }
      ],
      "pathConflicts": [],
      "componentConflicts": [],
      "totalPaths": 72,
      "totalComponents": 23
    }
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "Unified API Gateway server"
    }
  ],
  "paths": {
    "/v3/license/offerings": {
      "get": {
        "summary": "List all Offerings",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "package",
                "app",
                "addon"
              ]
            },
            "description": "Type of the offering. Possible values include: **plan**: For the main business subscription; **app**: For marketplace app subscriptions; **addon**: for SMS, staff_seats and other SKUs. "
          },
          {
            "in": "query",
            "name": "SKU",
            "schema": {
              "type": "string"
            },
            "description": "The underlying SKU, can be a code name of a package, a code name of an app or a code name of an addon like SMS or staff_seat. If not specified, all SKUs are returned"
          },
          {
            "in": "query",
            "name": "directory_uid",
            "schema": {
              "type": "string"
            },
            "description": "A specific directory mentioned by its unique identifier"
          },
          {
            "in": "query",
            "name": "payment_type",
            "schema": {
              "type": "string",
              "enum": [
                "monthly",
                "annualy",
                "free",
                "single_charge",
                "external"
              ]
            },
            "description": "The payment type field defines the payment options available for an offering,**external**: Payment is not done by the platform (typically an API call from the partner), **free**: No payment is required; **single_charge**: A single, one-time payment is required to obtain the offering; **monthly**: A recurring payment made on a monthly basis; **annual**: A recurring payment made on a yearly basis; **bundle**: A subscription bundled with another subscription"
          },
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "boolean"
            },
            "description": "The Offering status"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Offerings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OfferingList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Offering"
        ],
        "description": "List all Offerings in scope.\n\nAvailable for **Directory, Staff, and internal Tokens**\n"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfferingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/offering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create an Offering",
        "description": "Create a new Offering.\n\nAvailable for **internal Token only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Offering"
        ]
      }
    },
    "/v3/license/offerings/{uid}": {
      "get": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get an Offering by its unique identifier",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/offering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieve an Offering",
        "description": "Retrieve an Offering.\n\nAvailable for **Directory, Staff, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Offering"
        ]
      },
      "put": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfferingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update an Offering",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/offering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update an Offering",
        "description": "Update an Offering.\n\nAvailable for **internal Token only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Offering"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an Offering",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete an Offering (Not implemented yet",
        "description": "Delete an Offering.\n\nAvailable for **internal Token only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Offering"
        ]
      }
    },
    "/v3/license/directory_offerings": {
      "get": {
        "summary": "List all DirectoryOfferings",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Directoryofferings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DirectoryOfferingList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Directory Offering"
        ],
        "description": "List all DirectoryOfferings in scope.\n\nAvailable for **Directory, Staff, and internal Tokens**\n"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDirectoryOfferingDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/directoryOffering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a DirectoryOffering",
        "description": "Create a new DirectoryOffering for a sepcific partner and Offering.\n\nAvailable for **internal Token only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Directory Offering"
        ]
      }
    },
    "/v3/license/directory_offerings/{uid}": {
      "get": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a DirectoryOffering by its unique identifier",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/directoryOffering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieve a DirectoryOffering",
        "description": "Retrieve a DirectoryOffering.\n\nAvailable for **Directory, Staff, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Directory Offering"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a DirectoryOffering",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete a DirectoryOffering",
        "description": "Delete a DirectoryOffering.\n\nAvailable for **internal Token only.**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Directory Offering"
        ]
      }
    },
    "/v3/license/directory_offerings/bulk": {
      "post": {
        "summary": "Bulk create DirectoryOfferings (not implemented yet)",
        "description": "Create multiple DirectoryOfferings \n\nAvailable for **Directory, and internal Tokens**\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "directory_offerings": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CreateDirectoryOfferingDTO"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The newly created list of DirectoryOfferings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DirectoryOfferingBulkList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Directory Offering"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/bundled_offerings": {
      "get": {
        "summary": "List all BundledOfferings",
        "parameters": [
          {
            "in": "query",
            "name": "offering_uid",
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the bundling parent offering"
          },
          {
            "in": "query",
            "name": "bundled_offering_uid",
            "schema": {
              "type": "string"
            },
            "description": "A unique identifier of one of the bundled offering"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\"."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of BundledOfferings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BundledOfferingList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Bundled Offering"
        ],
        "description": "List all BundledOfferings in scope.\n\nAvailable for **Directory, Staff, and internal Tokens**\n"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBundledOfferingDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/bundledOffering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a BundledOffering",
        "description": "Create a new BundledOffering for a sepcific offering.\n\nAvailable for **internal Token only**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Bundled Offering"
        ]
      }
    },
    "/v3/license/bundled_offerings/bulk": {
      "post": {
        "summary": "Bulk create Bundled_offering",
        "description": "Create multiple BundledOfferings for an Offering.\n\nAvailable for **internal Tokens**\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bundled_offerings": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CreateBundledOfferingDTO"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The newly created list of BundledOfferings",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BundldedOfferingBulkList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Bundled Offering"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/bundled_offerings/{uid}": {
      "get": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a BundledOffering by its unique identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/bundledOffering.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieve a BundledOffering",
        "description": "Retrieve a BundledOffering.\n\nAvailable for **Directory, Staff, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Bundled Offering"
        ]
      },
      "delete": {
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a BundledOffering",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Delete a BundledOffering",
        "description": "Delete a BundledOffering.\n\nAvailable for **internal Token only.**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Bundled Offering"
        ]
      }
    },
    "/v3/license/subscriptions": {
      "get": {
        "summary": "List all Subscriptions",
        "parameters": [
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "boolean"
            },
            "description": "Type of the offering. Possible values include: **plan**: For the main business subscription; **app**: For marketplace app subscriptions; **SMS**: For text message offerings; **staff_seat** For additional business seats."
          },
          {
            "in": "query",
            "name": "offering_type",
            "schema": {
              "type": "string",
              "enum": [
                "package",
                "app",
                "SMS",
                "staff_slot"
              ]
            },
            "description": "Type of the offering. Possible values include: **plan**: For the main business subscription; **app**: For marketplace app subscriptions; **SMS**: For text message offerings; **staff_seat**: For additional business seats."
          },
          {
            "in": "query",
            "name": "offering_uid",
            "schema": {
              "type": "string"
            },
            "description": "A specific offering mentioned by its unique identifier"
          },
          {
            "in": "query",
            "name": "SKU",
            "schema": {
              "type": "string"
            },
            "description": "The underlying SKU"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Subscription"
        ],
        "description": "List all Subscriptions in scope.\n\nAvailable for **Staff Tokens**\n"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/subscription.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a Subscription",
        "description": "Create a new Subscription for a business.\n\nAvailable for **Directory, Staff, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Subscription"
        ]
      }
    },
    "/v3/license/subscriptions/bulk": {
      "post": {
        "summary": "Bulk create Subscriptions",
        "description": "Create multiple Subscriptions for a business.\n\nAvailable for **internal Tokens**\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "business_cart_uid": {
                    "type": "string",
                    "description": "The unique identifier of the BusinessCart to process and create Subscriptions for"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created list of Subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SubscriptionList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Subscription"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/subscriptions/{uid}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/subscription.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Retrieve a Subscription",
        "description": "Update a Subscription.\n\nAvailable for **Directory, Staff, app, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/license/subscription.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Update a Subscription",
        "description": "Update a Subscription (cancel/expire).\n\nAvailable for **Directory, Staff, and internal Tokens**\n",
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/business_carts": {
      "get": {
        "summary": "Get all BusinessCarts (coming soon)",
        "responses": {
          "200": {
            "description": "List of BusinessCarts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BusinessCartList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Retrieve a list of BusinessCarts",
        "tags": [
          "Business Cart"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a BusinessCart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "offering_uid": {
                    "type": "string",
                    "description": "Unique identifier of the underlying Offering"
                  }
                },
                "required": [
                  "offering_uid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "BusinessCart created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://vcita.github.io/developers-hub/entities/license/businessCart.json"
                }
              }
            }
          }
        },
        "description": "Create a new BusinessCart",
        "tags": [
          "Business Cart"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/business_carts/{uid}": {
      "get": {
        "summary": "Retrieve a BusinessCart",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The BusinessCart details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://vcita.github.io/developers-hub/entities/license/businessCart.json"
                }
              }
            }
          }
        },
        "description": "Retrieve a BusinessCart",
        "tags": [
          "Business Cart"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a BusinessCart",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subscription_uid": {
                    "type": "string",
                    "description": "Unique identifier of the corresponding Subscription"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "BusinessCart updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://vcita.github.io/developers-hub/entities/license/businessCart.json"
                }
              }
            }
          }
        },
        "description": "Update a BusinessCart with the corresponding Subscription",
        "tags": [
          "Business Cart"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/license/skus": {
      "get": {
        "summary": "List all SKUs",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "package",
                "app",
                "addon"
              ]
            },
            "description": "Type of the offering. Possible values include: 'package' for the main business subscription; 'app' for marketplace app; 'addon' for text message and staff seats."
          },
          {
            "in": "query",
            "name": "code_name",
            "schema": {
              "type": "string"
            },
            "description": "Unique code of the associated underlying SKU (e.g., app code name, package code)"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of SKUs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SKUList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "SKU"
        ],
        "description": "List all SKUs in scope.\n\nAvailable for **Internal Tokens**\n"
      }
    },
    "/v3/license/features_packages": {
      "get": {
        "tags": [
          "Features Packages"
        ],
        "summary": "Get all Features Packages",
        "description": "Retrieve a list of Features Packages. **Available for Staff tokens**",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "default": 1
            },
            "description": "The name of the Features Package to filter by"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number of the results"
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "default": 25,
              "maximum": 100
            },
            "description": "How many items to return per page"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "default": "updated_at:desc"
            },
            "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\""
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Features Packages",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FeaturesPackageList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/platform/v1/businesses": {
      "get": {
        "description": "Search for a business by external_reference_id or email. A filter is required for the API to return a result.",
        "parameters": [
          {
            "description": "Filter by email specified",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \"external_id\" specified. **Deprecate**. This will still work, but for new implementation please use external_reference_id.",
            "in": "query",
            "name": "external_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \"external_reference_id\" specified",
            "in": "query",
            "name": "external_reference_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business ID Retrieved",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "businesses": [
                      "a123b456c789"
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Search Businesses",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses?email={email}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Business.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Business Created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "admin_account": {
                      "country_name": "United States",
                      "display_name": "DName",
                      "email": "adminemail@email.com",
                      "first_name": "FName",
                      "language": "en",
                      "last_name": "LName",
                      "phone": "+154863488",
                      "staff_uid": "aaa1234567890abcdef",
                      "user_id": "11111"
                    },
                    "business": {
                      "business_category": "aeroclub",
                      "business_maturity_in_years": "0.5",
                      "country_name": "United States",
                      "id": "1a123b456c789",
                      "landing_page": "Homepage",
                      "name": "Business name",
                      "short_description": "My business description"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create a Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "admin_account": {
                    "properties": {
                      "country_name": {
                        "description": "Business's Country. Must be a valid country name",
                        "type": "string"
                      },
                      "display_name": {
                        "description": "Owner's display name. Up to 255 characters, no HTML tags, no new lines (if not provided, FIRST NAME + LAST NAME will be used)",
                        "type": "string"
                      },
                      "email": {
                        "description": "Owner's email, also used as the business's main email",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "Owner's first name. Up to 255 characters, no HTML tags, no new lines",
                        "type": "string"
                      },
                      "language": {
                        "default": "en",
                        "description": "One of en,es,fr,it,pt,de,pl,nl,en-GB. Default determined by Directory",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "Owner's last name. Up to 255 characters, no HTML tags, no new lines",
                        "type": "string"
                      },
                      "password": {
                        "description": "Owner's password. 6-20 characters",
                        "type": "string"
                      },
                      "phone": {
                        "description": "Business phone number. Up to 20 characters",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email"
                    ],
                    "type": "object"
                  },
                  "business": {
                    "properties": {
                      "address": {
                        "description": "Business address. Up to 255 characters, no HTML tags",
                        "type": "string"
                      },
                      "business_category": {
                        "description": "The business main occupation. Must be a valid business category",
                        "type": "string"
                      },
                      "business_maturity_in_years": {
                        "description": "Business maturity in years. Valid value is one of [null, 0, 0.5, 0.5-2, 2+]",
                        "type": "string"
                      },
                      "country_name": {
                        "description": "The business registered country",
                        "type": "string"
                      },
                      "hide_address": {
                        "default": true,
                        "description": "Whether to show the business address to clients",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Business name. Up to 100 characters, no HTML tags, no new lines",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/businesses/validate_login": {
      "get": {
        "description": "Validates username/password credentials for login. The API will be blocked for the username after 5 failed attempts.",
        "parameters": [
          {
            "description": "Email",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Validated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "authenticated": true
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Validate Login",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/verify_audience_claim": {
      "post": {
        "description": "This API performs entitlement verification for businesses seeking to register with a specific partner. It checks if a business meets the necessary criteria to qualify for partnership enrollment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Claim validated",
            "content": {
              "application/json": {
                "example": {
                  "data": true,
                  "success": true
                }
              }
            }
          }
        },
        "summary": "Verify Audience Claim",
        "tags": [
          "Business"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "unique_validation_identifier": {
                    "description": "The future business' unique validation identifier",
                    "type": "object"
                  }
                },
                "required": [
                  "unique_validation_identifier"
                ],
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/platform/v1/businesses/{business_id}": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business Retrieved",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "business": {
                      "admin_account": {
                        "country_name": "United States",
                        "display_name": "DName",
                        "email": "adminemail@email.com",
                        "first_name": "FName",
                        "language": "en",
                        "last_name": "LName",
                        "phone": "+154863488",
                        "staff_uid": "aaa1234567890abcdef",
                        "user_id": "11111"
                      },
                      "business": {
                        "business_category": "aeroclub",
                        "country_name": "United States",
                        "id": "1a123b456c789",
                        "name": "Business name"
                      }
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business Updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "business": {
                      "admin_account": {
                        "country_name": "United States",
                        "display_name": "DName",
                        "email": "adminemail@email.com",
                        "first_name": "FName",
                        "language": "en",
                        "last_name": "LName",
                        "phone": "+154863488",
                        "staff_uid": "aaa1234567890abcdef",
                        "user_id": "11111"
                      },
                      "business": {
                        "business_category": "aeroclub",
                        "business_maturity_in_years": "0.5",
                        "country_name": "United States",
                        "id": "1a123b456c789",
                        "name": "Business name",
                        "short_description": "My business description"
                      },
                      "integrations": {
                        "plugins": [
                          {
                            "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                            "plan_name": "trial",
                            "plan_started_at": "2022-06-14T09:31:21.000Z",
                            "plan_terminated_at": "2022-06-14T09:31:21.000Z",
                            "site_url": "www.siteaddress.com",
                            "type": "Plugin type"
                          }
                        ]
                      },
                      "meta": {
                        "auth_token": "a1a1a1a1a1",
                        "branding": {
                          "background_color": "#4675d9",
                          "color": "#4DA51E",
                          "profile_picture_url": "https://domainexmaple.com/tomylogourl.jpg",
                          "url_logo": "https://domainexmaple.com/tomylogourl.jpg"
                        },
                        "external_id": "1213444",
                        "external_reference_id": "id123",
                        "identities": [
                          "aaa123",
                          "bbb345",
                          "1a3c4f4h"
                        ],
                        "in_setup": "false",
                        "intents": [
                          "accept_payments_tile",
                          "documents_and_forms"
                        ],
                        "is_template": "true",
                        "marketing_channel": "Client Channel",
                        "note": "Client Note",
                        "plan": {
                          "expires_on": "2022-06-14T09:31:21.000Z",
                          "external_subscription_params": "***",
                          "plan_name": "Essential",
                          "staff_slots": "7"
                        },
                        "tags": "Client tag1, Client tag2"
                      }
                    }
                  },
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Business Updated",
            "content": {
              "application/json": {
                "example": {
                  "message": "Incorrect parameters for update",
                  "status": "Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/update_business"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business": {
                    "properties": {
                      "admin_account": {
                        "properties": {
                          "country_name": {
                            "description": "Business’s Country. Must be a valid country name",
                            "type": "string"
                          },
                          "display_name": {
                            "description": "Owner’s display name. Up to 255 characters, no HTML tags, no new lines (if not provided, FIRST NAME + LAST NAME will be used)",
                            "type": "string"
                          },
                          "email": {
                            "description": "Owner’s email, also used as the business’s main email",
                            "type": "string"
                          },
                          "first_name": {
                            "description": "Owner’s first name. Up to 255 characters, no HTML tags, no new lines",
                            "type": "string"
                          },
                          "language": {
                            "default": "en",
                            "description": "One of en,es,fr,it,pt,de,pl,nl,en-GB,he,keys,pseudo - Default value is determined by the Directory",
                            "type": "string"
                          },
                          "last_name": {
                            "description": "Owner’s last name. Up to 255 characters, no HTML tags, no new lines",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Business phone number. Up to 20 characters",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "business": {
                        "properties": {
                          "address": {
                            "description": "Business address. Up to 255 characters, no HTML tags",
                            "type": "string"
                          },
                          "business_category": {
                            "description": "The business main occupation. Must be a valid business category",
                            "type": "string"
                          },
                          "business_maturity_in_years": {
                            "description": "Business maturity in years. Valid value is one of [null, 0, 0.5, 0.5-2, 2+]",
                            "type": "string"
                          },
                          "country_name": {
                            "description": "The business registered country",
                            "type": "string"
                          },
                          "hide_address": {
                            "default": true,
                            "description": "true",
                            "type": "boolean"
                          },
                          "landing_page": {
                            "description": "Deprecated - Previously used for marketing purposes, up to 255 characters",
                            "type": "string"
                          },
                          "logo_url": {
                            "description": "Business logo URL - A valid image URL. Supporting formats: jpg, jpeg, gif, png, SVG. Make sure the URL includes one of these extensions",
                            "type": "string"
                          },
                          "name": {
                            "description": "Business name. Up to 100 characters, no HTML tags, no new lines",
                            "type": "string"
                          },
                          "phone": {
                            "description": "Business phone number. Up to 20 characters",
                            "type": "string"
                          },
                          "scheduling_disabled": {
                            "description": "Business is not offering online scheduling through client portal",
                            "type": "boolean"
                          },
                          "short_description": {
                            "description": "Short description of the business. Up to 255 characters, no HTML tags",
                            "type": "string"
                          },
                          "time_zone": {
                            "default": "Mountain Time (US & Canada)",
                            "description": "Time zone name from MAPPING object found in: https://api.rubyonrails.org/v4.2.3/classes/ActiveSupport/TimeZone.html . Default value is determined by the Directory",
                            "type": "string"
                          },
                          "website_url": {
                            "description": "Business’s website URL. Must be a valid URL address including http/https.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "integrations": {
                        "properties": {
                          "plugins": {
                            "properties": {
                              "external_id": {
                                "description": "Legacy, replaced by external_reference_id. It may also be referred to as a 'nickname'. Must contain at least one lowercase letter, can include numbers, and dots, at least 5 characters long, platform unique",
                                "type": "string"
                              },
                              "plan_name": {
                                "description": "Package name to subscribe the external party instance to",
                                "type": "string"
                              },
                              "site_url": {
                                "description": "Site url of the external party instance",
                                "type": "string"
                              },
                              "type": {
                                "description": "Plugin type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "external_id",
                              "type",
                              "plan_name"
                            ],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "meta": {
                        "properties": {
                          "branding": {
                            "properties": {
                              "background_color": {
                                "description": "Background color",
                                "type": "string"
                              },
                              "color": {
                                "description": "Brand color",
                                "type": "string"
                              },
                              "cover_picture": {
                                "description": "Cover picture url",
                                "type": "string"
                              },
                              "profile_picture": {
                                "description": "Profile picture url",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "plan": {
                            "properties": {
                              "external_subscription_params": {
                                "description": "External Subscription Parameters (should not be used with recurly type)",
                                "type": "string"
                              },
                              "plan_name": {
                                "description": "Package name to subscribe (for manual type) / recurly plan code (for recurly type)",
                                "type": "string"
                              },
                              "staff_slots": {
                                "description": "Staff sub accounts limit (should not be used with recurly type)",
                                "type": "string"
                              },
                              "type": {
                                "description": "recurly/manual",
                                "type": "string"
                              }
                            },
                            "required": [
                              "plan_name"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "plan"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "business"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/directory/branding": {
      "get": {
        "description": "Get Directory's branding including logo url and colors",
        "parameters": [
          {
            "description": "Whitelabel host name",
            "in": "query",
            "name": "host",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "colors": {
                      "primary": "#374766",
                      "secondary": "#39c190",
                      "text": "#ffffff"
                    },
                    "logo": "https://logo.url/path_to.jpg",
                    "name": "Directory name",
                    "uid": "aaaabbbb"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets Directory's branding",
        "tags": [
          "Directory"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/directory/branding"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/categories": {
      "get": {
        "description": "Get categories list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "categories": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Categories List",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/categories/{category_id}/services": {
      "get": {
        "description": "Get services for a category",
        "parameters": [
          {
            "description": "Category ID",
            "in": "path",
            "name": "category_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "services": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Category Services",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories/{category_id}/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/fields": {
      "get": {
        "description": "Get custom fields list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "fields": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Fields List",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create a New Field",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "default_value": "",
                    "deleted": false,
                    "forms": [
                      "client_card",
                      "leave_details",
                      "share_documents"
                    ],
                    "id": "xo08llu7mfiyocar",
                    "keep_asking": true,
                    "label": "Eye color",
                    "object_type": "contact",
                    "options": [
                      "Brown",
                      "Green"
                    ],
                    "required": false,
                    "type": "dropdown"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create a New Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "default_value": {
                    "description": "Default value for checkbox/opt-in",
                    "type": "boolean"
                  },
                  "forms": {
                    "description": "A list of forms to include this field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "keep_asking": {
                    "description": "Indicates if to keep asking until filled",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "Field label",
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for dropdown field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "required": {
                    "description": "Indicates if the field is required",
                    "type": "boolean"
                  },
                  "type": {
                    "description": "Field type",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/fields/{field_id}": {
      "get": {
        "description": "Get specific field details",
        "parameters": [
          {
            "description": "Field ID",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "field": {}
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Field Details",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Updates a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "default_value": "",
                    "deleted": false,
                    "forms": [
                      "client_card",
                      "leave_details",
                      "share_documents"
                    ],
                    "id": "8m0hvhge0w9m1yuc",
                    "keep_asking": true,
                    "label": "Colors",
                    "object_type": "matter",
                    "options": [
                      "Red",
                      "Green"
                    ],
                    "required": false,
                    "type": "dropdown"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "default_value": {
                    "description": "Default value for checkbox/opt-in",
                    "type": "boolean"
                  },
                  "forms": {
                    "description": "A list of forms to include this field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "keep_asking": {
                    "description": "Indicates if to keep asking until filled",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "Field label",
                    "type": "string"
                  },
                  "options": {
                    "description": "A list of options for dropdown field",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "required": {
                    "description": "Indicates if the field is required",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Deletes a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/forms": {
      "get": {
        "description": "Get forms list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "forms": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Forms List",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a Form.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Form Updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "sections": [
                      {
                        "editable": true,
                        "fields": [
                          {
                            "default_value": "",
                            "id": "qh0ki5qtre0ayi0q",
                            "keep_asking": false,
                            "required": false,
                            "type": "singleline"
                          }
                        ]
                      }
                    ],
                    "type": "client_card"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates a Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "sections": {
                    "description": "A list sections in the form",
                    "items": {
                      "properties": {
                        "fields": {
                          "description": "A list fields in the form",
                          "items": {
                            "properties": {
                              "default_value": {
                                "description": "The default value the field should have",
                                "type": "string"
                              },
                              "id": {
                                "description": "Field Id",
                                "type": "string"
                              },
                              "keep_asking": {
                                "description": "Should a value be requested until one was provided?",
                                "type": "boolean"
                              },
                              "required": {
                                "description": "Is this field required?",
                                "type": "boolean"
                              },
                              "type": {
                                "description": "Field Type",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "type": {
                    "description": "The type of the form",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/tokens": {
      "get": {
        "description": "Get tokens list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "tokens": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Tokens List",
        "tags": [
          "Tokens"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Token Created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "token": "some_token"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Creates a token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "app_id": {
                    "description": "A unique identifier for a 3rd party application. ",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "A unique identifier for a business.",
                    "type": "string"
                  },
                  "directory_id": {
                    "description": "A unique identifier for a partner.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/tokens/revoke": {
      "post": {
        "description": "Revoke token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "revoked": true
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Revoke Token",
        "tags": [
          "Tokens"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens/revoke"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "token": {
                    "description": "Token to revoke",
                    "type": "string"
                  }
                },
                "required": [
                  "token"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/webhook/subscribe": {
      "post": {
        "description": "Subscribe to webhook",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "subscription_id": "12345"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Subscribe to Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/webhook/subscribe"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "entity": {
                    "description": "Entity to subscribe to (e.g. client, appointment)",
                    "type": "string"
                  },
                  "event_type": {
                    "description": "Event type (e.g. created, updated, deleted)",
                    "type": "string"
                  },
                  "url": {
                    "description": "Webhook URL",
                    "type": "string"
                  }
                },
                "required": [
                  "entity",
                  "event_type",
                  "url"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/webhook/unsubscribe": {
      "post": {
        "description": "Unsubscribe from webhook",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "unsubscribed": true
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Unsubscribe from Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/webhook/unsubscribe"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "subscription_id": {
                    "description": "Subscription ID to unsubscribe",
                    "type": "string"
                  }
                },
                "required": [
                  "subscription_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/webhooks": {
      "get": {
        "description": "Get webhooks list",
        "parameters": [
          {
            "description": "Filtering the list of webhooks.\nFilter is a 'deepObject' works with:\n  1. 'entity' - object which listen to event (example: client)\n  2. 'event_type' - type of event to triger hoom (example: created)\n\nExample:\n  <url>?filter[entity]=client&filter[event_type]=created\n",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "subscriptions": {
                      "items": {
                        "properties": {
                          "entity": {
                            "type": "string"
                          },
                          "event_type": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "target_url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "status",
                    "subscriptions"
                  ],
                  "type": "object"
                },
                "example": {
                  "status": "OK",
                  "subscriptions": [
                    {
                      "entity": "client",
                      "event_type": "create",
                      "uid": 32,
                      "url": "https://my.domain.com/path/of/webhook/call"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Webhooks List",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/features": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Features Retrieved",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    "sales_account",
                    "identity_profession_mapping",
                    "verti_override_clone",
                    "checklist_dashboard",
                    "zoom",
                    "two_months_free_benefit",
                    "dashboard_quick_actions",
                    "accept_payments_wizard",
                    "basic_business_features",
                    "scheduling_features",
                    "invoicing_features",
                    "lead_gen_features",
                    "ultimate_features"
                  ],
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Business Features",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/purchased_items": {
      "put": {
        "description": "Updates purchased items for a business",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchased Items updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "bundled": 2,
                    "purchased": 1
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Purchased Items",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "description": "Purchased Items data",
                    "properties": {
                      "bundled": {
                        "description": "Bundled Items",
                        "type": "string"
                      },
                      "purchased": {
                        "description": "Purchased Items",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "Type of a Purchased Items",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/businesses/{business_id}/recurly_data": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "recurly_account": {
                      "account_code": "123456"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Recurly parameters",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/staffs": {
      "get": {
        "description": "Get Staff List and Details (ordered by position field).",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional fetch status active/all",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "staff": [
                      {
                        "active": "true",
                        "blocked_at": "2024-12-22 11:16:18",
                        "business_role_display_name": "Admin",
                        "deleted": "false",
                        "display_name": "FName LName 1",
                        "email": "staff_1@email.com",
                        "first_name": "FName",
                        "id": "1a123b456c789d",
                        "invite_sent": "2015-10-23 13:02:09",
                        "last_name": "LName 1",
                        "mobile_number": "0500000000",
                        "photo": null,
                        "photo_path": "",
                        "professional_title": "Staff Title 1",
                        "role": "admin"
                      },
                      {
                        "active": "true",
                        "blocked_at": null,
                        "business_role_display_name": "User",
                        "deleted": "false",
                        "display_name": "FName LName 2",
                        "email": "staff_2@email.com",
                        "first_name": "FName",
                        "id": "1a123b456c789e",
                        "invite_sent": "2015-10-23 13:02:09",
                        "last_name": "LName 2",
                        "mobile_number": "0500000001",
                        "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                        "photo_path": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                        "professional_title": "Staff Title 2",
                        "role": "user"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Staff Members",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Staff.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "staff": [
                      {
                        "active": "true",
                        "business_role_display_name": "User",
                        "deleted": "false",
                        "display_name": "My Display Name",
                        "email": "my.email@domain.com",
                        "first_name": "First Name",
                        "id": "somerandomuniqueid",
                        "invite_sent": "2015-10-23 13:02:09",
                        "last_name": "Last Name",
                        "mobile_number": "0500000001",
                        "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                        "professional_title": "My Professional Title",
                        "role": "user"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "meta": {
                    "properties": {
                      "invite": {
                        "description": "Send invite to staff on creation",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff": {
                    "properties": {
                      "display_name": {
                        "description": "Display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email Address",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "First Name",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "Last Name",
                        "type": "string"
                      },
                      "role": {
                        "description": "Please use the new Access Control API: https://developers.intandem.tech/v3.0/docs/main-concepts",
                        "type": "string"
                      }
                    },
                    "required": [
                      "email",
                      "display_name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "staff"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/businesses/{business_id}/staffs/{staff_id}": {
      "delete": {
        "description": "Delete Staff Member.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Get Staff Details.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "staff": [
                      {
                        "active": "true",
                        "business_role_display_name": "User",
                        "deleted": "false",
                        "display_name": "My Display Name",
                        "email": "my.email@domain.com",
                        "first_name": "First Name",
                        "id": "somerandomuniqueid",
                        "invite_sent": "2015-10-23 13:02:09",
                        "last_name": "Last Name",
                        "mobile_number": "0500000000",
                        "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                        "professional_title": "My Professional Title",
                        "role": "user"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Staff Member Details",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/staffs/{staff_id}/sessions": {
      "delete": {
        "description": "End Staff Member active sessions and log out from browser.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "revoked": [
                      "25a2de7472aba0f1ff84025b7b354a595a9084412e26c2c481254fcfe300209e"
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "End Staff Member active sessions",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}/sessions"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/wizards": {
      "get": {
        "description": "Gets a list of available wizards",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "completed": false,
                      "flags": {},
                      "id": "6qmnzxhpz102l6y0",
                      "name": "dolorem"
                    },
                    {
                      "completed": false,
                      "flags": {},
                      "id": "hd7ipau3i5jqijpi",
                      "name": "fuga"
                    }
                  ],
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets a list of wizards",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/businesses/{business_id}/wizards/{wizard_name}": {
      "get": {
        "description": "Gets a wizard by given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "completed": false,
                    "flags": {},
                    "id": "6qmnzxhpz102l6y0",
                    "name": "dolorem"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets a wizard by name",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a wizard with given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "completed": false,
                    "flags": {},
                    "id": "6qmnzxhpz102l6y0",
                    "name": "dolorem"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update a wizard",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "completed": {
                    "description": "Completed true/false",
                    "type": "boolean"
                  },
                  "flags": {
                    "description": "Wizard's flags",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/daily_staff_sign_ins": {
      "get": {
        "description": "Get daily sign-in records for the business's staff members within a specified date range",
        "parameters": [
          {
            "description": "Required filter by date range. Format: YYYY-MM-DD<br /> Example: `filter[start_date][eq]=2000-01-01&filter[end_date][eq]=2000-02-01`.<br /> The results include both the start and end dates, with a maximum range of 31 days.",
            "in": "query",
            "name": "filter",
            "required": true,
            "x-example": "YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "business_uid": {
                          "type": "string"
                        },
                        "sign_ins_by_platform": {
                          "items": {
                            "properties": {
                              "platform": {
                                "type": "string"
                              },
                              "sign_ins_by_date": {
                                "properties": {
                                  "date": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "business_uid": "j2pur8uyc6ixpi7d",
                    "sign_ins_by_platform": [
                      {
                        "platform": "mobile",
                        "sign_ins_by_date": {
                          "2023-11-10": [
                            "6oyq22tigyk680xy",
                            "519ca2f28b1a4b9a",
                            "2f28b1atigy22tik"
                          ]
                        }
                      },
                      {
                        "platform": "desktop",
                        "sign_ins_by_date": {
                          "2023-11-16": [
                            "6oyq22tigyk680xy"
                          ]
                        }
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "errors": [
                    {
                      "code": "invalid",
                      "field": "start_date",
                      "message": "start_date field must be a valid date parameter. Example, 2000-01-30"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Daily Staff Sign-ins",
        "tags": [
          "Staff activity"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/staffs/v1/daily_staff_sign_ins"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/staffs/{uid}": {
      "put": {
        "description": "Updates a staff's properties",
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "User id of the staff to be updated",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "staff": {
                      "business_role_display_name": null,
                      "created_at": "2025-08-05T09:56:05.197+03:00",
                      "display_name": "Eve Schulist",
                      "email": "clarice.schimmel@hermann.com",
                      "first_name": "Eve",
                      "last_name": "Schulist",
                      "role": "admin",
                      "uid": "b6d0d3a246169924",
                      "updated_at": "2025-08-05T09:56:05.280+03:00"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates a staff's properties",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/staffs/v1/staffs/{uid}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "staff": {
                    "properties": {
                      "active": {
                        "description": "Staff active/inactive. A valid value [true/false].",
                        "type": "boolean"
                      },
                      "display_name": {
                        "description": "Staff display name. No longer than 255 characters, no HTML or new lines.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Staff email. Valid email format, unique email.",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "Staff first name. No longer than 255 characters, no HTML or new lines.",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "Staff last name. No longer than 255 characters, no HTML or new lines.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Please use the new Access Control API: https://developers.intandem.tech/v3.0/docs/main-concepts",
                        "type": "string"
                      },
                      "sms_notifications_on": {
                        "description": "Staff SMS notifications on/off. A valid value [true/false].",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "staff"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/bookings": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Booking Created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "booking": {
                      "business_id": "7f6d386440db74ab",
                      "client_id": "1kfvtps4a4wlh3lc",
                      "conversation_id": "ugd2qqidl75wrto6",
                      "created_at": "2020-01-19T07:44:21Z",
                      "duration": 60,
                      "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                      "id": "v8mvcenb8y3wej2n",
                      "service_id": "9fmuaghb4v7sif9r",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d91uh92bclwzg",
                      "start_time": "2020-01-22T13:00:00Z",
                      "status": "scheduled",
                      "time_zone": "UTC",
                      "title": "Imm + free",
                      "type": "appointment/event"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          },
          "422": {
            "description": "Booking Creation Failure",
            "content": {
              "application/json": {
                "example": {
                  "error": "error text",
                  "error_code": "TIMESLOT_UNAVAILABLE/ALREADY_REGISTERED",
                  "status": "Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create New Booking [Business]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/bookings"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "arrival_window_value": {
                    "description": "Optional for appointment only .Arrival window value is in minutes and limited to 540 (9 hours)",
                    "type": "integer"
                  },
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "client_id": {
                    "description": "Client uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  },
                  "interaction_details": {
                    "description": "Address. Required when service location set to: Client will set the address at booking",
                    "type": "string"
                  },
                  "matter_uid": {
                    "description": "Matter uid",
                    "type": "string"
                  },
                  "service_id": {
                    "description": "Service uid. Required for appointment.",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "Staff uid. Required for appointment.",
                    "type": "string"
                  },
                  "start_time": {
                    "description": "ISO 8601 format. Required for appointment.",
                    "type": "string"
                  },
                  "time_zone": {
                    "description": "Default is set to UTC if not provided",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/bookings/accept": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Accept Batch Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "batch_response": [
                      {
                        "error": null,
                        "id": "0or7alzpb99ye3lo",
                        "success": true
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          },
          "201": {
            "description": "Booking Accepted",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "booking": {
                      "actions": [
                        {
                          "name": "reschedule",
                          "name_h": "Reschedule"
                        },
                        {
                          "name": "edit",
                          "name_h": "Edit"
                        },
                        {
                          "name": "cancel",
                          "name_h": "Cancel Appointment"
                        },
                        {
                          "name": "follow_up",
                          "name_h": "Send a Note"
                        }
                      ],
                      "id": "xgnm9g2ysine1e5b",
                      "no_show": true,
                      "start_time": "2025-08-07T09:55:52.773+03:00",
                      "start_time_utc": "2025-08-07T09:55:52.773+03:00",
                      "state": "schedule",
                      "title": "Appointment"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Accept a Booking [Business]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "booking_id": {
                    "description": "Booking (appointment/event) uid",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id",
                  "booking_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/bookings/cancel": {
      "put": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Cancel Batch Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "batch_response": [
                      {
                        "id": "1a2h20dwb6iakgqk",
                        "success": true
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          },
          "201": {
            "description": "Booking Canceled",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "booking": {
                      "business_id": "6c52c83af92a7819",
                      "client_id": "7n8ia1nmvuhqqn9g",
                      "conversation_id": "qy0eddp9i3igw3ko",
                      "created_at": "2020-01-19T07:44:21Z",
                      "duration": 60,
                      "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                      "id": "93vcpp7i9d5wowo0",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "f5fd126aa3d298be",
                      "start_time": "2025-08-07T09:55:54.048+03:00",
                      "status": "cancelled",
                      "time_zone": "UTC",
                      "title": "Imm + free",
                      "type": "appointment/event"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Cancel a Booking [Business]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "booking_id": {
                    "description": "Booking (appointment/event) uid. (Can also be an array for batch cancel)",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "event_instance_id": {
                    "description": "Event instance uid. Required for event.",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id",
                  "booking_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/bookings/complete": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Accept Batch Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "batch_response": [
                      {
                        "error": null,
                        "id": "oo43ef763vtx3sj9",
                        "success": true
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "booking": {
                      "actions": [
                        {
                          "name": "reschedule",
                          "name_h": "Reschedule"
                        },
                        {
                          "name": "edit",
                          "name_h": "Edit"
                        },
                        {
                          "name": "cancel",
                          "name_h": "Cancel Appointment"
                        },
                        {
                          "name": "complete",
                          "name_h": "Mark as completed"
                        }
                      ],
                      "id": "5f2y6i6z2amzdqa2",
                      "no_show": false,
                      "start_time": "2025-08-06T11:20:00.000Z",
                      "start_time_utc": "2025-08-06T11:20:00.000Z",
                      "state": "scheduled",
                      "title": "Realigned maximized project"
                    }
                  },
                  "status": "OK",
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Mark booking as no show",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/bookings/complete"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "booking_id": {
                    "description": "Booking UID",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business UID",
                    "type": "string"
                  },
                  "mark_as_no_show": {
                    "description": "Mark as no show true/false",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/bookings/{booking_id}": {
      "put": {
        "parameters": [
          {
            "description": "Booking (appointment/event) uid",
            "in": "path",
            "name": "booking_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking Updated",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "booking": {
                      "approval_mode": "immediate",
                      "category_name": "My Services",
                      "charge_type": "paid",
                      "client_id": "e04mjn2h6r5grnis",
                      "conversation_id": "0fkm8euoikb3oqzr",
                      "currency": "USD",
                      "depth": "deep",
                      "description": null,
                      "duration": 60,
                      "end_time": "2020-08-28T15:00:00.000Z",
                      "image_url": "",
                      "interaction_details": "Olsztyn, Poland",
                      "interaction_type": "business_location",
                      "invoice_payment_status_uid": null,
                      "invoices": [],
                      "no_show": false,
                      "notes": null,
                      "payable": true,
                      "payment": null,
                      "payment_id": null,
                      "price": "1.0",
                      "service_id": "yfewza2xcbd2whvm",
                      "staff_id": "4a90d8yacekm6j0w",
                      "staff_name": "A",
                      "start_time": "2020-08-28T14:00:00.000Z",
                      "state": "scheduled",
                      "suggested_times": [],
                      "suggested_times_end": [],
                      "time_zone": "(GMT-06:00) Central Time (US & Canada)",
                      "title": "Suggest local",
                      "type": "appointment",
                      "uid": "5t29s4pvv3cv8qpn"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update Booking Details [Business]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allow_double_booking": {
                    "description": "Should allow overlapping with a different booking if time/duration is changed (True by default)",
                    "type": "boolean"
                  },
                  "auto_follow_up_hours": {
                    "description": "How many hours after the booking to send the automatic follow up message",
                    "type": "number"
                  },
                  "booking_id": {
                    "description": "Booking (appointment/event) uid",
                    "type": "string"
                  },
                  "business_id": {
                    "description": "Business uid",
                    "type": "string"
                  },
                  "currency": {
                    "description": "The currency of the booking",
                    "type": "string"
                  },
                  "duration": {
                    "description": "The duration of the booking",
                    "type": "number"
                  },
                  "interaction_details": {
                    "description": "Details of the meeting (address/ phone number",
                    "type": "string"
                  },
                  "interaction_type": {
                    "description": "One of: (client_location|client_phone|business_phone|default_business_location|business_location|skype|online)",
                    "type": "string"
                  },
                  "meeting_reminder_sms_1": {
                    "description": "Should send the client an SMS with the first reminder",
                    "type": "boolean"
                  },
                  "meeting_reminder_sms_2": {
                    "description": "Should send the client an SMS with the second reminder",
                    "type": "boolean"
                  },
                  "message": {
                    "description": "A message to be sent to the client after updating the booking",
                    "type": "string"
                  },
                  "notify_client": {
                    "description": "If true a message about the update with the 'message' field would be sent to the client",
                    "type": "boolean"
                  },
                  "padding": {
                    "description": "The padding duration before of the booking",
                    "type": "number"
                  },
                  "price": {
                    "description": "The price of the booking",
                    "type": "number"
                  },
                  "remind_before_in_hours_1": {
                    "description": "How many hours before the booking to send the first reminder",
                    "type": "number"
                  },
                  "remind_before_in_hours_2": {
                    "description": "How many hours before the booking to send the second reminder",
                    "type": "number"
                  },
                  "sms_booking_confirmation": {
                    "description": "Should send the client an SMS with the booking confirmation",
                    "type": "boolean"
                  },
                  "start_time": {
                    "description": "The start time of the booking in UTC (ISO 8601 format)'",
                    "type": "string"
                  },
                  "title": {
                    "description": "The title of the booking",
                    "type": "string"
                  }
                },
                "required": [
                  "business_id",
                  "booking_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/bulk_create": {
      "put": {
        "description": "External app bulk create external items",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "44d24f8860cf6d63",
                    "uid": "9g08urplg8lp1rc5"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app bulk create external items",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/bulk_create"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "external_item": {
                    "description": "External item to create / update",
                    "properties": {
                      "end_date": {
                        "description": "End Date",
                        "type": "string"
                      },
                      "external_calendar_uid": {
                        "description": "External Calendar Uid",
                        "type": "string"
                      },
                      "external_id": {
                        "description": "id",
                        "type": "string"
                      },
                      "external_title": {
                        "description": "Title",
                        "type": "string"
                      },
                      "last_modification": {
                        "description": "Last modification of the item",
                        "type": "string"
                      },
                      "rrule": {
                        "description": "Array of rrules (recurrence rules)",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "start_date": {
                        "description": "Start date",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "external_items": {
                    "description": "Array of external items",
                    "items": {
                      "description": "External item to create / update",
                      "properties": {
                        "end_date": {
                          "description": "End Date",
                          "type": "string"
                        },
                        "external_calendar_uid": {
                          "description": "External Calendar Uid",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "id",
                          "type": "string"
                        },
                        "external_title": {
                          "description": "Title",
                          "type": "string"
                        },
                        "last_modification": {
                          "description": "Last modification of the item",
                          "type": "string"
                        },
                        "rrule": {
                          "description": "Array of rrules (recurrence rules)",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "start_date": {
                          "description": "Start date",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/bulk_deactivate": {
      "put": {
        "description": "External app bulk deactivate external items",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "1a86d76432779692",
                    "uid": "worejslos7j2mf26"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app bulk deactivate external items",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/bulk_deactivate"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "external_items_to_deactivate": {
                    "description": "Array of external_ids to deactivate",
                    "items": {
                      "description": "translation missing: en.external-calendar-items-controller.parameters.external_item.external_id.description.description",
                      "properties": {
                        "external_id": {
                          "description": "id",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync",
                  "external_items_to_deactivate"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/connect": {
      "put": {
        "description": "External app connect",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "f67acee343b4a38b",
                    "uid": "9t1dcewjh54k3t91"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app connect",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/connect"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/deactivate_external_calendar": {
      "put": {
        "description": "External app deactivate external calendar",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "success": true
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app deactivate external calendar",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/deactivate_external_calendar"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "external_calendar_uid": {
                    "description": "External Calendar Uid",
                    "type": "string"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "external_calendar_uid"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/disable": {
      "put": {
        "description": "External app disable",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "941ddd0324f01ba5",
                    "uid": "0af3jn4rz09ur76u"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app disable",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/disable"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/disconnect": {
      "put": {
        "description": "External app disconnect",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "23732dd8356b9b69",
                    "uid": "w388fga3hg2hmptv"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app disconnect",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/disconnect"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/report_sync_status": {
      "put": {
        "description": "External app report_sync_status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "success": true
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app report_sync_status",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/report_sync_status"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "params": {
                    "description": "Status report of the sync (export and import)",
                    "properties": {
                      "is_sync_successful": {
                        "description": "Boolean",
                        "type": "boolean"
                      },
                      "unsynced_calendars": {
                        "description": "Array of unsynced calendars",
                        "items": {
                          "description": "Unsynced calendar",
                          "properties": {
                            "imported_calendar_name": {
                              "description": "The calendar's name of the unsynced calendar",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "unsynced_items": {
                        "description": "Array of unsynced items",
                        "items": {
                          "description": "Unsynced item",
                          "properties": {
                            "entity_uid": {
                              "description": "The entity uid of the unsynced item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync",
                  "params"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/start_export": {
      "put": {
        "description": "External app start_export",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "d18390b5ceeb9256",
                    "uid": "16dcvpz9p1js7nn5"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app start_export",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/start_export"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/external_calendar_items/stop_import": {
      "put": {
        "description": "External app stop import",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "account": "fakeemail@gmail.com",
                    "enabled": false,
                    "is_business_disable_ics": false,
                    "is_external_app": true,
                    "is_private_export": true,
                    "is_private_import": true,
                    "is_staff_disable_ics": false,
                    "provider": "google_v3",
                    "should_export": true,
                    "should_import": true,
                    "staff_uid": "305869f5fb05b52d",
                    "uid": "ac82np5xx16ae6st"
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "External app stop import",
        "tags": [
          "ExternalCalendarItems"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/external_calendar_items/stop_import"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "calendar_sync": {
                    "description": "The external app provider and the requested email to sync to (by the staff)",
                    "properties": {
                      "account": {
                        "description": "The requested email to sync to by the staff (e.g. aaa@gmail.com)",
                        "type": "string"
                      },
                      "provider": {
                        "description": "The external app provider (e.g. google_v3)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "staff_uid": {
                    "description": "Staff UID",
                    "type": "string"
                  }
                },
                "required": [
                  "staff_uid",
                  "calendar_sync"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/time_slots": {
      "post": {
        "description": "General availability - Create new time slot",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "general_availability": {
                      "id": 123,
                      "time_slots_by_day": [
                        {
                          "day": 0,
                          "enabled": true,
                          "slots": [
                            {
                              "end_time": "22:00",
                              "id": "40ci67hckste9xax",
                              "start_time": "20:00"
                            }
                          ]
                        },
                        {
                          "day": 1,
                          "enabled": true,
                          "slots": [
                            {
                              "end_time": "17:00",
                              "id": "phmiv974egfuyx84",
                              "start_time": "09:00"
                            }
                          ]
                        },
                        {
                          "day": 2,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 3,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 4,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 5,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 6,
                          "enabled": false,
                          "slots": []
                        }
                      ],
                      "uid": "sjq2twnw8z0h33f0"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "General availability - Create new time slot",
        "tags": [
          "Weekly availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/time_slots"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "day": {
                    "description": "A number representing the day of the week (0 - sunday, 6 - saturday)",
                    "type": "string"
                  },
                  "end_time": {
                    "description": "End time (only the hour)",
                    "type": "string"
                  },
                  "start_time": {
                    "description": "Start time (only the hour)",
                    "type": "string"
                  },
                  "weekly_availability_uid": {
                    "description": "Weekly availability uid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/time_slots/{time_slot_uid}": {
      "delete": {
        "description": "General availability - Remove time slot",
        "parameters": [
          {
            "description": "time slot uid",
            "in": "path",
            "name": "time_slot_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "general_availability": {
                      "id": 123,
                      "time_slots_by_day": [
                        {
                          "day": 0,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 1,
                          "enabled": true,
                          "slots": [
                            {
                              "end_time": "17:00",
                              "id": "h6v5fxwr3f0xe4vf",
                              "start_time": "09:00"
                            }
                          ]
                        },
                        {
                          "day": 2,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 3,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 4,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 5,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 6,
                          "enabled": false,
                          "slots": []
                        }
                      ],
                      "uid": "63q3l1lex42awyzc"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "General availability - Remove time slot",
        "tags": [
          "Weekly availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/time_slots/{time_slot_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "General availability - Update time slot",
        "parameters": [
          {
            "description": "time slot uid",
            "in": "path",
            "name": "time_slot_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "general_availability": {
                      "id": 123,
                      "time_slots_by_day": [
                        {
                          "day": 0,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 1,
                          "enabled": true,
                          "slots": [
                            {
                              "end_time": "17:00",
                              "id": "0p92ib1eqvmybmdq",
                              "start_time": "09:00"
                            },
                            {
                              "end_time": "22:00",
                              "id": "zbjrl4i2v946uyek",
                              "start_time": "20:00"
                            }
                          ]
                        },
                        {
                          "day": 2,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 3,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 4,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 5,
                          "enabled": false,
                          "slots": []
                        },
                        {
                          "day": 6,
                          "enabled": false,
                          "slots": []
                        }
                      ],
                      "uid": "7qyp5axp610aq39b"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "General availability - Update time slot",
        "tags": [
          "Weekly availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/scheduling/v1/time_slots/{time_slot_uid}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "end_time": {
                    "description": "End time (only the hour)",
                    "type": "string"
                  },
                  "start_time": {
                    "description": "Start time (only the hour)",
                    "type": "string"
                  },
                  "weekly_availability_uid": {
                    "description": "Weekly availability uid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/attributes": {
      "get": {
        "description": "Gets business attributes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "attributes": {
                      "account_blocked": false,
                      "app_host": "app.dev-vcita.me:7200",
                      "brand_name": "vcita",
                      "business_name": "business8b4b70964bc715a0",
                      "dashboard_as_an_app": false,
                      "directory_settings": {
                        "cancel_page_url": "",
                        "change_password_url": null,
                        "custom_support_url": "",
                        "default_support_url": "www.dev-vcita.me:3000/contact",
                        "directory_manages_users": false,
                        "enable_upgrade_page_tab": null,
                        "external_backoffice_url": null,
                        "faq_url": null,
                        "has_parent_directory": null,
                        "help_links": null,
                        "is_co_branded_managed": false,
                        "is_managed_partner": null,
                        "is_whitelabel": false,
                        "logout_url": null,
                        "managed_login_url": null,
                        "menu_powered_by": null,
                        "mobile_app_android": null,
                        "mobile_app_ios": null,
                        "partners_dashboard_url": "https://localhost:2019/manage",
                        "review_site_display_name": null,
                        "review_site_url": null,
                        "upgrade_url": null,
                        "whitelabel_configuration_key": null
                      },
                      "is_upgradeable": false,
                      "locale": "en",
                      "matter_term": "clients",
                      "multistaff": false,
                      "partner_admin": false,
                      "partner_operator": false,
                      "photo_path": "",
                      "scheduled_payments_eligible": false,
                      "time_format": "12h"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets business attributes",
        "tags": [
          "Business Attributes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/attributes"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/branding": {
      "get": {
        "description": "Gets the branding of the business if possible, and if not gets the directory's branding",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "branding": {
                      "colors": {
                        "primary": "#0c315e",
                        "secondary": "#0093B8",
                        "text": "#ffffff"
                      },
                      "logo": null,
                      "powered_by": {
                        "intandem_goto_url": null,
                        "intandem_logo_bright": null,
                        "intandem_logo_dark": null,
                        "parent_goto_url": null,
                        "parent_logo_bright": null,
                        "parent_logo_dark": null
                      }
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets the branding of the business",
        "tags": [
          "Business Branding"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/branding"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/identities": {
      "delete": {
        "description": "Remove identities of business",
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "business": {
                      "identities": [
                        "1234567890"
                      ],
                      "uid": "33d51bd5187ecfe0"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Remove business identities",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/identities"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identities": {
                    "description": "Identities to add to business or a single identity of verti",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      },
      "get": {
        "description": "Get identities of business",
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "business": {
                      "identities": [],
                      "uid": "33d51bd5187ecfe0"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get business identities",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/identities"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Add business identities to optimize the business terminology, settings, and content\n* The provided identities must exist in the system\n* Each call adds the provided identities to the list of identities already set for the business\n * Provide one identity only when running Verti. Providing multiple identities will fail.\n* For best practice, when creating an account, do one of the following:\n  1. Don't assign an identity - when not assigning an identity, Verti uses the default identity content and settings. Later, when re-running Verti with an identity, it will overwrite the account settings and content with the provided identity settings and will append its content.\n  2. Assign the account an identity that was marked as \"Generic\" - Verti only clones its content and not the settings. Later when re-running Verti, it will add the additional identity's content and settings.",
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "business": {
                      "identities": [
                        "1234567890"
                      ],
                      "uid": "33d51bd5187ecfe0"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update business identities",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/identities"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business": {
                    "properties": {
                      "execute_verti": {
                        "description": "Re-runs Verti when set to true",
                        "type": "boolean"
                      },
                      "identities": {
                        "description": "Identities to add to business or a single identity of verti",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/usage/last_3_months_activity": {
      "get": {
        "description": "Get an account's activity report for the <b>last 3 months</b>, including the following information: <ol> <li>Number of payments received</li> <li>Number of conversations started</li> <li>Number of bookings, including appointments booked and event attendance</li> <li>Number of campaigns created</li> <li>Number of documents shared by the business</li> <li>Total Number of clients</li> </ol> <b>Note:</b> Currently, the API has a rate limit of 1 request per 5 seconds. Results are cached for 24 hours ",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "activities": {
                          "properties": {
                            "bookings": {
                              "description": "Total number of bookings in the last 3 months",
                              "type": "integer"
                            },
                            "campaigns": {
                              "description": "Total number of campaigns in the last 3 months",
                              "type": "integer"
                            },
                            "clients": {
                              "description": "Total number of clients",
                              "type": "integer"
                            },
                            "conversations": {
                              "description": "Total number of conversations in the last 3 months",
                              "type": "integer"
                            },
                            "documents": {
                              "description": "Total number of documents in the last 3 months",
                              "type": "integer"
                            },
                            "payments": {
                              "description": "Total number of payments in the last 3 months",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "business_uid": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "data": {
                    "activities": {
                      "bookings": 13,
                      "campaigns": 16,
                      "clients": 11,
                      "conversations": 12,
                      "documents": 15,
                      "payments": 14
                    },
                    "business_uid": "j2puryc6ixpi7d"
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "field": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "example": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Unauthorized"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Business account usage in the last 3 months",
        "tags": [
          "Business account usage"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/accounts/v1/usage/last_3_months_activity"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/oauth/token": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Code Exchanged For Access Token",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "eade05e0ee958ed139b7431b1a630bff95260178699ddf88cbd86a32d2ac708c",
                  "created_at": 1754377015,
                  "expires_in": 631139040,
                  "token_type": "Bearer"
                }
              }
            }
          }
        },
        "summary": "Exchanges a OAuth Code for an Access Token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///oauth/token"
        },
        "x-auth-type": "None",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "client_id": {
                    "description": "The Client ID for the Developer App",
                    "type": "string"
                  },
                  "client_secret": {
                    "description": "The Client Secret for the Developer App",
                    "type": "string"
                  },
                  "code": {
                    "description": "A code that was generated as part of the OAuth Code Authorization Flow",
                    "type": "string"
                  },
                  "grant_type": {
                    "description": "Currently \"authorization_code\" is the only supported value",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The Redirect URI used when generating the code",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/oauth/userinfo": {
      "get": {
        "responses": {
          "200": {
            "description": "Got user info",
            "content": {
              "application/json": {
                "example": {
                  "brand_host": "695b14b22b8483c6.myclients.me",
                  "brand_theme": {
                    "colors": {
                      "primary": "#131a46",
                      "secondary": "#d1b050",
                      "text": "#ffffff"
                    },
                    "locale": "en",
                    "logo": null,
                    "name": null,
                    "powered_by": {
                      "intandem_goto_url": null,
                      "intandem_logo_bright": null,
                      "intandem_logo_dark": null,
                      "parent_goto_url": null,
                      "parent_logo_bright": null,
                      "parent_logo_dark": null
                    }
                  },
                  "business_id": "ed469f8764326a66",
                  "business_name": "business79043ef98e0f7e43",
                  "business_uid": "ed469f8764326a66",
                  "directory_uid": "u6g6s4q3386zs6j2",
                  "email": "tiara.bradtke@kautzer-considine.biz",
                  "role": "owner",
                  "sub": "a383717599bf1893",
                  "type": "staff"
                }
              }
            }
          }
        },
        "summary": "Get authenticated user info",
        "tags": [
          "OpenID"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///oauth/userinfo"
        },
        "x-auth-type": "None",
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/business_administration/staff_quick_action_lists": {
      "get": {
        "tags": [
          "Staff Quick Action Lists"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get relevant quick action lists per staff",
        "description": "A quick action entity represents a configurable shortcut displayed in the staff's dashboard, allowing personalized access to key system functions.",
        "parameters": [
          {
            "name": "show_only_visible",
            "in": "query",
            "description": "Include this param in the search query to retrieve only the visible actions",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StaffQuickActionList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing, invalid or not allowed to access the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "401 Unauthorized"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "error": "The requested resource was not found."
                }
              }
            }
          }
        }
      }
    },
    "/v3/business_administration/staff_quick_action_lists/{staff_uid}": {
      "put": {
        "tags": [
          "Staff Quick Action Lists"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update quick action lists for a specific staff member",
        "description": "Update the order and visibility of quick actions for a specific staff member",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the staff member",
            "schema": {
              "type": "string"
            },
            "example": "staff_12345"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quick_actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the quick action"
                        },
                        "order": {
                          "type": "integer",
                          "description": "Display order of the quick action"
                        },
                        "visible": {
                          "type": "boolean",
                          "description": "Controls whether this quick action appears on the staff dashboard. Note: A maximum of 6 quick actions can be set to visible at any time."
                        }
                      },
                      "required": [
                        "name",
                        "order",
                        "visible"
                      ]
                    }
                  }
                },
                "required": [
                  "quick_actions"
                ],
                "example": {
                  "quick_actions": [
                    {
                      "name": "point_of_sale",
                      "order": 0,
                      "visible": true
                    },
                    {
                      "name": "appointment",
                      "order": 1,
                      "visible": true
                    },
                    {
                      "name": "event",
                      "order": 2,
                      "visible": true
                    },
                    {
                      "name": "request_signature",
                      "order": 3,
                      "visible": false
                    },
                    {
                      "name": "schedule_payment",
                      "order": 4,
                      "visible": true
                    },
                    {
                      "name": "portal",
                      "order": 5,
                      "visible": false
                    },
                    {
                      "name": "announcement",
                      "order": 6,
                      "visible": false
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StaffQuickActionList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error. The request is invalid. (missing required fields, invalid values, etc.)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "code": "missing_field",
                      "message": "Missing mandatory field."
                    },
                    {
                      "code": "invalid",
                      "message": "more than 6 quick actions are set to visible."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing, invalid or not allowed to access the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "401 Unauthorized"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "success": false,
                  "error": "Staff Not Found: The specified staff does not exist."
                }
              }
            }
          }
        }
      }
    },
    "/v3/business_administration/staff_members/{uid}": {
      "get": {
        "summary": "Retrieve a StaffMember",
        "description": "Retrieve a StaffMember Available for Staff Token",
        "tags": [
          "Staff Member"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the staff member",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Staff member retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/business_administration/staff_member.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Staff member not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a StaffMember",
        "description": "Update a StaffMember. Available for Staff Token",
        "tags": [
          "Staff Member"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the staff member",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffMemberUpdate"
              },
              "example": {
                "first_name": "Jonathan",
                "last_name": "Doe",
                "display_name": "Dr. Jonathan Doe",
                "email": "jonathan.doe@example.com",
                "professional_title": "Senior Medical Consultant",
                "country_name": "United Kingdom",
                "mobile_number": "7123456789",
                "photo_url": "https://storage.example.com/staff/profile/12345_new.jpg",
                "default_homepage": "calendar",
                "email_signature": "Kind regards,\nJonathan Doe, MD\nSenior Medical Consultant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Staff member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/business_administration/staff_member.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Staff member not found"
          },
          "409": {
            "description": "Email already in use by another staff member"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/business_roles": {
      "get": {
        "summary": "Get all BusinessRoles",
        "description": "Get a list of BusinessRoles\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BusinessRolesList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a BusinessRole",
        "description": "Create a new role for a business\n\nAvailable for **Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "A unique readable code for the role"
                  },
                  "name": {
                    "type": "string",
                    "description": "The role name as it's presented in the UI. By default, it will be assigned from the original permission, but can be overridden for a specific business"
                  },
                  "description": {
                    "type": "string",
                    "description": "The role description as it’s presented in the UI. By default, it will be assigned from the original permission, but can be overridden for a specific business"
                  },
                  "permissions": {
                    "type": "array",
                    "description": "A list of permissions that are assigned to the role by default",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The unique identifier (key) of the Permission"
                        },
                        "allow": {
                          "type": "boolean",
                          "description": "A flag indicating if this permission is by default assigned to the role"
                        }
                      }
                    }
                  },
                  "is_editable": {
                    "type": "boolean",
                    "description": "A flag to indicate if the role can be edited by the business. By default, system roles are not editable. Can not be changed after creation",
                    "default": true
                  }
                },
                "required": [
                  "code",
                  "name",
                  "description",
                  "permissions"
                ],
                "example": {
                  "code": "admin",
                  "name": "Admin",
                  "description": "Admin role. Typically has access to all features in the system",
                  "is_editable": true,
                  "permissions": [
                    {
                      "key": "payments.invoices.export",
                      "allow": true
                    },
                    {
                      "key": "payments.invoices.import",
                      "allow": true
                    },
                    {
                      "key": "payments.invoices.view",
                      "allow": true
                    },
                    {
                      "key": "payments.invoices.delete",
                      "allow": true
                    },
                    {
                      "key": "payments.invoices.create",
                      "allow": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/businessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/business_roles/{uid}": {
      "get": {
        "summary": "Retrieve a BusinessRole",
        "description": "Retrieve a specific BusinessRole  based on it’s unique identifier (UID)\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the BusinessRole",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/businessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a BusinessRole",
        "description": "Create a new role for a business\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the BusinessRole",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The role name as it's presented in the UI. By default, it will be assigned from the original permission, but can be overriden for a specific business"
                  },
                  "description": {
                    "type": "string",
                    "description": "The role description as it’s presented in the UD. By default, will be assigned from the original permission, but can be overriden for a specific business"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The unique identifier (key) of the Permission"
                        },
                        "allow": {
                          "type": "boolean",
                          "description": "A flag indicating if this permission is by default assigned to the role"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/businessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a BusinessRole",
        "description": "Delete a specific BusinessRole  based on it’s unique identifier (UID)\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the BusinessRole",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/permissions": {
      "get": {
        "summary": "Get all Permissions",
        "description": "Get a list of Permissions\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "position:desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PermissionsList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Permission"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/staff_business_roles": {
      "get": {
        "summary": "Get all StaffBusinessRoles",
        "description": "Get a list of StaffBusinessRoles\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": false,
            "in": "query",
            "description": "The unique identifier (UID) of the business account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "business_role_uid",
            "required": false,
            "in": "query",
            "description": "The unique identifier (UID) of the business account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StaffBusinessRolesList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a StaffBusinessRole",
        "description": "Create a new StaffBusinessRole for a staff\n\nAvailable for **Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "staff_uid": {
                    "type": "string",
                    "description": "The unique identifier (UID) of the staff member"
                  },
                  "business_role_uid": {
                    "type": "string",
                    "description": "The unique identifier (UID) of the associated StaffBusinessRole"
                  }
                },
                "required": [
                  "staff_uid",
                  "business_role_uid"
                ],
                "example": {
                  "staff_uid": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "business_role_uid": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffBusinessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/staff_business_roles/{staff_uid}": {
      "get": {
        "summary": "Retrieve a StaffBusinessRole",
        "description": "Retrieve a StaffBusinessRole based on the unique identifier of staff_uid (staff_uid)\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the staff member assigned to this BusinessRole",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffBusinessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a StaffBusinessRole",
        "description": "Update the business role for a staff member. **All overrides will be removed** and user will need to reapply them if the old role is reassigned.\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the StaffBusinessRole",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "business_role_uid": {
                    "type": "string",
                    "description": "The unique identifier (UID) of the BusinessRole assigned"
                  }
                },
                "required": [
                  "staff_uid",
                  "business_role_uid"
                ],
                "example": {
                  "business_role_uid": "d290f1ee-6c54-4b01-90e6-d701748f0851"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffBusinessRole.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Business Role"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/staff_permission_overrides_lists/{staff_uid}": {
      "get": {
        "summary": "Retrieve a Staff Permissions Overrides List",
        "description": "Retrieve a StaffPermissionOverrideList based on a staff member's unique identifier (staff_uid)\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the staff member",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffPermissionOverridesList.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Permission Override List"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a Staff Permissions Overrides List",
        "description": "Update a Staff Permission Overrides List based on staff UID and a list of permissions. The list supplied will append new permissions and override exsiting permissions assigned to this staff.\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the staff member",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The unique identifier (UID) of the Permission"
                        },
                        "state": {
                          "type": "string",
                          "description": "allow, deny or inherit. When inherit is used, the permission override is removed and the default permission from the BusinessRole is used",
                          "enum": [
                            "allow",
                            "deny",
                            "inherit"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "staff_uid",
                  "permissions"
                ],
                "example": {
                  "staff_uid": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                  "permissions": [
                    {
                      "key": "payments.invoices.export",
                      "state": "allow"
                    },
                    {
                      "key": "payments.invoices.import",
                      "state": "allow"
                    },
                    {
                      "key": "payments.invoices.view",
                      "state": "deny"
                    },
                    {
                      "key": "payments.invoices.delete",
                      "state": "inherit"
                    },
                    {
                      "key": "payments.invoices.create",
                      "state": "allow"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffPermissionOverridesList.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Permission Override List"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Remove all permission overrides",
        "description": "Removes all assigned overrides based on a staff member's unique identifier (staff_uid).\n\nThis will return user to its original Business Role defaults\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "staff_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the staff member",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Permission Override List"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/access_control/staff_permissions/": {
      "get": {
        "summary": "Get All StaffPermissions",
        "description": "Get a list of staff Permissions. You must filter the list using a list of permissions keys\nUsed to validate if a user can or can not access features\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "keys",
            "required": true,
            "in": "query",
            "description": "A list of unique identifier of the Permissions you wish to check",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "payments.invoices.export"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StaffPermissionsList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Permission"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "FeaturesPackageList": {
        "type": "object",
        "properties": {
          "features_packages": {
            "description": "List of Features Packages",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/featuresPackage.json"
            }
          }
        }
      },
      "OfferingList": {
        "type": "object",
        "properties": {
          "offerings": {
            "description": "List of Offerings",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/offering.json"
            }
          }
        }
      },
      "CreateOfferingDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the offering. Possible values include: **package**: For the main business subscription; **app**: For marketplace app subscriptions; *addon**: for additional products like SMS, staff_seat and module.",
            "enum": [
              "package",
              "app",
              "addon"
            ],
            "example": "package"
          },
          "SKU": {
            "type": "string",
            "description": "The unique code of the single SKU this offering represents. Offerings support exactly one SKU; to combine multiple SKUs, use a bundledOffering or similar higher-level abstraction.",
            "example": "premium"
          },
          "display_name": {
            "type": "string",
            "description": "The Offering's display name",
            "example": "permium10"
          },
          "quantity": {
            "type": "number",
            "description": "The number of items included in the offering",
            "default": 1,
            "example": 1
          },
          "payment_type": {
            "type": "string",
            "description": "The payment type field defines the payment options available for an offering,**external**: Payment is not done by the platform (typically an API call from the partner), **free**: No payment is required; **single_charge**: A single, one-time payment is required to obtain the offering; **monthly**: A recurring payment made on a monthly basis; **annual**: A recurring payment made on a yearly basis; **bundle**: A subscription bundled with another subscriptio. If an offeing is defined as bundled it can not be sold as a separated subscription",
            "enum": [
              "free",
              "monthly",
              "annual",
              "single_charge",
              "external",
              "bundle"
            ],
            "example": "monthly"
          },
          "is_active": {
            "type": "boolean",
            "description": "Current status of the directory offering",
            "default": true,
            "example": "active"
          },
          "vendor": {
            "type": "string",
            "description": "The business entity or vendor that offers this SKU.",
            "enum": [
              "partner",
              "inTandem"
            ],
            "default": "inTandem"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "number",
                  "description": "Cost of the directory offering"
                },
                "currency": {
                  "type": "string",
                  "description": "The currency used for the price. Supported currencies: USD; EUR; GBP.",
                  "enum": [
                    "USD",
                    "EUR",
                    "GBP",
                    "CHF"
                  ]
                }
              }
            },
            "example": [
              {
                "price": "5.00",
                "currency": "USD"
              },
              {
                "price": "5.00",
                "currency": "EUR"
              }
            ]
          },
          "trial": {
            "type": "number",
            "description": "Number of days for the trial period. If not specified or set to 0, it indicates no trial period is offered.",
            "example": 14
          },
          "reporting_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "business-management",
                "no-payments",
                "no-marketing",
                "no-scheduling",
                "connect",
                "free",
                "ghost",
                "trial",
                "test"
              ]
            },
            "description": "A list of tags to be used for reporting purposes",
            "example": [
              "business-management",
              "free"
            ]
          }
        },
        "required": [
          "uid",
          "type",
          "SKU",
          "display_name",
          "quantity",
          "payment_type",
          "prices"
        ]
      },
      "UpdateOfferingDTO": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "description": "The SKU's display name"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "number",
                  "description": "Cost of the directory offering"
                },
                "currency": {
                  "type": "string",
                  "description": "The currency used for the price",
                  "enum": [
                    "USD",
                    "EUR",
                    "GBP"
                  ]
                }
              }
            }
          },
          "trial": {
            "type": "number",
            "description": "Number of days for the trial period. If not specified or set to 0, it indicates no trial period is offered.",
            "example": 14
          },
          "is_active": {
            "type": "boolean",
            "description": "Current status of the directory offering",
            "default": true
          },
          "reporting_tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "business-management",
                "no-payments",
                "no-marketing",
                "no-scheduling",
                "connect",
                "free",
                "ghost",
                "trial"
              ]
            },
            "description": "A list of tags to be used for reporting purposes",
            "example": [
              "business-management",
              "free"
            ]
          }
        },
        "required": [
          "purchase_state"
        ]
      },
      "DirectoryOfferingList": {
        "type": "object",
        "properties": {
          "directory_offerings": {
            "description": "List of DirectoryOfferings",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/directoryOffering.json"
            }
          }
        }
      },
      "DirectoryOfferingBulkList": {
        "type": "object",
        "properties": {
          "directory_offerings": {
            "description": "List of newly created DirectoryOfferings (for bulk creation)",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/directoryOffering.json"
            }
          }
        }
      },
      "BundledOfferingList": {
        "type": "object",
        "properties": {
          "offering_bundles": {
            "description": "List of BundledOfferings",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/bundledOffering.json"
            }
          }
        }
      },
      "BundldedOfferingBulkList": {
        "type": "object",
        "properties": {
          "bundldedOfferings": {
            "description": "List of newly created BundldedOfferings (for bulk creation)",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/bundledOffering.json"
            }
          }
        }
      },
      "SubscriptionList": {
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "List of Subscriptions",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/subscription.json"
            }
          }
        }
      },
      "BusinessCartList": {
        "type": "object",
        "properties": {
          "business_carts": {
            "description": "List of BusinessCarts",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/businessCart.json"
            }
          }
        }
      },
      "CreateDirectoryOfferingDTO": {
        "type": "object",
        "properties": {
          "directory_uid": {
            "type": "string",
            "description": "Unique identifier for a directory. Defines which directory is authorized to sell this Offering.",
            "example": "98ees428fq9f65tyh"
          },
          "offering_uid": {
            "type": "string",
            "description": "Unique identifier for an Offering. Defines an offering the directory is authorized to sell.",
            "example": "3f12fb61-98ee-428f-9f65-18bba589cb95"
          }
        },
        "required": [
          "directory_uid",
          "offering_uid"
        ]
      },
      "CreateBundledOfferingDTO": {
        "type": "object",
        "properties": {
          "offering_uid": {
            "type": "string",
            "description": "Unique identifier of the offering which the bundled item is being added to",
            "example": "bc33f12d-98ee-428f-9f65-12bca589cb21"
          },
          "bundled_offering_uid": {
            "type": "string",
            "description": "The bundled Offering unique identifier",
            "example": "bc33f12d-98ee-428f-9f65-18bba589cb95"
          }
        },
        "required": [
          "offering_uid",
          "bundled_offering"
        ]
      },
      "CreateSubscriptionDTO": {
        "type": "object",
        "properties": {
          "offering_uid": {
            "type": "string",
            "description": "The underlying directory offering uid. Must be a valid offering_uid either from vcita or from the offering GET API.",
            "example": ""
          },
          "purchase_currency": {
            "type": "string",
            "description": "The purchase currency at the moment of the subscription was created. Supported currencies: USD; EUR; GBP",
            "enum": [
              "USD",
              "EUR",
              "GBP"
            ],
            "example": "USD"
          },
          "charged_by": {
            "type": "string",
            "description": "Who charges for this subscription",
            "enum": [
              "partner",
              "platform"
            ]
          }
        },
        "required": [
          "offering_uid",
          "purchase_currency"
        ]
      },
      "UpdateSubscriptionDTO": {
        "type": "object",
        "properties": {
          "purchase_state": {
            "type": "string",
            "description": "The requested purchase state of the subscription. If expired is selected, the expiration_date is ignored and current date will be used. If canceled is selected, the expiration_date must be provided. Note that is_active is dymanically calculated based on status and expiration_date",
            "enum": [
              "canceled",
              "expired"
            ]
          },
          "expiration_date": {
            "type": "string",
            "format": "ISO8601",
            "description": "The date to expire the subscription. Should be in ISO8601 format (e.g., 2023-10-01T00:00:00Z) and at least one day in the future. Use 'expired' purchase_state if you want to immediately expire the subscription."
          }
        },
        "required": [
          "purchase_state"
        ]
      },
      "SKUList": {
        "type": "object",
        "properties": {
          "skus": {
            "description": "List of SKUs",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/license/SKU.json"
            }
          }
        }
      },
      "StaffQuickActionList": {
        "type": "object",
        "properties": {
          "staff_quick_action_lists": {
            "description": "List of staff quick action lists",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/staff/staff_quick_action_list.json"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "StaffMemberUpdate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the staff member"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the staff member"
          },
          "display_name": {
            "type": "string",
            "description": "The display name of the staff member"
          },
          "email": {
            "type": "string",
            "description": "The email address of the staff member"
          },
          "professional_title": {
            "type": "string",
            "description": "The professional title of the staff member"
          },
          "country_name": {
            "type": "string",
            "description": "The country name for the staff member's mobile number"
          },
          "mobile_number": {
            "type": "string",
            "description": "The mobile number of the staff member without country code"
          },
          "photo_url": {
            "type": "string",
            "description": "The URL to the staff member's profile photo"
          },
          "default_homepage": {
            "type": "string",
            "description": "Default homepage when the staff member logs in",
            "enum": [
              "dashboard",
              "inbox",
              "calendar",
              "clients",
              "pos"
            ]
          },
          "email_signature": {
            "type": "string",
            "description": "The email signature of the staff member"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the API request was successful",
            "example": true
          }
        }
      },
      "BusinessRolesList": {
        "type": "object",
        "properties": {
          "business_roles": {
            "description": "List of BusinessRoles",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/access_control/businessRole.json"
            }
          }
        }
      },
      "PermissionsList": {
        "type": "object",
        "properties": {
          "premissions": {
            "description": "List of Permissions",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/access_control/permission.json"
            }
          }
        }
      },
      "StaffBusinessRolesList": {
        "type": "object",
        "properties": {
          "staff_business_roles": {
            "description": "List of StaffBusinessRoles",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffBusinessRole.json"
            }
          }
        }
      },
      "StaffPermissionsList": {
        "type": "object",
        "properties": {
          "staff_permissions": {
            "description": "List of StaffPermissions",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/access_control/staffPermission.json"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      }
    }
  },
  "tags": [
    {
      "name": "Offering",
      "description": "The offering API facilitates seamless CRUD operations, allowing staff to create, retrieve, update, and delete offering items, and related entities with ease."
    }
  ]
}
