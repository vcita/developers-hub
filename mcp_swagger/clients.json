{
  "openapi": "3.0.0",
  "info": {
    "title": "Clients",
    "description": "Unified OpenAPI specification for clients domain",
    "version": "3.0",
    "x-generated": {
      "timestamp": "2025-08-16T13:55:51.683Z",
      "sourceFiles": [
        "legacy_v1_clients.json",
        "clients_payments.json",
        "manage_clients.json",
        "client_communication.json",
        "client_settings.json"
      ],
      "pathNormalizations": [
        {
          "file": "legacy_v1_clients.json",
          "basePath": "/platform/v1",
          "transformations": [
            {
              "original": "/clients",
              "normalized": "/platform/v1/clients",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/merges/merge_clients",
              "normalized": "/platform/v1/clients/merges/merge_clients",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/merges/possible_merge_master",
              "normalized": "/platform/v1/clients/merges/possible_merge_master",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/payment/client_packages/update_usage",
              "normalized": "/platform/v1/clients/payment/client_packages/update_usage",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/payment/client_packages/validate",
              "normalized": "/platform/v1/clients/payment/client_packages/validate",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}",
              "normalized": "/platform/v1/clients/{client_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/conversations",
              "normalized": "/platform/v1/clients/{client_id}/conversations",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/documents",
              "normalized": "/platform/v1/clients/{client_id}/documents",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/estimates",
              "normalized": "/platform/v1/clients/{client_id}/estimates",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/invoices",
              "normalized": "/platform/v1/clients/{client_id}/invoices",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/payment/client_packages",
              "normalized": "/platform/v1/clients/{client_id}/payment/client_packages",
              "basePath": "/platform/v1"
            },
            {
              "original": "/clients/{client_id}/payments",
              "normalized": "/platform/v1/clients/{client_id}/payments",
              "basePath": "/platform/v1"
            }
          ]
        },
        {
          "file": "client_communication.json",
          "basePath": "/client_api/v1",
          "transformations": [
            {
              "original": "/portals/{business_uid}/contact/get_form",
              "normalized": "/client_api/v1/portals/{business_uid}/contact/get_form",
              "basePath": "/client_api/v1"
            },
            {
              "original": "/portals/{business_uid}/contact/submit",
              "normalized": "/client_api/v1/portals/{business_uid}/contact/submit",
              "basePath": "/client_api/v1"
            },
            {
              "original": "/portals/{business_uid}/share_documents_form/get_form",
              "normalized": "/client_api/v1/portals/{business_uid}/share_documents_form/get_form",
              "basePath": "/client_api/v1"
            },
            {
              "original": "/portals/{business_uid}/share_documents_form/submit",
              "normalized": "/client_api/v1/portals/{business_uid}/share_documents_form/submit",
              "basePath": "/client_api/v1"
            }
          ]
        }
      ],
      "pathConflicts": [
        {
          "path": "/v3/clients/client_settings/{client_uid}",
          "files": [
            "unknown",
            "client_settings.json"
          ],
          "winner": "client_settings.json",
          "resolution": "Used client_settings.json (newer modification date)",
          "timestamp": "2025-08-16T13:55:51.683Z"
        }
      ],
      "componentConflicts": [],
      "totalPaths": 45,
      "totalComponents": 1
    }
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "Unified API Gateway server"
    }
  ],
  "paths": {
    "/platform/v1/clients": {
      "get": {
        "description": "Gets a list of clients or search by client attributes.",
        "parameters": [
          {
            "description": "Search Term",
            "in": "query",
            "name": "search_term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Search By - email/uid/phone/updated_at",
            "in": "query",
            "name": "search_by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify the updated_at filter range, available operators for updated_at: gte, lte. example: updated_at[gte]=2019-01-01",
            "in": "query",
            "name": "updated_at",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "clients": [
                      {
                        "address": "My Hourse, bellvue, seattle, wasinton",
                        "business_uid": "b1ed52cb3c5a6f87",
                        "campaign": "Source Campaign",
                        "channel": "Source Channel",
                        "created_at": "2025-08-05T06:56:27Z",
                        "custom_field1": "value1",
                        "custom_field2": "value2",
                        "custom_field3": "value3",
                        "customer_status": "lead",
                        "email": "clientemail@mail.com",
                        "first_name": "First Name",
                        "id": "czpvt3f246p4cw9i",
                        "last_name": "Last Name",
                        "mobile_phone": "+16378383489",
                        "normalized_phone": null,
                        "opt_in": "1",
                        "source": "Client Portal",
                        "source_url": "Source URL",
                        "tags": [],
                        "updated_at": "2025-08-05T06:56:27Z"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Clients",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Creates a Client and returns the new client's data and the client's JWT token",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client": {
                      "address": "Some big house in Hollywood 9",
                      "created_at": "2025-08-05T06:56:28Z",
                      "customer_status": "customer",
                      "email": "michael.douglass@spartacus.info.fake",
                      "first_name": "Michael",
                      "id": "fgrayekkrmqfzt7d",
                      "last_name": "Douglas",
                      "mobile_phone": "+19083073848",
                      "opt_in": null,
                      "source_data": {
                        "campaign": "campaign",
                        "channel": "channel",
                        "name": "website",
                        "website_url": "www.somesite.com"
                      },
                      "spam": false,
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "updated_at": "2025-08-05T06:56:28Z"
                    },
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdHlfdWlkIjoiZmdyYXlla2tybXFmenQ3ZCIsImV4dHJhIjp7ImJ1c2luZXNzX3VpZCI6ImIxZWQ1MmNiM2M1YTZmODcifSwiZXhwIjoxNzU2Nzk2MTg4LCJyZWZyZXNoIjoxNzU2Nzc2OTg4LCJjcmVhdGVkIjoxNzU0Mzc2OTg4LCJ0eXBlIjoiY2xpZW50IiwianRpIjoiZWQxNGY0MWViY2RlZGU1ODEyYjFkY2ZiZDBkMDE3MmI5ZThjODlhNGRlM2UzYmU1OTIyNGE4OWFmMmQ2OWU2NyJ9.D0OMzkIJ4sPAYuAduQxPRnu9_ScVCK-9Td1eROv8eSM"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Address",
                    "type": "string"
                  },
                  "custom_field1": {
                    "description": "Custom Field 1",
                    "type": "string"
                  },
                  "custom_field2": {
                    "description": "Custom Field 2",
                    "type": "string"
                  },
                  "custom_field3": {
                    "description": "Custom Field 3",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email Address",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "opt_in_transactional_sms": {
                    "description": "Whether the client opts in to receive transactional SMS messages.",
                    "type": "boolean"
                  },
                  "phone": {
                    "description": "Phone Number",
                    "type": "string"
                  },
                  "source_campaign": {
                    "description": "Source campaign",
                    "type": "string"
                  },
                  "source_channel": {
                    "description": "Source channel",
                    "type": "string"
                  },
                  "source_name": {
                    "description": "Source name",
                    "type": "string"
                  },
                  "source_url": {
                    "description": "Source URL",
                    "type": "string"
                  },
                  "staff_id": {
                    "description": "Staff ID",
                    "type": "string"
                  },
                  "status": {
                    "description": "Use a client status to categorize clients according to their relationship with your business",
                    "type": "string"
                  },
                  "tags": {
                    "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/clients/merges/merge_clients": {
      "put": {
        "description": "Merge two or more duplicate clients into one primary client. The request body can be empty but must be sent.",
        "parameters": [
          {
            "description": "UID of the destination primary client.",
            "in": "query",
            "name": "to_client_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "UIDs of all the clients to be merged into the to_client_uid, comma separated",
            "in": "query",
            "name": "from_client_uids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Merge duplicate clients into a primary client.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/merge_clients"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The request body. It can be empty but must still be sent.",
                "properties": {},
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/clients/merges/possible_merge_master": {
      "get": {
        "description": "Returns a list of client UIDs that can be used as a primary client for the merge.",
        "parameters": [
          {
            "description": "List of client uids, comma separated",
            "in": "query",
            "name": "client_ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "master_ids": [
                    "80g6241rk3zldz2h",
                    "06h6m891ub6d2rx3"
                  ],
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List of clients that can be used as primary for merge.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/possible_merge_master"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/payment/client_packages/update_usage": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Package updated by client",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "package_name": "Package Name"
                  },
                  "status": "OK"
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error Message",
                  "status": "Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "payment_status_id": {
                    "description": "Payment status ID",
                    "type": "string"
                  }
                },
                "required": [
                  "payment_status_id"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/clients/payment/client_packages/validate": {
      "get": {
        "parameters": [
          {
            "description": "Payment status ID",
            "in": "query",
            "name": "payment_status_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Validation Occurred",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "has_package": true
                  },
                  "status": "OK"
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error Message",
                  "status": "Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Validate Client Package has redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/validate"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}": {
      "delete": {
        "description": "Deletes a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client": {
                      "address": "My Hourse, bellvue, seattle, wasinton",
                      "campaign": "Source Campaign",
                      "channel": "Source Channel",
                      "created_at": "2025-08-05T06:56:27Z",
                      "custom_field1": "value1",
                      "custom_field2": "value2",
                      "custom_field3": "value3",
                      "customer_status": "inactive",
                      "email": "clientemail@mail.com.dczpvt3f246p4cw9i",
                      "first_name": "First Name",
                      "id": "czpvt3f246p4cw9i",
                      "last_name": "Last Name",
                      "matter_term": "clients",
                      "matters": [],
                      "mobile_phone": "+16378383489",
                      "normalized_phone": null,
                      "opt_in": "1",
                      "source": "Client Portal",
                      "source_url": "Source URL",
                      "tags": [],
                      "updated_at": "2025-08-05T06:56:28Z"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Deletes a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Retrieves a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client": {
                      "address": "My Hourse, bellvue, seattle, wasinton",
                      "campaign": "Source Campaign",
                      "channel": "Source Channel",
                      "created_at": "2025-08-05T06:56:27Z",
                      "custom_field1": "value1",
                      "custom_field2": "value2",
                      "custom_field3": "value3",
                      "customer_status": "lead",
                      "email": "clientemail@mail.com",
                      "first_name": "First Name",
                      "id": "czpvt3f246p4cw9i",
                      "last_name": "Last Name",
                      "matter_term": "clients",
                      "matters": [
                        {
                          "display_name": "First Name Last Name",
                          "fields": [],
                          "uid": "eb28o6g7ad6q2ya8"
                        }
                      ],
                      "mobile_phone": "+16378383489",
                      "normalized_phone": null,
                      "opt_in": "1",
                      "source": "Client Portal",
                      "source_url": "Source URL",
                      "tags": [],
                      "updated_at": "2025-08-05T06:56:27Z"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Retrieves a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client": {
                      "address": "My Hourse, bellvue, seattle, wasinton",
                      "created_at": "2025-08-05T06:56:27Z",
                      "customer_status": "lead",
                      "email": "clientemail@mail.com",
                      "first_name": "NEWFIRSTNAME",
                      "id": "czpvt3f246p4cw9i",
                      "last_name": "Last Name",
                      "mobile_phone": "+16378383489",
                      "opt_in": "1",
                      "spam": false,
                      "tags": [],
                      "updated_at": "2025-08-05T06:56:28Z"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "description": "Address. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                    "type": "string"
                  },
                  "created_at": {
                    "description": "Client creation date",
                    "type": "string"
                  },
                  "custom_field1": {
                    "description": "Custom Field 1",
                    "type": "string"
                  },
                  "custom_field2": {
                    "description": "Custom Field 2",
                    "type": "string"
                  },
                  "custom_field3": {
                    "description": "Custom Field 3",
                    "type": "string"
                  },
                  "email": {
                    "description": "Email Address",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "First Name",
                    "type": "string"
                  },
                  "force_nullifying": {
                    "description": "If true, allows address and mobile_phone to be overridden with `null` or `\"\"`.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "Last Name",
                    "type": "string"
                  },
                  "mobile_phone": {
                    "description": "Phone Number. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                    "type": "string"
                  },
                  "phone": {
                    "description": "Phone Number",
                    "type": "string"
                  },
                  "spam": {
                    "description": "Client marked as spam",
                    "type": "boolean"
                  },
                  "staff_id": {
                    "description": "Staff ID",
                    "type": "string"
                  },
                  "status": {
                    "description": "Use a client status to categorize clients according to their relationship with your business",
                    "type": "string"
                  },
                  "tags": {
                    "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "Client last update date",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/clients/{client_id}/conversations": {
      "get": {
        "description": "Gets a list of conversations for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "conversations": [
                      {
                        "business_id": "2f27ca024eb96133",
                        "business_unread": false,
                        "client_id": "od0tuoli2prraw3y",
                        "client_unread": false,
                        "created_at": "2025-08-05T06:56:33.583Z",
                        "deep_link": "/app/conversations/uuk21b7xv53er6zq",
                        "id": "uuk21b7xv53er6zq",
                        "last_business_action": "",
                        "last_client_action": null,
                        "staff_id": "6ad7601fd821c8d2",
                        "title": null,
                        "updated_at": "2025-08-05T06:56:33.583Z"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Conversations For A Client",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}/documents": {
      "get": {
        "description": "Gets a list of documents for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "documents": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Documents For A Client",
        "tags": [
          "Documents"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/documents"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}/estimates": {
      "get": {
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estimates Returned",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "estimates": [
                      {
                        "address": "habarzel 32\\nTel Aviv",
                        "amount": 8.8,
                        "client_address": "Lombard St, San Francisco, CA",
                        "client_id": "kf9d91uh82bclson",
                        "client_name": "Alice Smith",
                        "conversation_id": "rv28qk5ey5eretu9",
                        "created_at": "2018-06-14T09:31:21.000",
                        "currency": "USD",
                        "due_date": "2018-06-14",
                        "estimate_date": "2018-06-14",
                        "estimate_number": "1",
                        "id": "aaabbbccc112233",
                        "items": [
                          {
                            "amount": 10,
                            "description": "Service Description",
                            "discount": 2,
                            "quantity": 1,
                            "taxes": [
                              {
                                "name": "10 tax",
                                "rate": 10
                              }
                            ],
                            "title": "Item title"
                          }
                        ],
                        "note": "Estimate for your service",
                        "source_data": {
                          "campaign": null,
                          "channel": "",
                          "name": "client_portal",
                          "website_url": null
                        },
                        "staff_id": "mg9d34uh92bclwzg",
                        "status": "draft/issued/approved/rejected/invoiced",
                        "title": "Estimate title"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Estimates Of Client",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}/invoices": {
      "get": {
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "invoices": [
                      {
                        "address": "habarzel 32\\nTel Aviv",
                        "allow_online_payment": true,
                        "amount": 8.8,
                        "client_id": "aaabbbccc112233",
                        "conversation_id": "rv28qk5ey5eretu9",
                        "created_at": "2018-06-14T09:31:21.000",
                        "currency": "USD",
                        "due_date": "2018-06-14",
                        "id": "aaabbbccc112233",
                        "invoice_number": "6",
                        "issued_at": "2018-06-14",
                        "items": [
                          {
                            "amount": 10,
                            "description": "Service Description",
                            "discount": 2,
                            "quantity": 1,
                            "taxes": [
                              {
                                "name": "10 tax",
                                "rate": 10
                              }
                            ],
                            "title": "Item title"
                          }
                        ],
                        "note": "Invoice for your service",
                        "payment_balance": 5,
                        "payment_state": "pending",
                        "source_data": {
                          "campaign": null,
                          "channel": "",
                          "name": "client_portal",
                          "website_url": null
                        },
                        "staff_id": "mg9d91uh92bclwzg",
                        "status": "issued/draft",
                        "title": "Invoice Title"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Invoices Of Client",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}/payment/client_packages": {
      "get": {
        "parameters": [
          {
            "description": "Client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client Packages Returned",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client_packages": [
                      {
                        "active": "true",
                        "amount": 100,
                        "booking_credits": [
                          {
                            "bookings_usage": "0",
                            "credit_items": [
                              {
                                "bookings_usage": 0,
                                "item_id": "mzuk2kkt7vjnxdwo",
                                "item_type": "SERVICE"
                              }
                            ],
                            "id": "vu1rovse0166a9d9",
                            "total_bookings": "10"
                          }
                        ],
                        "bookings_usage": "0",
                        "business_id": "vqzqruk6nyclxpp6",
                        "client_id": "9yxsdkr1hdjtocpv",
                        "conversation_id": "war7ow99zh14qlty",
                        "created_at": "2020-06-01T21:05:00.562Z",
                        "currency": "USD",
                        "id": "m73jkvg4bf2z71b2",
                        "image_path": "",
                        "name": "Music Lessons",
                        "package_id": "v2fvy50p8gjuvnvb",
                        "payment_status_id": "6v5ybwkavv0z9hff",
                        "payment_status_state": "pending",
                        "products": [
                          {
                            "id": "03nmq2uih783ro0g",
                            "name": "product1_name",
                            "quantity": 2
                          },
                          {
                            "id": "57ndq2uih503rca8",
                            "name": "product2_name",
                            "quantity": 4
                          }
                        ],
                        "staff_id": "mg9d91uh92bclwzg",
                        "total_bookings": "10",
                        "valid_from": "2020-06-01",
                        "valid_until": "2020-07-01"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "error": "Error Message",
                  "status": "Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Client Packages List Of Client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/clients/{client_id}/payments": {
      "get": {
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: state: filter[state][in]=paid,pending,failed,refunded,cancelled,archived,incompleted.\n                                                                        created_at: filter[created_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                        updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at.\n                                                                      Available operators: asc, desc.\n                                                                      Example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "payments": [
                      {
                        "amount": 300,
                        "charged_at": "23/4/2019 09:00:00",
                        "client_id": "12344",
                        "conversation_id": "1234",
                        "currency": "USD",
                        "fees": [
                          {
                            "amount": 13,
                            "name": "Taylor Swift Fee"
                          }
                        ],
                        "id": "1234",
                        "note": "Payment Note",
                        "offline": true,
                        "other_payment_method": "bit",
                        "payment_method": "cash/check",
                        "payment_requests": [
                          {
                            "id": "1246"
                          }
                        ],
                        "reference": "123",
                        "state": "paid/refunded",
                        "tips": [
                          {
                            "amount": 100
                          }
                        ],
                        "title": "Payment Title"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Payments of Client",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/apps/primary_provider_connected_application": {
      "get": {
        "description": "Get External Connected Payment Application",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "app": {
                      "api_uri": "https://ourApis.com/api",
                      "app_code_name": "a0eb85f0df0b1177",
                      "app_features": [
                        "Does stuff",
                        "And even more stuff"
                      ],
                      "app_host": "https://www.cnn.com",
                      "app_id": 1,
                      "app_mobile_screenshot_uris": [
                        "http://helloWorld.png"
                      ],
                      "app_name": "TaylorSwiftPayments",
                      "app_screenshot_uris": [
                        "http://helloWorld.png"
                      ],
                      "built_in": false,
                      "contact_support_link": "http://www.contact.com",
                      "deep_link": {
                        "path": "/app/someroute",
                        "path_params": {
                          "some_param": "true"
                        }
                      },
                      "description": {
                        "logo": "http://puppies.png",
                        "short_description": "Short text with buzzwords",
                        "text": "This is a very long text that describes everything about the app"
                      },
                      "is_internal": false,
                      "locales": [
                        "en",
                        "he"
                      ],
                      "menu_items": {
                        "subitems": [
                          {
                            "category": "clients",
                            "item_name": {
                              "en": "My RDBMS"
                            },
                            "key": "My RDBMS",
                            "route": "route"
                          }
                        ]
                      },
                      "open_in_new_tab": true,
                      "permissions": null,
                      "personal_connection": true,
                      "pre_installed": false,
                      "privacy_policy_link": "http://www.private.com",
                      "requires_upgrade": false,
                      "requires_upgrade_if_paid": false,
                      "status": "not_installed",
                      "supported_countries": [
                        "United States",
                        "Poland"
                      ],
                      "supported_in_mobile": true,
                      "url_params": [
                        "business_uid",
                        "staff_uid"
                      ]
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get External Connected Payment Application",
        "tags": [
          "Apps"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/apps/primary_provider_connected_application"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Card Created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "data": {
                      "card": {
                        "uid": "822hs9sgnltvbkkt"
                      }
                    },
                    "success": true
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "invalid",
                      "message": "To store cards on file connect to a credit card processor"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create New Card On File",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "card": {
                    "properties": {
                      "cardholder_name": {
                        "description": "card holder name",
                        "type": "string"
                      },
                      "options": {
                        "properties": {
                          "default": {
                            "description": "is default card",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "token": {
                        "description": "card token",
                        "type": "string"
                      }
                    },
                    "required": [
                      "token",
                      "cardholder_name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "card"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/cards/get_new_card": {
      "get": {
        "parameters": [
          {
            "description": "uid of the payment with which the card was created",
            "in": "query",
            "name": "source_payment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recent Card Retreived",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "card": {
                      "active": true,
                      "business_id": "ob684pf7k4d2y8mh",
                      "card_brand": "visa",
                      "cardholder_name": "sdfs",
                      "client_id": "3ccj0h5o5bqo44ui",
                      "created_at": "2020-10-06T13:55:11.000Z",
                      "default": true,
                      "exp_month": 11,
                      "exp_year": 2022,
                      "id": "mquqmydothyf7n1k",
                      "last_4": "1111",
                      "payment_provider": "stripe",
                      "staff_id": "jp6as22f8mfnaojn",
                      "staff_name": "packages packages packages"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get most recent pending card added to client [Alpha]",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards/get_new_card"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards/save_card_session": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Save Card Session created Created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "data": {
                      "save_card_session": {
                        "account": "Taylor Swift",
                        "session_url": "www.taylorswift.com"
                      }
                    },
                    "success": true
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "invalid",
                      "field": "client_uid",
                      "message": "business doesn't have 'cp_and_new_cof' FF"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create New Save Card Session",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "redirect_url": {
                    "description": "redirect url",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/carts": {
      "post": {
        "description": "Creates a Cart",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cart": {
                      "cart_number": 2,
                      "cart_type": null,
                      "created_at": "2025-08-05T01:55:08.385-05:00",
                      "currency": "USD",
                      "is_sale": null,
                      "items": [
                        {
                          "cost": null,
                          "currency": "USD",
                          "description": "Added Aug 05, 2025",
                          "discount": null,
                          "entity_name": "Shampoo",
                          "entity_type": "ProductOrder",
                          "entity_uid": "61hsvd7pg3r51jea",
                          "fee_type": null,
                          "grand_total": "100.0",
                          "item_index": null,
                          "name": "Shampoo",
                          "orig_taxes": [],
                          "partial_payments_amount": "0.0",
                          "quantity": 1,
                          "sub_total": "100.0",
                          "taxes": [],
                          "uid": "xlrhp3gr21z8hh94",
                          "unit_amount": "100.0"
                        }
                      ],
                      "matter_uid": "pu7hkbneq6n1mfpp",
                      "payment_request_uid": "2xflyox2d1bo02u0",
                      "sub_total": "100.0",
                      "taxes": [],
                      "title": "Multi-item #0000002",
                      "total_price": "100.0",
                      "uid": "z0z6q9g6kogvn297",
                      "updated_at": "2025-08-05T01:55:08.385-05:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create Cart",
        "tags": [
          "Carts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/carts"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cart": {
                    "properties": {
                      "currency": {
                        "description": "translation missing: en.payments-api.client.carts.parameters.currency",
                        "type": "string"
                      },
                      "items": {
                        "description": "translation missing: en.payments-api.client.carts.parameters.items",
                        "items": {
                          "properties": {
                            "entity_type": {
                              "description": "translation missing: en.payments-api.client.carts.parameters.item.entity_type",
                              "type": "string"
                            },
                            "entity_uid": {
                              "description": "translation missing: en.payments-api.client.carts.parameters.item.entity_uid",
                              "type": "string"
                            }
                          },
                          "required": [
                            "entity_uid",
                            "entity_type"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "matter_uid": {
                        "description": "Matter UID",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "items",
                      "matter_uid"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "cart"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/carts/{uid}?matter_uid={matter_uid}": {
      "get": {
        "description": "Show specific cart data",
        "parameters": [
          {
            "description": "Cart UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cart": {
                      "cart_number": 1,
                      "cart_type": null,
                      "created_at": "2025-08-05T01:55:07.984-05:00",
                      "currency": "USD",
                      "is_sale": null,
                      "items": [
                        {
                          "cost": null,
                          "currency": "USD",
                          "description": "Added Aug 05, 2025",
                          "discount": null,
                          "entity_name": "Shampoo",
                          "entity_type": "ProductOrder",
                          "entity_uid": "61hsvd7pg3r51jea",
                          "fee_type": null,
                          "grand_total": "100.0",
                          "item_index": null,
                          "name": "Shampoo",
                          "orig_taxes": [],
                          "partial_payments_amount": "0.0",
                          "quantity": 1,
                          "sub_total": "100.0",
                          "taxes": [],
                          "uid": "hb43a18hlbgywxju",
                          "unit_amount": "100.0"
                        }
                      ],
                      "matter_uid": "pu7hkbneq6n1mfpp",
                      "payment_request_uid": "j7dhebvnq4q09swv",
                      "sub_total": "100.0",
                      "taxes": [],
                      "title": "Multi-item #0000001",
                      "total_price": "100.0",
                      "uid": "sg1oz2nuy0in41ly",
                      "updated_at": "2025-08-05T01:55:07.984-05:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Cart",
        "tags": [
          "Carts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/carts/{uid}?matter_uid={matter_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/client_packages": {
      "get": {
        "description": "Get a list of Client Packages",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch packages for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, valid_from, valid_until.  available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: state: filter[state][eq]=ACTIVE/INACTIVE.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "error": "The API cannot be accessed. This could be because you lack permissions to use this API endpoint.",
                    "status": "Error"
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List of Client Packages",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits": {
      "get": {
        "description": "Show list of deposits",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch deposits for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: entity_uid, entity_type. example: filter[entity_uid][eq]=123&filter[entity_type][in]=Invoice.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "deposits": [
                      {
                        "amount": {
                          "is_rounded": null,
                          "total": 50,
                          "type": "fixed",
                          "value": 50
                        },
                        "can_client_pay": true,
                        "created_at": "2025-08-05T01:55:17.659-05:00",
                        "currency": "USD",
                        "entity_type": "Invoice",
                        "entity_uid": "ogw6lfpggda2sews",
                        "matter_uid": "w8gtso6t02go66ad",
                        "payment_request_uid": null,
                        "payment_uid": "ftxwbw9a199m9xdb",
                        "staff_uid": "c1d6ffb93c834ba9",
                        "title": "Deposit for INVOICE #0000001",
                        "uid": "6y5ssai032sfpv54",
                        "updated_at": "2025-08-05T01:55:17.659-05:00"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Deposits List",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/deposits"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits/{uid}?matter_uid={matter_uid}": {
      "get": {
        "description": "translation missing: en.payments-api.client.deposits.description",
        "parameters": [
          {
            "description": "Deposit UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "deposit": {
                      "amount": {
                        "is_rounded": null,
                        "total": 50,
                        "type": "fixed",
                        "value": 50
                      },
                      "can_client_pay": true,
                      "created_at": "2025-08-05T01:55:17.659-05:00",
                      "currency": "USD",
                      "entity_type": "Invoice",
                      "entity_uid": "ogw6lfpggda2sews",
                      "matter_uid": "w8gtso6t02go66ad",
                      "payment_request_uid": null,
                      "payment_uid": "ftxwbw9a199m9xdb",
                      "staff_uid": "c1d6ffb93c834ba9",
                      "title": "Deposit for INVOICE #0000001",
                      "uid": "6y5ssai032sfpv54",
                      "updated_at": "2025-08-05T01:55:17.659-05:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/deposits/{uid}?matter_uid={matter_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/invoices": {
      "get": {
        "description": "Show list of invoices",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch invoices for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: client_uid: filter[client_uid][eq]=123. matter_uid: filter[matter_uid][eq]=123. created_at: filter[created_at][eq/lt/lte/gt/gte]=2019-01-01. updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2019-01-01. uid: filter[uid][in]=123,456",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "invoices": [
                      {
                        "additional_recipients": [],
                        "allow_online_payment": false,
                        "allow_partial_payment": false,
                        "billing_address": "1 Bay St, San Francisco, CA, United States",
                        "business_name": "business7f25adfa30364684",
                        "client_name": "First name",
                        "contact_details": null,
                        "currency": "USD",
                        "due_date": "2025-08-05",
                        "invoice_label": "INVOICE",
                        "invoice_number": "1",
                        "issue_date": "2025-08-05",
                        "items": [
                          {
                            "cost": null,
                            "currency": "USD",
                            "description": null,
                            "discount": null,
                            "entity_name": null,
                            "entity_type": null,
                            "entity_uid": null,
                            "fee_type": null,
                            "grand_total": "20.0",
                            "item_index": null,
                            "name": "Hair Conditioner",
                            "orig_taxes": [],
                            "partial_payments_amount": "0.0",
                            "quantity": 2,
                            "sub_total": "20.0",
                            "taxes": [],
                            "uid": "y2e4jnwkup5b5gch",
                            "unit_amount": "10.0"
                          }
                        ],
                        "matter_details": null,
                        "matter_name": "First name",
                        "matter_term": "Client",
                        "matter_uid": null,
                        "metadata": {
                          "display_items_total": true,
                          "display_sections_total": true,
                          "pdf_customization": {
                            "color": null,
                            "cover": null,
                            "logo_size": null,
                            "template": null
                          },
                          "tax_mode": "exclude"
                        },
                        "note": null,
                        "payment_status_uid": "bh7e3e2tzlo0pglk",
                        "purchase_order": null,
                        "status": "ISSUED",
                        "subtotal": "20.0",
                        "taxes": [],
                        "terms_and_conditions": null,
                        "total": 20,
                        "total_tax": 0,
                        "uid": "l0lhtf9tcciyl65z"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Invoices List",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/packages": {
      "get": {
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When present, returns only active packages",
            "in": "query",
            "name": "active_only",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Packages Info Retrieved with active packages only",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "packages": [
                      {
                        "active": true,
                        "currency": "USD",
                        "description": "Package description",
                        "discount_amount": 25,
                        "discount_unit": "f",
                        "expiration": 1,
                        "expiration_unit": "m",
                        "id": "m73jkvg4bf2z71b2",
                        "image_path": null,
                        "items": [
                          {
                            "services": [
                              {
                                "id": "mzuk2kkt7vjnxdwo",
                                "name": "Service name"
                              }
                            ],
                            "total_bookings": "10"
                          }
                        ],
                        "name": "Music Lessons",
                        "online_payment_enabled": true,
                        "original_price": "120.0",
                        "price": "100.0",
                        "products": [
                          {
                            "id": "03nmq2uih783ro0g",
                            "name": "product1_name",
                            "quantity": 2
                          },
                          {
                            "id": "57ndq2uih503rca8",
                            "name": "product2_name",
                            "quantity": 4
                          }
                        ],
                        "total_bookings": 10
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          }
        },
        "summary": "List Packages Info [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "None",
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/packages/{package_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Package Info Retrieved",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "package": {
                      "active": true,
                      "currency": "USD",
                      "description": "Package description",
                      "discount_amount": 25,
                      "discount_unit": "f",
                      "expiration": 1,
                      "expiration_unit": "m",
                      "id": "m73jkvg4bf2z71b2",
                      "image_path": null,
                      "items": [
                        {
                          "services": [
                            {
                              "id": "mzuk2kkt7vjnxdwo",
                              "name": "Service name"
                            }
                          ],
                          "total_bookings": "10"
                        }
                      ],
                      "name": "Music Lessons",
                      "online_payment_enabled": true,
                      "original_price": "120.0",
                      "price": "100.0",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "quantity": "2"
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "quantity": "4"
                        }
                      ],
                      "total_bookings": 10
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "summary": "Show Package Info [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/packages/{package_id}"
        },
        "x-auth-type": "None",
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v1/payment_requests": {
      "get": {
        "description": "Show list of payment requests",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch payment requests for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: state, uid, entity_type, enitity_uid. example: filter[state][in]=paid&filter[uid][in]=123&filter[entity_type][in]=Invoice.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "payment_requests": [
                      {
                        "amount": "20.0",
                        "amount_before_coupon": null,
                        "amount_paid": 0,
                        "amount_pending": null,
                        "created_at": "2025-08-05T01:55:27.581-05:00",
                        "currency": "USD",
                        "display": true,
                        "due_date": "2025-08-04T19:00:00.000-05:00",
                        "fees_amount": 0,
                        "matter_uid": "ci0ippxguwzmvcia",
                        "net_amount": "20.0",
                        "paid_at": null,
                        "pait_at": null,
                        "payable_type": "Invoice",
                        "payable_uid": "gsu536shmo37ig6e",
                        "sellable_name": "INVOICE #0000001",
                        "staff_uid": "1bc6b627e589e0d4",
                        "state": "pending",
                        "tax_mode": "exclude",
                        "taxes": [],
                        "tips_amount": 0,
                        "uid": "cv03mnjcgqfg7vt6",
                        "updated_at": "2025-08-05T01:55:27.581-05:00"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Payment Requests List",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payment_requests"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payment_requests/{payment_request_uid}/checkout": {
      "get": {
        "description": "Get the checkout session of a given payment request",
        "parameters": [
          {
            "description": "Payment Request UID",
            "in": "path",
            "name": "payment_request_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional coupon code to apply discount to the payment request",
            "in": "query",
            "name": "coupon_code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "checkout_session": {
                      "amount_left_to_pay": 20,
                      "amount_total": 20,
                      "checkout_options": null,
                      "coupon_discount": 0,
                      "currency": "USD",
                      "discount": 0,
                      "is_allowed_coupons": true,
                      "is_cart_coupon": false,
                      "items": [
                        {
                          "description": {
                            "issue_date": "2025-08-05"
                          },
                          "discount": 0,
                          "entity_type": "Invoice",
                          "entity_uid": "gsu536shmo37ig6e",
                          "price_after_discount": 20,
                          "price_before_discount": 20,
                          "taxes": [],
                          "title": "Invoice #001"
                        }
                      ],
                      "net_amount_left_to_pay": 20,
                      "net_total_amount": 20,
                      "payable_type": "Invoice",
                      "payable_uid": "gsu536shmo37ig6e",
                      "payment_status_uid": "cv03mnjcgqfg7vt6",
                      "state": "due",
                      "tax_mode": "exclude",
                      "taxes": [],
                      "title": "Invoice #001"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Checkout Session",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payment_requests/{payment_request_uid}/checkout"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payments": {
      "get": {
        "description": "Show list of payments",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch payments for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: state, payment_status_uid. example: filter[state][in]=paid&filter[payment_status_uid][in]=123.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "payments": [
                      {
                        "amount": 50,
                        "amount_refunded": "0.0",
                        "assignable": null,
                        "business_uid": "fc766c51080b64b7",
                        "created_at": "2025-08-05T06:55:31Z",
                        "currency": "USD",
                        "fees": null,
                        "is_deposit": null,
                        "mapping_metadata": {},
                        "marked_as_online": false,
                        "matter_uid": "h330nmo78dot1jc6",
                        "other_payment_method": null,
                        "paid_online": false,
                        "payment_method": "Cash",
                        "payment_request_uid": null,
                        "payment_time": "2025-08-05T06:55:31Z",
                        "provider_state": null,
                        "provider_transaction_id": null,
                        "reference": null,
                        "refunded_at": null,
                        "scheduled_payments_rule_uid": null,
                        "state": "paid",
                        "tips": null,
                        "title": "Cookie",
                        "uid": "n8byn15vnj2jb4bs",
                        "updated_at": "2025-08-05T06:55:31Z"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Payments List",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/product_orders": {
      "get": {
        "description": "Show list of product orders",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch products orders for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Available filters: client_uid, uid, entity_type. example: filter[client_uid][in]=uId1&filter[uid][in]=123.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "product_orders": [
                      {
                        "client_id": "amebs8yr715qhz9l",
                        "cost": null,
                        "created_at": "2025-08-05T01:55:35.643-05:00",
                        "currency": "USD",
                        "description": "Best hair shampoo",
                        "id": "rwi3bicfvmjmxjph",
                        "matter_uid": "kmiu5c4ox5r1t1eg",
                        "name": "Shampoo",
                        "payment_request_id": "g2zg6kg3q59oxlgn",
                        "payment_request_state": "pending",
                        "price": "10.0",
                        "product_id": "6sukaz56hxev8b9c",
                        "staff_id": "7edde4a6d219fa49",
                        "taxes": [],
                        "total_price": null
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show Product Orders List",
        "tags": [
          "Product Orders"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/product_orders"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/apps/{app_code_name}/import": {
      "post": {
        "description": "Import clients from external app. Once the import process is complete, we will request a page number minus one (-1 page)",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "app_code_name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "session_id": 1
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Import clients app",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/apps/{app_code_name}/import"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fields_mapping": {
                    "properties": {
                      "email": {
                        "description": "email@local.local",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "First name",
                        "type": "string"
                      },
                      "phone": {
                        "description": "1213214124124",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "import_params": {
                    "properties": {
                      "send_notifications_when_done": {
                        "description": "Sends an email to staff when the import is done. Defaults to true. Set to false to skip.",
                        "type": "boolean"
                      },
                      "should_override": {
                        "description": "Override existing contacts (default=false)",
                        "type": "boolean"
                      },
                      "upload_type": {
                        "description": "Is it single (individual contacts) or multi (multiple clients under the same contact)",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/contacts/{uid}/matters": {
      "get": {
        "description": "Gets Matters of a contact",
        "parameters": [
          {
            "description": "Contact UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "matters": [
                      {
                        "business_uid": "925cc2e8f097fbef",
                        "contacts": [
                          {
                            "display_name": "First name",
                            "uid": "c9i4nkl5tzp9o42k"
                          }
                        ],
                        "created_at": "2025-08-05T09:53:15.761+03:00",
                        "deleted": false,
                        "display_name": "First name",
                        "fields": [
                          {
                            "uid": "wmcd6d1u3re6pt0i",
                            "value": "Some text"
                          }
                        ],
                        "last_activity_action": null,
                        "last_activity_time": null,
                        "staff": {
                          "uid": "fc2ca1c54e528bc4"
                        },
                        "tags": [
                          "tag1",
                          "tag2"
                        ],
                        "uid": "ofnm9n27xfkaicde",
                        "updated_at": "2025-08-05T09:53:15.761+03:00"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets Matters of a contact",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/contacts/{uid}/matters"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create a new Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "matter": {
                      "business_uid": "925cc2e8f097fbef",
                      "contacts": [
                        {
                          "display_name": "First name",
                          "uid": "c9i4nkl5tzp9o42k"
                        }
                      ],
                      "created_at": "2025-08-05T09:53:17.045+03:00",
                      "deleted": false,
                      "display_name": "Matter name",
                      "fields": [
                        {
                          "uid": "f22ike8s6dpz5vso",
                          "value": "Matter name"
                        }
                      ],
                      "last_activity_action": null,
                      "last_activity_time": null,
                      "staff": {
                        "uid": "fc2ca1c54e528bc4"
                      },
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "uid": "ypqy8rk11srr71sz",
                      "updated_at": "2025-08-05T09:53:17.045+03:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Create a new Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/contacts/{uid}/matters"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "matter": {
                    "properties": {
                      "fields": {
                        "description": "A list of fields to be updated",
                        "items": {
                          "properties": {
                            "uid": {
                              "description": "The fields uid",
                              "type": "string"
                            },
                            "value": {
                              "description": "The fields value to be updated",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "note": {
                        "description": "A note to add to the matter created",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags to add to the matter created",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters": {
      "get": {
        "description": "Gets Matters by filter. Searchable fields are: Email, First name, Last name, Matter name and Phone.",
        "parameters": [
          {
            "description": "Example: /business/clients/v1/matters?filter[advanced][start_with]=term.",
            "in": "query",
            "name": "filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "matters": [
                      {
                        "business_uid": "925cc2e8f097fbef",
                        "contacts": [
                          {
                            "display_name": "First name",
                            "uid": "c9i4nkl5tzp9o42k"
                          }
                        ],
                        "created_at": "2025-08-05T09:53:15.761+03:00",
                        "deleted": false,
                        "display_name": "First name",
                        "fields": [
                          {
                            "uid": "wmcd6d1u3re6pt0i",
                            "value": "Some text"
                          }
                        ],
                        "last_activity_action": null,
                        "last_activity_time": null,
                        "staff": {
                          "uid": "fc2ca1c54e528bc4"
                        },
                        "tags": [
                          "tag1",
                          "tag2"
                        ],
                        "uid": "ofnm9n27xfkaicde",
                        "updated_at": "2025-08-05T09:53:15.761+03:00"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets Matters by filter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/matters/{matter_uid}/collaborators": {
      "get": {
        "description": "Gets the collaborators of a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "collaborators": [
                      {
                        "follow_up": false,
                        "id": 1,
                        "matter_uid": "njumjiw6n4qa1tz3",
                        "staff_uid": "c029d2733e12be32"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets the collaborators of a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/collaborators"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Adds a collaborator to a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "collaborator": {
                      "follow_up": false,
                      "id": 1,
                      "matter_uid": "njumjiw6n4qa1tz3",
                      "staff_uid": "c029d2733e12be32"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Adds a collaborator to a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/collaborators"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "collaborator": {
                    "properties": {
                      "staff_uid": {
                        "description": "The staff uid",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{matter_uid}/collaborators/{staff_uid}": {
      "delete": {
        "description": "Removes a collaborator from a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff uid",
            "in": "path",
            "name": "staff_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "collaborator": {
                      "follow_up": false,
                      "id": 1,
                      "matter_uid": "njumjiw6n4qa1tz3",
                      "staff_uid": "c029d2733e12be32"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Removes a collaborator from a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/collaborators/{staff_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/matters/{matter_uid}/nest": {
      "put": {
        "description": "Nest a matter under another contact person",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": null,
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Nest a matter under another contact person",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/nest"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contact_uid": {
                    "description": "Contact UID",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{matter_uid}/notes": {
      "get": {
        "description": "Gets a list of notes",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "notes": [
                      {
                        "content": "some text",
                        "created_at": "2025-08-05T06:53:06.390Z",
                        "staff_uid": "ebe2e216a3ab3480",
                        "uid": "you37bj7mnbv372g",
                        "updated_at": "2025-08-05T06:53:06.390Z"
                      }
                    ]
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets a list of notes",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/notes"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Adds a note",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "note": {
                      "content": "some text",
                      "created_at": "2025-08-05T06:53:06.960Z",
                      "staff_uid": "ebe2e216a3ab3480",
                      "uid": "ubneca28lj0komfa",
                      "updated_at": "2025-08-05T06:53:06.960Z"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Adds a note",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/notes"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "properties": {
                      "content": {
                        "description": "A notes content",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{matter_uid}/notes/{note_uid}": {
      "delete": {
        "description": "Remove a note",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "note uid",
            "in": "path",
            "name": "note_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "note": {
                      "content": "some text",
                      "created_at": "2025-08-05T06:53:06.390Z",
                      "staff_uid": "ebe2e216a3ab3480",
                      "uid": "you37bj7mnbv372g",
                      "updated_at": "2025-08-05T06:53:06.390Z"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Remove a note",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/notes/{note_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "description": "Get a note",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "note uid",
            "in": "path",
            "name": "note_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "note": {
                      "content": "some text",
                      "created_at": "2025-08-05T06:53:06.390Z",
                      "staff_uid": "ebe2e216a3ab3480",
                      "uid": "you37bj7mnbv372g",
                      "updated_at": "2025-08-05T06:53:06.390Z"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get a note",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/notes/{note_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update a note",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "note uid",
            "in": "path",
            "name": "note_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "note": {
                      "content": "some text",
                      "created_at": "2025-08-05T06:53:06.390Z",
                      "staff_uid": "ebe2e216a3ab3480",
                      "uid": "you37bj7mnbv372g",
                      "updated_at": "2025-08-05T06:53:06.390Z"
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update a note",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/notes/{note_uid}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "note": {
                    "properties": {
                      "content": {
                        "description": "A notes content",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{matter_uid}/reassign": {
      "put": {
        "description": "Reassign staff to Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {},
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Reassign staff to Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/reassign"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "notes": {
                    "description": "Notes for the message to staff",
                    "type": "string"
                  },
                  "reassign_future_meetings": {
                    "description": "true, false. default false",
                    "type": "boolean"
                  },
                  "staff_uid": {
                    "description": "Staff uid",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{matter_uid}/tags": {
      "delete": {
        "description": "Remove a tag from a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": null,
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Remove a tag from a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/tags"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tag": {
                    "description": "A tag to remove",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      },
      "get": {
        "description": "Gets a list of tags of a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "tags": [
                      "tag1",
                      "tag2"
                    ]
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets a list of tags of a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/tags"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Adds a tag to a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": null,
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Adds a tag to a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{matter_uid}/tags"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "tag": {
                    "description": "A new tag to add",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/matters/{uid}": {
      "get": {
        "description": "Gets a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "matter": {
                      "business_uid": "925cc2e8f097fbef",
                      "contacts": [
                        {
                          "display_name": "First name",
                          "uid": "c9i4nkl5tzp9o42k"
                        }
                      ],
                      "created_at": "2025-08-05T09:53:15.761+03:00",
                      "deleted": false,
                      "display_name": "First name",
                      "fields": [
                        {
                          "uid": "wmcd6d1u3re6pt0i",
                          "value": "Some text"
                        }
                      ],
                      "last_activity_action": null,
                      "last_activity_time": null,
                      "staff": {
                        "uid": "fc2ca1c54e528bc4"
                      },
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "uid": "ofnm9n27xfkaicde",
                      "updated_at": "2025-08-05T09:53:15.761+03:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Gets a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Updates a Matter",
        "parameters": [
          {
            "description": "Matter UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "matter": {
                      "business_uid": "925cc2e8f097fbef",
                      "contacts": [
                        {
                          "display_name": "First name",
                          "uid": "c9i4nkl5tzp9o42k"
                        }
                      ],
                      "created_at": "2025-08-05T09:53:15.761+03:00",
                      "deleted": false,
                      "display_name": "First name",
                      "fields": [
                        {
                          "uid": "wmcd6d1u3re6pt0i",
                          "value": "Some text"
                        }
                      ],
                      "last_activity_action": null,
                      "last_activity_time": null,
                      "staff": {
                        "uid": "fc2ca1c54e528bc4"
                      },
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "uid": "ofnm9n27xfkaicde",
                      "updated_at": "2025-08-05T09:53:15.761+03:00"
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "Error Code",
                      "field": "Error Field (optional)",
                      "message": "Error Message"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates a Matter",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/matters/{uid}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "matter": {
                    "properties": {
                      "fields": {
                        "description": "A list of fields to be updated",
                        "items": {
                          "properties": {
                            "uid": {
                              "description": "The fields uid",
                              "type": "string"
                            },
                            "value": {
                              "description": "The fields value to be updated",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/settings": {
      "get": {
        "description": "Get settings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "settings": {
                      "terms": {
                        "options": [
                          "clients",
                          "patients",
                          "students",
                          "pets",
                          "cases",
                          "projects",
                          "properties",
                          "jobs",
                          "accounts",
                          "opportunities",
                          "vehicles"
                        ],
                        "selected": "clients"
                      }
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Show business client settings",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/settings"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update settings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "settings": {
                      "terms": {
                        "selected": "pets"
                      }
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update business client settings",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/clients/v1/settings"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "settings": {
                    "properties": {
                      "terms": {
                        "properties": {
                          "selected": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v3/clients/client_settings/{client_uid}": {
      "get": {
        "summary": "Retrieve Client Settings",
        "description": "Get the client settings for a specific client - Available for **Staff and Client Tokens**",
        "parameters": [
          {
            "name": "client_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the Client",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/clients/clientSettings.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Client Settings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Client Settings",
        "description": "Update the client settings for a specific client - Available for **Staff and Client Tokens**",
        "parameters": [
          {
            "name": "client_uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the Client",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "opt_out_transactional_sms": {
                    "type": "boolean",
                    "description": "Opt out from transactional SMS"
                  }
                },
                "required": [
                  "client_uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/clients/clientSettings.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Client Settings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/client_api/v1/portals/{business_uid}/contact/get_form": {
      "get": {
        "description": "Gets the leave details form of the business.",
        "parameters": [
          {
            "description": "business_uid",
            "in": "path",
            "name": "business_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "description": "Please fill out your details below so we can process your request.",
                    "sections": [
                      {
                        "description": "Please fill out your details below so we can process your request.",
                        "fields": [
                          [
                            {
                              "hidden": false,
                              "id": "subject",
                              "label": "Subject",
                              "required": true,
                              "type": "subject"
                            }
                          ],
                          [
                            {
                              "hidden": false,
                              "id": "message",
                              "label": "Message",
                              "required": true,
                              "type": "multiline"
                            }
                          ]
                        ],
                        "title": "",
                        "type": "message_info"
                      },
                      {
                        "description": "translation missing: en.settings.forms.leave_details.section.client_details.description",
                        "editable": true,
                        "fields": [
                          [
                            {
                              "default_value": "",
                              "id": "6tg9ode4uj2accvx",
                              "keep_asking": false,
                              "label": "email_label",
                              "object_type": "contact",
                              "required": true,
                              "type": "email"
                            }
                          ],
                          [
                            {
                              "default_value": "",
                              "id": "qkq65wh8577vio6q",
                              "keep_asking": false,
                              "label": "firstname_label",
                              "object_type": "contact",
                              "required": true,
                              "type": "firstname"
                            }
                          ]
                        ],
                        "title": "Client Info",
                        "type": "fields"
                      },
                      {
                        "description": "Enter a message you want your clients to read before they submit",
                        "fields": [
                          [
                            {
                              "default_value": "",
                              "enabled": false,
                              "label": "Business policy",
                              "type": "policy"
                            }
                          ]
                        ],
                        "title": "Business policy",
                        "type": "policies"
                      }
                    ],
                    "title": "Leave details form",
                    "type": "leave_details"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Leave Details Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client_api/v1/portals/{business_uid}/contact/get_form"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/client_api/v1/portals/{business_uid}/contact/submit": {
      "post": {
        "description": "Submits Leave Details Form to the business.",
        "parameters": [
          {
            "description": "business_uid",
            "in": "path",
            "name": "business_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "auto_reply_message": null,
                    "conversation_uid": "ppnmz70yqxltzz6j",
                    "id": 22,
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdHlfdWlkIjoibzlkaTExdTd6dHU5NjFqOSIsImV4dHJhIjp7ImJ1c2luZXNzX3VpZCI6ImZiMGMyM2ZmN2UxNDI1NjgifSwiZXhwIjoxNzU2Nzk2MTkyLCJyZWZyZXNoIjoxNzU2Nzc2OTkyLCJjcmVhdGVkIjoxNzU0Mzc2OTkyLCJ0eXBlIjoiY2xpZW50IiwianRpIjoiMzg3NjAzNjY5MWY0YjY2M2Y2ZTk4MzM2MjA3MGM4NjZiYTdjOTg3YzVhYWRhMDgyMWVmNjQ0N2M4NTgzMjM2YyJ9.dGLJUl9kJd9G9F5h_CLEHO4oDCCTGXSEfKlOhJRP90o",
                    "uid": "xlc8czadb3tyag1k"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Submits Leave Details Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client_api/v1/portals/{business_uid}/contact/submit"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "form_data": {
                    "items": {
                      "properties": {
                        "fields": {
                          "properties": {
                            "key": {
                              "description": "Field Id",
                              "type": "string"
                            },
                            "value": {
                              "description": "Field Value",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "title",
                        "amount",
                        "quantity"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "source_data": {
                    "properties": {
                      "isWidget": {
                        "description": "The form submitted from widget or not",
                        "type": "boolean"
                      },
                      "o": {
                        "description": "The origin type in Base64",
                        "type": "string"
                      },
                      "s": {
                        "description": "The source url",
                        "type": "string"
                      },
                      "topUrl": {
                        "description": "The top url in Base64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/client_api/v1/portals/{business_uid}/share_documents_form/get_form": {
      "get": {
        "description": "Gets the share documents form of the business.",
        "parameters": [
          {
            "in": "path",
            "name": "business_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share Documents Form",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "description": "Please fill out your details below so we can process your request.",
                      "sections": [
                        {
                          "description": "Please fill out your details below so we can process your request.",
                          "fields": [
                            [
                              {
                                "id": "documents",
                                "label": "Select your files",
                                "required": true,
                                "type": "documents"
                              }
                            ],
                            [
                              {
                                "id": "title",
                                "label": "Document Title",
                                "required": false,
                                "type": "title"
                              }
                            ],
                            [
                              {
                                "id": "message",
                                "label": "Message",
                                "required": false,
                                "type": "multiline"
                              }
                            ]
                          ],
                          "title": "",
                          "type": "message_info"
                        },
                        {
                          "description": "Please fill out your details below so we can process your request.",
                          "editable": true,
                          "fields": [
                            {
                              "default_value": "",
                              "id": "0tq0ikpkf6amyo6",
                              "keep_asking": false,
                              "required": false,
                              "type": "singleline"
                            }
                          ],
                          "title": "",
                          "type": "fields"
                        },
                        {
                          "description": "Enter a message you want your clients to read before they submit",
                          "fields": [
                            {
                              "default_value": "",
                              "enabled": true,
                              "label": "Business policy",
                              "type": "policy"
                            }
                          ],
                          "title": "Business policy",
                          "type": "policies"
                        }
                      ],
                      "title": "Share documents form",
                      "type": "share_documents"
                    }
                  ],
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get Share Documents Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client_api/v1/portals/{business_uid}/share_documents_form/get_form"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/client_api/v1/portals/{business_uid}/share_documents_form/submit": {
      "post": {
        "description": "Submits Share Documents Form to the business.",
        "parameters": [
          {
            "in": "path",
            "name": "business_uid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Share Documents Form",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "conversation_uid": "jkhk87vkj98jhg8b",
                    "token": "n98h98bakwjefbf873fb8"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Submits Share Documents Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client_api/v1/portals/{business_uid}/share_documents_form/submit"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "form_data": {
                    "items": {
                      "properties": {
                        "fields": {
                          "properties": {
                            "documents": {
                              "description": "List of binary files",
                              "items": {
                                "format": "binary",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "message": {
                              "description": "Message of the form field",
                              "type": "string"
                            },
                            "title": {
                              "description": "Title of the form field",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": [
                        "title",
                        "message",
                        "documents"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientSettingsList": {
        "type": "object",
        "properties": {
          "client_settings": {
            "description": "List of Client Settings",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/clients/clientSettings.json"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      }
    }
  },
  "tags": []
}
