{
  "openapi": "3.0.0",
  "info": {
    "title": "Scheduling",
    "description": "Unified OpenAPI specification for scheduling domain",
    "version": "3.0",
    "x-generated": {
      "timestamp": "2025-08-16T13:00:03.397Z",
      "sourceFiles": [
        "legacy_v1_scheduling.json",
        "availability_slots.json",
        "availability.json",
        "resource_management.json"
      ],
      "pathNormalizations": [
        {
          "file": "legacy_v1_scheduling.json",
          "basePath": "/platform/v1",
          "transformations": [
            {
              "original": "/scheduling/appointments",
              "normalized": "/platform/v1/scheduling/appointments",
              "basePath": "/platform/v1"
            },
            {
              "original": "/scheduling/appointments/{appointment_id}",
              "normalized": "/platform/v1/scheduling/appointments/{appointment_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/scheduling/bookings",
              "normalized": "/platform/v1/scheduling/bookings",
              "basePath": "/platform/v1"
            },
            {
              "original": "/services",
              "normalized": "/platform/v1/services",
              "basePath": "/platform/v1"
            },
            {
              "original": "/services/availability",
              "normalized": "/platform/v1/services/availability",
              "basePath": "/platform/v1"
            },
            {
              "original": "/services/{service_id}",
              "normalized": "/platform/v1/services/{service_id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/services/{service_id}/availability",
              "normalized": "/platform/v1/services/{service_id}/availability",
              "basePath": "/platform/v1"
            }
          ]
        }
      ],
      "pathConflicts": [],
      "componentConflicts": [],
      "totalPaths": 15,
      "totalComponents": 4
    }
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "Unified API Gateway server"
    }
  ],
  "paths": {
    "/platform/v1/scheduling/appointments": {
      "get": {
        "description": "Get appointments list",
        "parameters": [
          {
            "description": "Business ID (optional)",
            "in": "query",
            "name": "business_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Client ID Filter",
            "in": "query",
            "name": "client_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "State Filter - rejected/scheduled/done/cancelled/pending_reschedule/reschedule e.g state=done,rejected",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Multiple order by option - updated:DESC,start_at:ASC,created:DESC",
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "appointments": [
                      {
                        "approval_mode": null,
                        "business_uid": "104a5664c3663a8d",
                        "category_name": null,
                        "charge_type": "no_price",
                        "client_color_id": 0,
                        "client_first_name": "Deeanna",
                        "client_id": "xvl55kzldujkar76",
                        "client_last_name": "Rice",
                        "conversation_id": "c7g4pvubtj84j6b5",
                        "created_at": "2025-08-05T06:56:16.020Z",
                        "currency": null,
                        "duration": 30,
                        "end_time": "2025-08-11T06:30:00.000Z",
                        "id": "e7j16p8hrgacto4g",
                        "image_url": "",
                        "initiator": null,
                        "interaction_details": "consequuntur",
                        "interaction_type": "client_location",
                        "is_recurring": false,
                        "linked_booking_uid": null,
                        "no_show": false,
                        "notes": null,
                        "optional_times": [],
                        "payment_id": null,
                        "payment_status": null,
                        "price": "0.0",
                        "series_id": null,
                        "series_instance_count": null,
                        "service_id": "vxolrre9o6ob92ee",
                        "staff_display_name": "Britt Bogan",
                        "staff_id": "9a33fc142dbb67f3",
                        "staff_image": null,
                        "start_time": "2025-08-11T06:00:00.000Z",
                        "state": "scheduled",
                        "title": "Advanced didactic portal",
                        "type": "appointment",
                        "updated_at": "2025-08-05T06:56:16.020Z"
                      }
                    ],
                    "next_page": null
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointments List",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/scheduling/appointments/{appointment_id}": {
      "get": {
        "description": "Get appointment",
        "parameters": [
          {
            "description": "Appointment id",
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "appointment": {
                      "approval_mode": null,
                      "auto_follow_up_hours": 0,
                      "business_uid": "104a5664c3663a8d",
                      "category_name": null,
                      "charge_type": "no_price",
                      "client_color_id": 0,
                      "client_first_name": "Deeanna",
                      "client_id": "xvl55kzldujkar76",
                      "client_last_name": "Rice",
                      "conversation_id": "c7g4pvubtj84j6b5",
                      "coupon": null,
                      "created_at": "2025-08-05T06:56:16.020Z",
                      "currency": null,
                      "duration": 30,
                      "end_time": "2025-08-11T06:30:00.000Z",
                      "id": "e7j16p8hrgacto4g",
                      "state": "scheduled",
                      "title": "Advanced didactic portal",
                      "type": "appointment",
                      "updated_at": "2025-08-05T06:56:16.020Z"
                    }
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointment",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments/{appointment_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/scheduling/bookings": {
      "get": {
        "description": "Get bookings of client",
        "parameters": [
          {
            "description": "Maximum number of records which are returned for the request",
            "in": "query",
            "name": "per_page",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "First record's index in the returned list (e.g. per_page = 10, offset = 1, reords 11 to 20 are returned)",
            "in": "query",
            "name": "offset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Business UID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Matter UID",
            "in": "query",
            "name": "matter_uid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If equals to true, returns records from the past only. Otherwise, returns future bookings as well.",
            "in": "query",
            "name": "passed",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is bigger than this parameter",
            "in": "query",
            "name": "start_time",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is smaller than this parameter",
            "in": "query",
            "name": "end_time",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "bookings": [
                      {
                        "approval_mode": "immediate",
                        "category_name": null,
                        "charge_type": "no_price",
                        "client_id": "3zashrlha0cwvnoz",
                        "conversation_id": "kehqoc1jkgooe0ft",
                        "currency": "ILS",
                        "depth": "deep",
                        "description": null,
                        "duration": 60,
                        "end_time": "2025-08-07T02:56:21.751-05:00",
                        "image_url": "",
                        "interaction_details": "Denver, CO, USA",
                        "interaction_type": "business_location",
                        "title": "Appointment 1",
                        "type": "appointment",
                        "uid": "wpyygjkyu0jca08e"
                      }
                    ]
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Bookings [Alpha] ",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/services": {
      "get": {
        "description": "Get services list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "services": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/services/availability": {
      "get": {
        "description": "Get services availability",
        "parameters": [
          {
            "description": "Service ID filter",
            "in": "query",
            "name": "service_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID filter",
            "in": "query",
            "name": "staff_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "availability": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services Availability",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/services/{service_id}": {
      "get": {
        "description": "Get specific service details",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "service": {}
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service Details",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/platform/v1/services/{service_id}/availability": {
      "get": {
        "description": "Get specific service availability",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Staff ID filter",
            "in": "query",
            "name": "staff_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "availability": []
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service Specific Availability",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v3/scheduling/availability_slots": {
      "get": {
        "summary": "Get all AvailabilitySlots",
        "description": "Retrieve availability slots for scheduling based on specified criteria. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
        "tags": [
          "Availability Slots"
        ],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "description": "Start time for availability search",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "description": "End time for availability search",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "service_uid",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_type_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of resource type UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of resource UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staff_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of staff UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slot_duration",
            "in": "query",
            "required": false,
            "description": "Duration of each slot in minutes",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "slot_interval",
            "in": "query",
            "required": false,
            "description": "Interval between slots in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "padding_before",
            "in": "query",
            "required": false,
            "description": "Padding time before each slot in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "padding_after",
            "in": "query",
            "required": false,
            "description": "Padding time after each slot in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "exclude_booking_uid",
            "in": "query",
            "required": false,
            "description": "Unique identifier of a booking to exclude from busy slots calculation when determining availability. When provided, the specified booking is temporarily removed from the busy slots list before calculating available time slots. This is essential for rescheduling scenarios where you need to check if the original time slot would be available without the current booking, or for conflict detection when validating potential overlaps. Example: If booking 'abc123' is scheduled from 2:00-3:00 PM and you want to reschedule it, passing exclude_booking_uid=abc123 will show 2:00-3:00 PM as available (assuming no other bookings conflict). If other bookings exist during that time, the slot remains busy.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Availability slots retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/AvailabilitySlotList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters - missing required parameters or invalid values"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service or specified resources not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/business_availabilities/{business_uid}": {
      "get": {
        "summary": "Get BusinessAvailability",
        "description": "Retrieve availability time slots for a specific business within a date range\n\n **Only available for Directory Tokens**",
        "tags": [
          "Business Availability"
        ],
        "parameters": [
          {
            "name": "business_uid",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the business",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "description": "Start date (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "description": "End date (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Business availability retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/businessAvailability.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Business not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/business_availabilities": {
      "get": {
        "summary": "Get all BusinessAvailabilities",
        "description": "Retrieve availability time slots for multiple businesses in a directory\n\n **Only available for Directory Tokens**",
        "tags": [
          "Business Availability"
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "description": "Start date (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "description": "End date (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "scheduling_enabled",
            "in": "query",
            "required": false,
            "description": "Determines whether to return only accounts with online scheduling enabled or disabled. Default: true (returns accounts with online scheduling enabled)",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BusinessAvailabilities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/BusinessAvailabilityList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Directory not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/resource_types": {
      "get": {
        "summary": "Get all ResourceTypes",
        "description": "Get a list of resource types for a business, with pagination\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/ResourceTypesList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource Type"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a ResourceType",
        "description": "Create a new resource type\n\nAvailable for **Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource type"
                  },
                  "services": {
                    "type": "array",
                    "description": "Array of service UIDs that require this resource type",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ],
                "example": {
                  "name": "Treatment Room",
                  "services": [
                    "service_uid_1",
                    "service_uid_2"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resourceType.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource Type"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/resource_types/{uid}": {
      "get": {
        "summary": "Retrieve a ResourceType",
        "description": "Get a specific resource type by UID\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the ResourceType",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resourceType.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource Type"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a ResourceType",
        "description": "Update a resource type's properties\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the ResourceType",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource type"
                  },
                  "services": {
                    "type": "array",
                    "description": "Array of service UIDs that require this resource type",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "name": "Treatment Room",
                  "services": [
                    "service_uid_1",
                    "service_uid_2"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resourceType.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource Type"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a ResourceType",
        "description": "Delete a resource type\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the ResourceType",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource Type"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/resources": {
      "get": {
        "summary": "Get all Resources",
        "description": "Get all resources, with pagination and filtering by resource type or service\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          },
          {
            "name": "resource_type_uid",
            "required": false,
            "in": "query",
            "description": "Filter resources by resource type UID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "service_uid",
            "required": false,
            "in": "query",
            "description": "Filter resources by service UID that requires their resource type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with_deleted",
            "required": false,
            "in": "query",
            "description": "Include deleted resources in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/ResourcesList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a Resource",
        "description": "Create a new resource\n\nAvailable for **Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "resource_type_uid": {
                    "type": "string",
                    "description": "The resource type this instance belongs to"
                  }
                },
                "required": [
                  "name",
                  "resource_type_uid"
                ],
                "example": {
                  "name": "Treatment Room 1",
                  "resource_type_uid": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resource.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/resources/{uid}": {
      "get": {
        "summary": "Retrieve a Resource",
        "description": "Get a specific resource by UID\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the Resource",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resource.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a Resource",
        "description": "Update a resource's properties\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the Resource",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the resource"
                  }
                },
                "example": {
                  "name": "Treatment Room 1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resource.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a Resource",
        "description": "Soft-delete a resource\n\nAvailable for **Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the Resource",
            "schema": {
              "type": "string"
            },
            "example": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/scheduling/resources/bulk": {
      "post": {
        "summary": "Bulk Create Resources",
        "description": "Create multiple resources for a business in a single request\n\nAvailable for **Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the resource"
                    },
                    "resource_type_uid": {
                      "type": "string",
                      "description": "The resource type this instance belongs to"
                    }
                  },
                  "required": [
                    "name",
                    "resource_type_uid"
                  ]
                }
              },
              "example": [
                {
                  "name": "Treatment Room 1",
                  "resource_type_uid": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
                },
                {
                  "resource_type_uid": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk creation results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Status of the creation for the entity"
                      },
                      "entity": {
                        "description": "The entity that was attempted to be created, including any provided data, or null if not applicable",
                        "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resource.json"
                      },
                      "error": {
                        "type": "string",
                        "description": "Error message if the creation of the entity failed"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "success": true,
                    "entity": {
                      "uid": "a4ca2054-3bb0-4788-8e9e-ee2442975e22",
                      "created_at": "2023-06-15T11:30:00Z",
                      "updated_at": "2023-06-15T15:45:10Z",
                      "resource_type_uid": "94ca2054-3bb0-4788-8e9e-ee2442975cdd",
                      "name": "Treatment Room 1",
                      "deleted_at": null
                    }
                  },
                  {
                    "success": false,
                    "entity": {
                      "resource_type_uid": "94ca2054-3bb0-4788-8e9e-ee2442975cdd"
                    },
                    "error": "Validation failed: name is required"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Resource"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AvailabilitySlotList": {
        "type": "object",
        "properties": {
          "availability_slots": {
            "description": "List of AvailabilitySlots",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/availabilitySlot.json"
            }
          }
        }
      },
      "BusinessAvailabilityList": {
        "type": "object",
        "properties": {
          "business_availabilities": {
            "description": "List of BusinessAvailabilities",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/businessAvailability.json"
            }
          }
        }
      },
      "ResourcesList": {
        "type": "object",
        "properties": {
          "resources": {
            "description": "List of Resources",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resource.json"
            }
          }
        }
      },
      "ResourceTypesList": {
        "type": "object",
        "properties": {
          "resource_types": {
            "description": "List of ResourceTypes",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/resourceType.json"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Provide a valid bearer token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
      }
    }
  },
  "tags": []
}
