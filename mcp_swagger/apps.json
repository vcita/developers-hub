{
  "openapi": "3.1.0",
  "info": {
    "title": "Apps",
    "description": "OpenAPI specification for apps domain",
    "version": "3.0",
    "x-generated": {
      "sourceFiles": [
        "widgets_and_boards.json",
        "legacy_v1_apps.json",
        "legacy_token.json",
        "apps.json",
        "jwks.json"
      ],
      "pathNormalizations": [
        {
          "file": "legacy_v1_apps.json",
          "basePath": "/platform/v1",
          "transformations": [
            {
              "original": "/apps",
              "normalized": "/platform/v1/apps",
              "basePath": "/platform/v1"
            },
            {
              "original": "/apps/{id}",
              "normalized": "/platform/v1/apps/{id}",
              "basePath": "/platform/v1"
            },
            {
              "original": "/apps/{id}/assign",
              "normalized": "/platform/v1/apps/{id}/assign",
              "basePath": "/platform/v1"
            },
            {
              "original": "/apps/{id}/install_app",
              "normalized": "/platform/v1/apps/{id}/install_app",
              "basePath": "/platform/v1"
            },
            {
              "original": "/apps/{id}/unassign",
              "normalized": "/platform/v1/apps/{id}/unassign",
              "basePath": "/platform/v1"
            },
            {
              "original": "/apps/{id}/uninstall_app",
              "normalized": "/platform/v1/apps/{id}/uninstall_app",
              "basePath": "/platform/v1"
            }
          ]
        },
        {
          "file": "legacy_token.json",
          "basePath": "/oauth/service",
          "transformations": [
            {
              "original": "/token",
              "normalized": "/oauth/service/token",
              "basePath": "/oauth/service"
            }
          ]
        }
      ],
      "pathConflicts": [],
      "componentConflicts": [
        {
          "type": "schema",
          "name": "Response",
          "resolution": "Renamed to Response_apps",
          "files": [
            "merged",
            "apps.json"
          ]
        }
      ],
      "totalPaths": 17,
      "totalComponents": 15
    }
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "Unified API Gateway server"
    }
  ],
  "paths": {
    "/v3/apps/widgets": {
      "post": {
        "operationId": "Widgets_create",
        "summary": "Create a Widget",
        "description": "Create a new widget. **Only available for App Tokens that has the app_type 'widgets'**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWidgetRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Widget"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "Widgets_getAll",
        "summary": "Get all Widgets",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by module, Example: module=Payment",
            "name": "module",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MultiWidgetsResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Widget"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/widgets/{uid}": {
      "put": {
        "operationId": "Widgets_update",
        "summary": "Update Widget",
        "description": "Update a widget. **Only available for App Tokens that has the app_type 'widgets'**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "The widget uid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWidgetRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Widget"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/staff_widgets_boards": {
      "post": {
        "operationId": "StaffWidgetsBoard_create",
        "summary": "Create a Staff Widgets Board",
        "description": "Creates a widgets board for staff member. **Available for Staff Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffWidgetsBoardRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoard.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Board"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "StaffWidgetsBoard_getAll",
        "summary": "Get all Widgets Boards Of The Staff",
        "description": "Returns the widgets boards for staff member. **Available for Staff Tokens**",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by type, Example: type=dashboard",
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MultiStaffWidgetsBoardResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Board"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/staff_widgets_boards/{uid}": {
      "put": {
        "operationId": "StaffWidgetsBoard_update",
        "summary": "Update a Staff Widgets Board",
        "description": "Update a staff widget board. **Only available for Staff Tokens**",
        "parameters": [
          {
            "name": "uid",
            "required": true,
            "in": "path",
            "description": "The staff widgets board uid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffWidgetsBoardRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoard.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Board"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/staff_widgets_boards_templates": {
      "post": {
        "operationId": "StaffWidgetsBoardsTemplate_create",
        "summary": "Create a Staff Widgets Boards Template",
        "description": "Create a staff widget board template. **Only available for Directory Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "staff_uid": {
                    "type": "string",
                    "description": "The unique identifier of the staff which will be used as staff widget board template"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoardsTemplate.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Boards Template"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "operationId": "StaffWidgetsBoardsTemplate_getAll",
        "summary": "Get all Staff Widgets Boards Templates",
        "description": "Get all staff widget board templates. **Only available for Directory Tokens**",
        "parameters": [
          {
            "description": "Filter by owner_type, Example: owner_type=directory",
            "name": "owner_type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "directory",
                "business"
              ]
            }
          },
          {
            "description": "Filter by owner_uid, Example: owner_uid=d290f1ee-6c54-4b01-90e6-d701748f0851",
            "name": "owner_uid",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by staff_uid, Example: staff_uid=d290f1ee-6c54-4b01-90e6-d701748f0851",
            "name": "staff_uid",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MultiStaffWidgetsBoardsTemplatesResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Boards Template"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/staff_widgets_boards_templates/{uid}": {
      "put": {
        "operationId": "StaffWidgetsBoardsTemplate_update",
        "summary": "Update a Staff Widgets Boards Template",
        "description": "Update a staff widget board template. **Only available for Directory Tokens**",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "staff_uid": {
                    "type": "string",
                    "description": "The unique identifier of the staff which will be used as staff widget board template"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "returns a staff widget board template entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoardsTemplate.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          }
        },
        "tags": [
          "Staff Widgets Boards Template"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "StaffWidgetsBoardsTemplate_delete",
        "summary": "Delete a Staff Widgets Boards Template",
        "description": "Delete a staff widget board template. **Only available for Directory Tokens**",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the deleted staff widget board template entity",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoardsTemplate.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Widgets Boards Template"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/platform/v1/apps": {
      "get": {
        "description": "Retrieve a list of available apps. **Available for Staff and Directory Tokens**.",
        "parameters": [],
        "responses": {
          "201": {
            "description": "list apps",
            "content": {
              "application/json": {
                "example": {
                  "apps": [
                    {
                      "api_uri": "https://dummy-path.com",
                      "app_code_name": "dummyapp_62",
                      "app_features": [],
                      "app_host": "https://dummy-path.com",
                      "app_id": "some_id",
                      "app_mobile_screenshot_uris": [],
                      "app_screenshot_uris": [],
                      "built_in": false,
                      "contact_support_link": "https://dummy-path.com",
                      "deep_link": "https://dummy-path.com",
                      "description": {},
                      "is_internal": false,
                      "locales": [],
                      "menu_items": {
                        "subitems": [
                          {
                            "category": "clients",
                            "item_name": {
                              "en": "RDBMS Page"
                            },
                            "route": "rdbms"
                          }
                        ]
                      },
                      "name": "Some App",
                      "open_in_new_tab": false,
                      "permissions": [
                        "can_view_payments"
                      ],
                      "personal_connection": false,
                      "pre_installed": false,
                      "privacy_policy_link": "https://dummy-path.com",
                      "requires_upgrade": false,
                      "status": "not_installed",
                      "supported_countries": [
                        "United States"
                      ],
                      "supported_in_mobile": true,
                      "url_params": []
                    }
                  ],
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "List of apps",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create a new app. **Available for Staff and Directory Tokens**.",
        "parameters": [],
        "responses": {
          "201": {
            "description": "app created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "app_code_name": "some_code_name",
                    "app_id": "some_id",
                    "client_id": "OAuth Client ID",
                    "client_secret": "OAuth Client Secret",
                    "name": "Some App"
                  },
                  "status": "OK"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Creates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "api_uri": {
                    "description": "Link to the application API",
                    "type": "string"
                  },
                  "app_code_name": {
                    "description": "The app's code name. This will be used as the app's id for APIS",
                    "type": "string"
                  },
                  "app_features": {
                    "description": "A list of the app's features. Will be displayed to the user in the app info page. Max 10 features. Max feature length is 500 chars.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "app_layer": {
                    "description": "Layer of application.",
                    "type": "string"
                  },
                  "app_mobile_screenshot_uris": {
                    "description": "Links to app screenshots or demo videos. Displayed on the mobile App info page. Each asset must be 608 × 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                    "type": "string"
                  },
                  "app_screenshot_uris": {
                    "description": "Links to app screenshots or demo videos. Displayed on the desktop App info page. Each asset must be 608 × 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                    "type": "string"
                  },
                  "app_type": {
                    "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows, signatures, onboarding_wizard, notifications",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "contact_support_link": {
                    "description": "Link to the app's contact support page",
                    "type": "string"
                  },
                  "deep_link": {
                    "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                    "properties": {
                      "path": {
                        "description": "The relative path to the page.",
                        "type": "string"
                      },
                      "path_params": {
                        "description": "The params that will be added to the path URL (optional)",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "demand_scopes": {
                    "description": "Scopes the application must have in order to serve requests.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "properties": {
                      "logo": {
                        "description": "Link to the app's logo",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "The app's short description. Should contain a summarize review of the app's purpose and functions. Max length is 260 chars.",
                        "type": "string"
                      },
                      "text": {
                        "description": "The app's long description. Should describe the app's functions in detail. Max length is 380 chars.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "locales": {
                    "description": "Locales supported by the app",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "menu_items": {
                    "description": "Configuration for the left sidebar menu",
                    "properties": {
                      "subitems": {
                        "description": "Items array",
                        "items": {
                          "properties": {
                            "category": {
                              "description": "Section of the left menu in which the item will appear. Valid values are: [\"calendar\", \"clients\", \"payments\", \"inbox\", \"documents\", \"campaigns\", \"reputation\", \"my-livesite\", \"social\", \"social_info\", \"app_market\", \"reports\", \"team-chat\", \"advertising\", \"subscriptions\", \"my_account\", \"cashflow\", \"workforce\", \"setupguide\", \"reviews\", \"social_media\", \"online_listing\"]",
                              "type": "string"
                            },
                            "item_name": {
                              "description": "Item names in different languages",
                              "properties": {
                                "de": {
                                  "type": "string"
                                },
                                "en": {
                                  "description": "Item name in english",
                                  "type": "string"
                                },
                                "es": {
                                  "type": "string"
                                },
                                "fr": {
                                  "type": "string"
                                },
                                "he": {
                                  "type": "string"
                                },
                                "it": {
                                  "type": "string"
                                },
                                "pl": {
                                  "type": "string"
                                },
                                "pt": {
                                  "type": "string"
                                },
                                "ru": {
                                  "type": "string"
                                },
                                "sl": {
                                  "type": "string"
                                },
                                "tr": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "permissions": {
                              "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\", \"has_marketing_permissions\", \"can_access_admin_account\", \"can_access_settings\", \"can_export_payments\"]",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "Suffix route relative to the app domain.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The app's name. Must be 3 to 25 chars long.",
                    "type": "string"
                  },
                  "open_in_new_tab": {
                    "description": "Whether the app will be opened in a new tab or as an iframe",
                    "type": "boolean"
                  },
                  "payment_data": {
                    "description": "Payment data for the app. Will be displayed in the app info page",
                    "properties": {
                      "pay_per_unit": {
                        "description": "The units available in this purchasable for extra payment",
                        "type": "array"
                      },
                      "prices": {
                        "description": "Price list",
                        "properties": {
                          "currency": {
                            "description": "Currency, allowed only: USD, GBP or EUR",
                            "type": "string"
                          },
                          "pay_per_unit": {
                            "description": "Unit prices",
                            "properties": {
                              "staff": {
                                "description": "Price per staff",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "payment_type": {
                            "description": "Payment type, allowed: monthly, free}",
                            "type": "string"
                          },
                          "price": {
                            "description": "Price to pay",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "personal_connection": {
                    "description": "Whether the app requires each user to connect separately",
                    "type": "boolean"
                  },
                  "privacy_policy_link": {
                    "description": "A link to the apps privacy policy",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The link that the user will be redirected to when opening the app",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Scopes the application needs access to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "supported_countries": {
                    "description": "Countries in which the app will be available. Empty array for all countries.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "trusted": {
                    "description": "Whether application can skip the authorization screen (true/false)",
                    "type": "string"
                  },
                  "url_params": {
                    "description": "Parameters that will be passed to the app. Valid values are: impersonate, business_uid, staff_role, staff_uid, payment_permissions, language, package, brand_host",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/apps/{id}": {
      "get": {
        "description": "Retrieve an app by code name. **Available for Staff and Directory Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "application": {
                      "api_uri": "https://oururi.com",
                      "app_code_name": "IncredibleCodeName",
                      "app_features": [
                        "Lorem ipsum dolor",
                        "consectetur adipiscing"
                      ],
                      "app_screenshot_uris": [
                        "https://www.techadvisor.com/cmsdata/features/3685380/rick_and_morty_season_4_thumb800.jpg"
                      ],
                      "app_type": [
                        "communication"
                      ],
                      "contact_support_link": "https://www.ynet.co.il/home/0,7340,L-8,00.html",
                      "description": {
                        "logo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/3835/normal_rqmnvkhvgg0g82mtzcoir0cg7vyythwg.png",
                        "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                        "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringilla urna, porttitor rhoncus dolor purus non enim praesent elementum facilisis leo, vel fringilla est ullamcorper eget."
                      },
                      "locales": [
                        "en",
                        "es",
                        "fr"
                      ],
                      "menu_items": null,
                      "name": "New Testing App 2",
                      "oauth_redirect_uris": [
                        "https://redirect.com",
                        "https://stuff.com",
                        "https://hello.com"
                      ],
                      "open_in_new_tab": true,
                      "openid": true,
                      "privacy_policy_link": "https://www.sport5.co.il/",
                      "redirect_uri": "https://en.wikipedia.org/wiki",
                      "supported_countries": [
                        "United States",
                        "United Kingdom",
                        "Israel"
                      ],
                      "trusted": true,
                      "url_params": []
                    },
                    "success": true
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Read an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update an app by code name. **Available for Staff & Directory Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "application": {
                    "api_uri": "https://OurApi.com",
                    "app_features": [
                      "Talk to all your friends!",
                      "Purchase stuff online!"
                    ],
                    "app_layer": "cores",
                    "app_screenshot_uris": [
                      "http://OurBestScreenshot.png"
                    ],
                    "app_type": [
                      "communication"
                    ],
                    "contact_support_link": "https://contactsupport.com",
                    "deep_link": {
                      "path": "/app/somepath",
                      "path_params": {
                        "this_is_a_parameter": 12
                      }
                    },
                    "demand_scopes": [
                      "payments",
                      "clients"
                    ],
                    "description": {
                      "logo": "https://BeautifulLogo.png",
                      "short_description": "This is the app's short description. A quick summary of the app's uses.",
                      "text": "This is the app's long description. It should describe the app's uses and benefits in detail."
                    },
                    "locales": [
                      "en"
                    ],
                    "menu_items": {
                      "subitems": [
                        {
                          "category": "clients",
                          "item_name": {
                            "en": "My RDBMS"
                          },
                          "route": "route"
                        }
                      ]
                    },
                    "name": "Our app",
                    "oauth_redirect_uris": [
                      "https://redirect.com",
                      "https://stuff.com",
                      "https://hello.com"
                    ],
                    "open_in_new_tab": true,
                    "privacy_policy_link": "https://ourprivacy.com",
                    "redirect_uri": "https://redirect.com",
                    "scopes": [
                      "clients"
                    ],
                    "supported_countries": [
                      "US"
                    ],
                    "trusted": "false",
                    "url_params": [
                      "business_uid"
                    ]
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Updates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "api_uri": {
                    "description": "Link to the application API",
                    "type": "string"
                  },
                  "app_features": {
                    "description": "A list of the app's features. Will be displayed to the user in the app info page. Max 10 features. Max feature length is 500 chars.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "app_layer": {
                    "description": "Layer of application.",
                    "type": "string"
                  },
                  "app_mobile_screenshot_uris": {
                    "description": "Links to app screenshots or demo videos. Displayed on the mobile App info page. Each asset must be 608 × 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                    "type": "string"
                  },
                  "app_screenshot_uris": {
                    "description": "Links to app screenshots or demo videos. Displayed on the desktop App info page. Each asset must be 608 × 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                    "type": "string"
                  },
                  "app_type": {
                    "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows, signatures, onboarding_wizard, notifications, calendar_sync",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "contact_support_link": {
                    "description": "Link to the app's contact support page",
                    "type": "string"
                  },
                  "deep_link": {
                    "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                    "properties": {
                      "path": {
                        "description": "The relative path to the page.",
                        "type": "string"
                      },
                      "path_params": {
                        "description": "The params that will be added to the path URL (optional)",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "demand_scopes": {
                    "description": "Scopes the application must have in order to serve requests.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "properties": {
                      "logo": {
                        "description": "Link to the app's logo",
                        "type": "string"
                      },
                      "short_description": {
                        "description": "The app's short description. Should contain a summarize review of the app's purpose and functions. Max length is 260 chars.",
                        "type": "string"
                      },
                      "text": {
                        "description": "The app's long description. Should describe the app's functions in detail. Max length is 380 chars.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "locales": {
                    "description": "Locales supported by the app",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "menu_items": {
                    "description": "Configuration for the left sidebar menu",
                    "properties": {
                      "subitems": {
                        "description": "Items array",
                        "items": {
                          "properties": {
                            "category": {
                              "description": "Section of the left menu in which the item will appear. Valid values are: [\"calendar\", \"clients\", \"payments\", \"inbox\", \"documents\", \"campaigns\", \"reputation\", \"my-livesite\", \"social\", \"social_info\", \"app_market\", \"reports\", \"team-chat\", \"advertising\", \"subscriptions\", \"my_account\", \"cashflow\", \"workforce\", \"setupguide\", \"reviews\", \"social_media\", \"online_listing\"]",
                              "type": "string"
                            },
                            "item_name": {
                              "description": "Item names in different languages",
                              "properties": {
                                "de": {
                                  "type": "string"
                                },
                                "en": {
                                  "description": "Item name in english",
                                  "type": "string"
                                },
                                "es": {
                                  "type": "string"
                                },
                                "fr": {
                                  "type": "string"
                                },
                                "he": {
                                  "type": "string"
                                },
                                "it": {
                                  "type": "string"
                                },
                                "pl": {
                                  "type": "string"
                                },
                                "pt": {
                                  "type": "string"
                                },
                                "ru": {
                                  "type": "string"
                                },
                                "sl": {
                                  "type": "string"
                                },
                                "tr": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "permissions": {
                              "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\", \"has_marketing_permissions\", \"can_access_admin_account\", \"can_access_settings\", \"can_export_payments\"]",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "route": {
                              "description": "Suffix route relative to the app domain.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The app's name. Must be 3 to 25 chars long.",
                    "type": "string"
                  },
                  "oauth_redirect_uris": {
                    "description": "An array of URLs to redirect the user to after a successful login.",
                    "type": "array"
                  },
                  "open_in_new_tab": {
                    "description": "Whether the app will be opened in a new tab or as an iframe",
                    "type": "boolean"
                  },
                  "personal_connection": {
                    "description": "Whether the app requires each user to connect separately",
                    "type": "boolean"
                  },
                  "privacy_policy_link": {
                    "description": "A link to the apps privacy policy",
                    "type": "string"
                  },
                  "redirect_uri": {
                    "description": "The link that the user will be redirected to when opening the app",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Scopes the application needs access to.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "supported_countries": {
                    "description": "Countries in which the app will be available. Empty array for all countries.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "trusted": {
                    "description": "Whether application can skip the authorization screen (true/false)",
                    "type": "string"
                  },
                  "url_params": {
                    "description": "Parameters that will be passed to the app.  Valid values are: impersonate, business_uid, staff_role, staff_uid, payment_permissions, language, package, brand_host",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/apps/{id}/assign": {
      "post": {
        "description": "Assign an application to a business or directory so it appears in the App Market. **Available for Internal & Directory Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "app_data": {
                      "assignment": {
                        "app_id": 2,
                        "built_in": false,
                        "business_id": 1222,
                        "created_at": "2021-11-16T13:29:47.000Z",
                        "directory_id": 12,
                        "id": 1,
                        "is_internal": false,
                        "pre_installed": false,
                        "updated_at": "2021-11-16T13:29:47.000Z"
                      }
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Assign an app on directory or a business [Internal] - Deprecated, /v3/apps/app_assignments instead",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/assign"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "built_in": {
                    "description": "Define the app as built_in for this directory, meaning it is installed for all its users and cannot be uninstalled by them. Used with directory_uid only.",
                    "type": "string"
                  },
                  "business_uid": {
                    "description": "The business uid to associate the app to.",
                    "type": "string"
                  },
                  "directory_uid": {
                    "description": "The directory uid to associate the app to.",
                    "type": "string"
                  },
                  "is_internal": {
                    "description": "Specify that the app is an internal - used with directory_uid only.",
                    "type": "string"
                  },
                  "pre_installed": {
                    "description": "Define the app as pre-installed for all new accounts of this directory - used with directory_uid only.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/apps/{id}/install_app": {
      "post": {
        "description": "Install an app for the authorized business. **Available for Staff Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "app_data": {
                    "app_code_name": "IncredibleCodeName",
                    "app_id": 72,
                    "app_name": "My Wiki Pages"
                  },
                  "data": {
                    "app_data": {
                      "app_code_name": "mywikipages_72",
                      "app_features": [],
                      "app_host": "https://en.wikipedia.org/wiki",
                      "app_id": 72,
                      "app_name": "My Wiki Pages",
                      "app_screenshot_uris": [],
                      "contact_support_link": null,
                      "description": {},
                      "is_internal": false,
                      "locales": [],
                      "permissions": null,
                      "privacy_policy_link": null,
                      "requires_upgrade": false,
                      "status": "installed",
                      "supported_countries": [],
                      "url_params": [
                        "language",
                        "staff_role"
                      ]
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "app_data": {
                    "app_code_name": "IncredibleCodeName"
                  },
                  "errors": [
                    {
                      "code": "already_exists",
                      "message": "Already installed"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Install an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/install_app"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        }
      }
    },
    "/platform/v1/apps/{id}/unassign": {
      "post": {
        "description": "Unassign an application from a business or directory. **Available for Internal & Directory Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "app_data": {
                      "assignment": {
                        "app_id": 2,
                        "business_id": 1222,
                        "created_at": "2021-11-16T13:29:47.000Z",
                        "directory_id": 12,
                        "id": 1,
                        "is_internal": false,
                        "updated_at": "2021-11-16T13:29:47.000Z"
                      }
                    }
                  },
                  "success": true
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Unassign an app on directory or a business [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/unassign"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "business_uid": {
                    "description": "The business uid to associate the app to.",
                    "type": "string"
                  },
                  "directory_uid": {
                    "description": "The directory uid to associate the app to.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/platform/v1/apps/{id}/uninstall_app": {
      "post": {
        "description": "Uninstall an app for the authorized business. **Available for Staff Tokens**.",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "app_data": {
                    "app_code_name": "IncredibleCodeName",
                    "app_id": 72,
                    "app_name": "My Wiki Pages"
                  },
                  "data": {
                    "app_data": {
                      "app_code_name": "mywikipages_72",
                      "app_features": [],
                      "app_host": "https://en.wikipedia.org/wiki",
                      "app_id": 72,
                      "app_name": "My Wiki Pages",
                      "app_screenshot_uris": [],
                      "contact_support_link": null,
                      "description": {},
                      "is_internal": false,
                      "locales": [],
                      "permissions": null,
                      "privacy_policy_link": null,
                      "requires_upgrade": false,
                      "status": "uninstalled",
                      "supported_countries": [],
                      "url_params": [
                        "language",
                        "staff_role"
                      ]
                    }
                  },
                  "success": true
                }
              }
            }
          },
          "422": {
            "description": "Failure",
            "content": {
              "application/json": {
                "example": {
                  "app_data": {
                    "app_code_name": "IncredibleCodeName"
                  },
                  "errors": [
                    {
                      "code": "missing",
                      "message": "App not installed"
                    }
                  ],
                  "success": false
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Uninstall an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/uninstall_app"
        },
        "x-auth-type": "Application & Application User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        }
      }
    },
    "/oauth/service/token": {
      "post": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service token generated",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "eade05e0ee958ed139b7431b1a630bff95260178699ddf88cbd86a32d2ac708c",
                  "created_at": "2021-11-16T13:29:47.000Z",
                  "expires_in": 3600,
                  "token_type": "Bearer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Generate an app access token",
        "description": "Generate an app access token for a given serivce_id (client_id) and service_secret (client_secret). These credentials are generated when an app is created and returned in the app's create response. This token can be used to create widgets or notifications for the app.",
        "tags": [
          "Service OAuth"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///oauth/service/token"
        },
        "x-auth-type": "None",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service_id": {
                    "description": "The Service ID",
                    "type": "string"
                  },
                  "service_secret": {
                    "description": "The Service Secret",
                    "type": "string"
                  }
                },
                "required": [
                  "service_id",
                  "service_secret"
                ],
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/app_assignments": {
      "get": {
        "operationId": "AppAssignments_list",
        "summary": "List App Assignments",
        "description": "Get a list of app assignments with optional filtering. Note: assignee_uid can only be used when assignee_type is also provided. **Available for Directory and internal Tokens**",
        "parameters": [
          {
            "name": "app_code_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by app code name"
          },
          {
            "name": "assignee_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "business",
                "package",
                "directory"
              ]
            },
            "description": "Filter by assignee type"
          },
          {
            "name": "assignee_uid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by assignee uid. Only allowed when assignee_type is also provided."
          },
          {
            "name": "directory_uid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by directory uid. Only available for internal Tokens."
          }
        ],
        "responses": {
          "200": {
            "description": "App assignments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "app_assignments": {
                              "type": "array",
                              "items": {
                                "$ref": "https://vcita.github.io/developers-hub/entities/apps/appAssignment.json"
                              }
                            }
                          },
                          "required": [
                            "app_assignments"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input data."
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "App Assignments"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "operationId": "AppAssignments_create",
        "summary": "Create an App Assignment",
        "description": "Create a new app assignment to a business, package or directory. **Available for Directory and internal Tokens**",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppAssignmentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "App assignment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/appAssignment.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input data."
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "App Assignments"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/app_assignments/{uid}": {
      "delete": {
        "operationId": "AppAssignments_delete",
        "summary": "Delete an App Assignment",
        "description": "Delete an app assignment. **Available for Directory and internal Tokens**",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the app assignment to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "App assignment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/appAssignment.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid input data."
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing or invalid."
          },
          "403": {
            "description": "Forbidden. You do not have access to this resource."
          },
          "404": {
            "description": "Not found. App assignment not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "App Assignments"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/compact_jws_tokens": {
      "post": {
        "summary": "Create a compact JWS token",
        "description": "Create a new compact JWS token that can be used to authenticate a staff member to an app in inTandem using a JWKS process. The token is signed by the app's private key and can be verified by inTandem's public key. Public JWKS token can be obtained at: https://api.vcita.biz/v3/apps/.well-known/jwks.json. Available for **Staff Tokens** and **AppStaffToken**.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_code_name": {
                    "type": "string",
                    "description": "The code name of the app that owns this token"
                  }
                },
                "required": [
                  "app_code_name"
                ],
                "example": {
                  "app_code_name": "tips"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A compact JWS token is successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/compactJWSToken.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing, invalid or not allowed to access the requested resource."
          },
          "429": {
            "description": "Rate limit has been reached due to the number of requests made for the same staff member in a short period of time."
          }
        },
        "tags": [
          "JWKS"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/apps/compact_jws_tokens/bulk": {
      "post": {
        "summary": "Bulk create compact JWS tokens",
        "description": "Create multiple compact JWS tokens for a list of app code names. The response will include the success, generated token (if successful), or error details for each app code name.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_code_names": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "The code name of the app that owns the token"
                    },
                    "description": "List of app code names for which JWS tokens need to be generated"
                  }
                },
                "required": [
                  "app_code_names"
                ],
                "example": {
                  "app_code_names": [
                    "tips",
                    "helpdesk",
                    "sales"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk creation of compact JWS tokens.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "compact_jws_tokens": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "success": {
                                "type": "boolean",
                                "description": "Status of the creation for the entity. Possible values: true (success), false (error)."
                              },
                              "data": {
                                "description": "The generated JWS token or null if failed",
                                "$ref": "https://vcita.github.io/developers-hub/entities/apps/compactJWSToken.json"
                              },
                              "error": {
                                "type": "string",
                                "description": "Error message if token creation failed"
                              }
                            },
                            "required": [
                              "success",
                              "entity",
                              "error"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The bearer token is missing, invalid or not allowed to access the requested resource."
          },
          "429": {
            "description": "Rate limit has been reached due to the number of requests made for the same staff member in a short period of time."
          }
        },
        "tags": [
          "JWKS"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateWidgetRequestDto": {
        "type": "object",
        "properties": {
          "display_name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayNameDto"
              }
            ]
          },
          "dimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetDimensionsDto"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "description": "The permissions required for the widget to show up for a staff member",
            "items": {
              "type": "string"
            }
          },
          "module": {
            "type": "string",
            "description": "The module (FF) required for the widget to show up for a staff member"
          },
          "component_data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDataDto"
              }
            ]
          }
        },
        "required": [
          "display_name",
          "dimensions",
          "component_data"
        ]
      },
      "StaffWidgetsBoardRequestDto": {
        "type": "object",
        "properties": {
          "board_layout_code_name": {
            "type": "string",
            "description": "A string representing the board layout",
            "enum": [
              "MainAndSideBar2Columns"
            ]
          },
          "type": {
            "type": "string",
            "description": "the grid frame of the layout, determines the layout frame containing the board",
            "enum": [
              "home"
            ]
          },
          "sections": {
            "type": "array",
            "description": "An array of sections for the widgets board",
            "items": {
              "$ref": "#/components/schemas/SectionDto"
            }
          }
        },
        "required": [
          "staff_uid",
          "client_uid",
          "from_number",
          "to_number",
          "direction",
          "status",
          "rate",
          "provider",
          "source_id",
          "external_uuid",
          "business_uid"
        ]
      },
      "UpdateWidgetRequestDto": {
        "type": "object",
        "properties": {
          "display_name": {
            "description": "The widget display name in different languages",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayNameDto"
              }
            ]
          },
          "component_data": {
            "description": "The widget component data",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDataDto"
              }
            ]
          },
          "dimensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetDimensionsDto"
              }
            ]
          },
          "permissions": {
            "type": "array",
            "description": "The permissions required for the widget to show up for a staff member",
            "items": {
              "type": "string"
            }
          },
          "module": {
            "type": "string",
            "description": "The module (FF) required for the widget to show up for a staff member"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "MultiWidgetsResponse": {
        "type": "object",
        "properties": {
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
            }
          }
        },
        "required": [
          "widgets"
        ]
      },
      "MultiStaffWidgetsBoardResponse": {
        "type": "object",
        "properties": {
          "staffWidgetsBoards": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoard.json"
            }
          }
        },
        "required": [
          "staffWidgetsBoards"
        ]
      },
      "MultiStaffWidgetsBoardsTemplatesResponse": {
        "type": "object",
        "properties": {
          "staff_widgets_boards_templates": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoardsTemplate.json"
            }
          }
        },
        "required": [
          "staff_widgets_boards_templates"
        ]
      },
      "DisplayNameDto": {
        "type": "object",
        "properties": {
          "en": {
            "type": "string"
          },
          "es": {
            "type": "string"
          },
          "fr": {
            "type": "string"
          },
          "it": {
            "type": "string"
          },
          "pt": {
            "type": "string"
          },
          "de": {
            "type": "string"
          },
          "pl": {
            "type": "string"
          },
          "nl": {
            "type": "string"
          },
          "he": {
            "type": "string"
          },
          "sl": {
            "type": "string"
          }
        },
        "required": [
          "en"
        ]
      },
      "WidgetDimensionsDto": {
        "description": "The widget dimensions including min\\max\\preferred height and width.",
        "type": "object",
        "properties": {
          "max_height": {
            "type": "integer"
          },
          "min_height": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "max_width": {
            "type": "integer"
          },
          "min_width": {
            "type": "integer"
          },
          "width": {
            "type": "integer"
          }
        },
        "required": [
          "max_height,",
          "min_height,",
          "height,",
          "max_width,",
          "min_width,",
          "width"
        ]
      },
      "CustomizedWidgetDimensionsDto": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer"
          },
          "width": {
            "type": "integer"
          }
        }
      },
      "ComponentDataDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "config": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "config"
        ]
      },
      "SectionDto": {
        "type": "object",
        "properties": {
          "code_name": {
            "type": "string",
            "description": "The section code name"
          },
          "widgets": {
            "description": "The sections widgets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SectionWidgetDto"
            }
          }
        },
        "required": [
          "code_name",
          "widgets"
        ]
      },
      "SectionWidgetDto": {
        "type": "object",
        "properties": {
          "widget_uid": {
            "type": "string",
            "description": "The widget uid"
          },
          "dimensions": {
            "description": "The sections widgets",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomizedWidgetDimensionsDto"
              }
            ]
          }
        },
        "required": [
          "uid"
        ]
      },
      "Response_apps": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "CreateAppAssignmentRequestDto": {
        "type": "object",
        "properties": {
          "assignee_type": {
            "type": "string",
            "description": "The type of entity this app is assigned to",
            "enum": [
              "business",
              "package",
              "directory"
            ]
          },
          "assignee_uid": {
            "type": "string",
            "description": "The uid of the entity this app is assigned to"
          },
          "app_code_name": {
            "type": "string",
            "description": "The unique identifier of the app"
          },
          "settings": {
            "type": "object",
            "description": "Optional settings for the app assignment",
            "properties": {
              "assignment_mode": {
                "type": "string",
                "description": "App setting: 'internal' - App does not show in the app market but still available to use in all relevant integration points; 'pre_installed' - Define the app as pre-installed for all new accounts, app shows in app market as installed on first appearance. The user will be able to uninstall it later if they wish to. This is relevant only to account with platform app market",
                "enum": [
                  "internal",
                  "pre_installed"
                ]
              }
            },
            "required": [
              "assignment_mode"
            ]
          }
        },
        "required": [
          "assignee_type",
          "assignee_uid",
          "app_code_name",
          "settings"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication"
      }
    }
  },
  "tags": []
}
