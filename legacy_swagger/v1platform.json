{
  "basePath": "/platform/v1",
  "host": "api.vcita.biz",
  "info": {
    "title": "Platform API",
    "version": "v2.0"
  },
  "paths": {
    "/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "list apps",
            "examples": {
              "application/json": {
                "apps": [
                  {
                    "api_uri": "https://dummy-path.com",
                    "app_code_name": "dummyapp_62",
                    "app_features": [],
                    "app_host": "https://dummy-path.com",
                    "app_id": "some_id",
                    "app_mobile_screenshot_uris": [],
                    "app_screenshot_uris": [],
                    "built_in": false,
                    "contact_support_link": "https://dummy-path.com",
                    "deep_link": "https://dummy-path.com",
                    "description": {},
                    "is_internal": false,
                    "locales": [],
                    "menu_items": {
                      "subitems": [
                        {
                          "category": "clients",
                          "item_name": {
                            "en": "RDBMS Page"
                          },
                          "route": "rdbms"
                        }
                      ]
                    },
                    "name": "Some App",
                    "open_in_new_tab": false,
                    "permissions": [
                      "can_view_payments"
                    ],
                    "personal_connection": false,
                    "pre_installed": false,
                    "privacy_policy_link": "https://dummy-path.com",
                    "requires_upgrade": false,
                    "status": "not_installed",
                    "supported_countries": [
                      "United States"
                    ],
                    "supported_in_mobile": true,
                    "url_params": []
                  }
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "List of apps",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "api_uri": {
                  "description": "Link to the application API",
                  "type": "string"
                },
                "app_code_name": {
                  "description": "The app's code name. This will be used as the app's id for APIS",
                  "type": "string"
                },
                "app_features": {
                  "description": "A list of the app's features. Will be displayed to the user in the app info page. Max 10 features. Max feature length is 500 chars.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "app_layer": {
                  "description": "Layer of application.",
                  "type": "string"
                },
                "app_mobile_screenshot_uris": {
                  "description": "Links to app screenshots or demo videos. Displayed on the mobile App info page. Each asset must be 608 \u00d7 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                  "type": "string"
                },
                "app_screenshot_uris": {
                  "description": "Links to app screenshots or demo videos. Displayed on the desktop App info page. Each asset must be 608 \u00d7 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                  "type": "string"
                },
                "app_type": {
                  "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows, signatures, onboarding_wizard, notifications",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_support_link": {
                  "description": "Link to the app's contact support page",
                  "type": "string"
                },
                "deep_link": {
                  "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                  "properties": {
                    "path": {
                      "description": "The relative path to the page.",
                      "type": "string"
                    },
                    "path_params": {
                      "description": "The params that will be added to the path URL (optional)",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "demand_scopes": {
                  "description": "Scopes the application must have in order to serve requests.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "description": {
                  "properties": {
                    "logo": {
                      "description": "Link to the app's logo",
                      "type": "string"
                    },
                    "short_description": {
                      "description": "The app's short description. Should contain a summarize review of the app's purpose and functions. Max length is 260 chars.",
                      "type": "string"
                    },
                    "text": {
                      "description": "The app's long description. Should describe the app's functions in detail. Max length is 380 chars.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "locales": {
                  "description": "Locales supported by the app",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "menu_items": {
                  "description": "Configuration for the left sidebar menu",
                  "properties": {
                    "subitems": {
                      "description": "Items array",
                      "items": {
                        "properties": {
                          "category": {
                            "description": "Section of the left menu in which the item will appear. Valid values are: [\"calendar\", \"clients\", \"payments\", \"inbox\", \"documents\", \"campaigns\", \"reputation\", \"my-livesite\", \"social\", \"social_info\", \"app_market\", \"reports\", \"team-chat\", \"advertising\", \"subscriptions\", \"my_account\", \"cashflow\", \"workforce\", \"setupguide\", \"reviews\", \"social_media\", \"online_listing\"]",
                            "type": "string"
                          },
                          "item_name": {
                            "description": "Item names in different languages",
                            "properties": {
                              "de": {
                                "type": "string"
                              },
                              "en": {
                                "description": "Item name in english",
                                "type": "string"
                              },
                              "es": {
                                "type": "string"
                              },
                              "fr": {
                                "type": "string"
                              },
                              "he": {
                                "type": "string"
                              },
                              "it": {
                                "type": "string"
                              },
                              "pl": {
                                "type": "string"
                              },
                              "pt": {
                                "type": "string"
                              },
                              "ru": {
                                "type": "string"
                              },
                              "sl": {
                                "type": "string"
                              },
                              "tr": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "permissions": {
                            "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\", \"has_marketing_permissions\", \"can_access_admin_account\", \"can_access_settings\", \"can_export_payments\"]",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "route": {
                            "description": "Suffix route relative to the app domain.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "description": "The app's name. Must be 3 to 25 chars long.",
                  "type": "string"
                },
                "open_in_new_tab": {
                  "description": "Whether the app will be opened in a new tab or as an iframe",
                  "type": "boolean"
                },
                "payment_data": {
                  "description": "Payment data for the app. Will be displayed in the app info page",
                  "properties": {
                    "pay_per_unit": {
                      "description": "The units available in this purchasable for extra payment",
                      "type": "array"
                    },
                    "prices": {
                      "description": "Price list",
                      "properties": {
                        "currency": {
                          "description": "Currency, allowed only: USD, GBP or EUR",
                          "type": "string"
                        },
                        "pay_per_unit": {
                          "description": "Unit prices",
                          "properties": {
                            "staff": {
                              "description": "Price per staff",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "payment_type": {
                          "description": "Payment type, allowed: monthly, free}",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price to pay",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "personal_connection": {
                  "description": "Whether the app requires each user to connect separately",
                  "type": "boolean"
                },
                "privacy_policy_link": {
                  "description": "A link to the apps privacy policy",
                  "type": "string"
                },
                "redirect_uri": {
                  "description": "The link that the user will be redirected to when opening the app",
                  "type": "string"
                },
                "scopes": {
                  "description": "Scopes the application needs access to.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "supported_countries": {
                  "description": "Countries in which the app will be available. Empty array for all countries.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "trusted": {
                  "description": "Whether application can skip the authorization screen (true/false)",
                  "type": "string"
                },
                "url_params": {
                  "description": "Parameters that will be passed to the app. Valid values are: impersonate, business_uid, staff_role, staff_uid, payment_permissions, language, package, brand_host",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "app created",
            "examples": {
              "application/json": {
                "data": {
                  "app_code_name": "some_code_name",
                  "app_id": "some_id",
                  "client_id": "OAuth Client ID",
                  "client_secret": "OAuth Client Secret",
                  "name": "Some App"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns an app its by code name, if it is associated with the token's directory",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "application": {
                    "api_uri": "https://oururi.com",
                    "app_code_name": "IncredibleCodeName",
                    "app_features": [
                      "Lorem ipsum dolor",
                      "consectetur adipiscing"
                    ],
                    "app_screenshot_uris": [
                      "https://www.techadvisor.com/cmsdata/features/3685380/rick_and_morty_season_4_thumb800.jpg"
                    ],
                    "app_type": [
                      "communication"
                    ],
                    "contact_support_link": "https://www.ynet.co.il/home/0,7340,L-8,00.html",
                    "description": {
                      "logo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/3835/normal_rqmnvkhvgg0g82mtzcoir0cg7vyythwg.png",
                      "short_description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit ut aliquam, purus sit amet luctus venenatis, lectus magna fringilla urna, porttitor rhoncus dolor purus non enim praesent elementum facilisis leo, vel fringilla est ullamcorper eget."
                    },
                    "locales": [
                      "en",
                      "es",
                      "fr"
                    ],
                    "menu_items": null,
                    "name": "New Testing App 2",
                    "oauth_redirect_uris": [
                      "https://redirect.com",
                      "https://stuff.com",
                      "https://hello.com"
                    ],
                    "open_in_new_tab": true,
                    "openid": true,
                    "privacy_policy_link": "https://www.sport5.co.il/",
                    "redirect_uri": "https://en.wikipedia.org/wiki",
                    "supported_countries": [
                      "United States",
                      "United Kingdom",
                      "Israel"
                    ],
                    "trusted": true,
                    "url_params": []
                  },
                  "success": true
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Read an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates an app by the code name specified in the path",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "api_uri": {
                  "description": "Link to the application API",
                  "type": "string"
                },
                "app_features": {
                  "description": "A list of the app's features. Will be displayed to the user in the app info page. Max 10 features. Max feature length is 500 chars.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "app_layer": {
                  "description": "Layer of application.",
                  "type": "string"
                },
                "app_mobile_screenshot_uris": {
                  "description": "Links to app screenshots or demo videos. Displayed on the mobile App info page. Each asset must be 608 \u00d7 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                  "type": "string"
                },
                "app_screenshot_uris": {
                  "description": "Links to app screenshots or demo videos. Displayed on the desktop App info page. Each asset must be 608 \u00d7 272 px. Supported formats: GIF, PNG, JPEG, MJPEG, SVG, MP4, WebM, OVG.",
                  "type": "string"
                },
                "app_type": {
                  "description": "The app's type. Valid values are: payments, wallets, communication, menu_items, docuforms, import_clients, automated_flows, signatures, onboarding_wizard, notifications, calendar_sync",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "contact_support_link": {
                  "description": "Link to the app's contact support page",
                  "type": "string"
                },
                "deep_link": {
                  "description": "The deep link to an inner product page. This is not made for third-party apps, but for apps that open as part of the product. Made for internal developer use only.",
                  "properties": {
                    "path": {
                      "description": "The relative path to the page.",
                      "type": "string"
                    },
                    "path_params": {
                      "description": "The params that will be added to the path URL (optional)",
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "demand_scopes": {
                  "description": "Scopes the application must have in order to serve requests.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "description": {
                  "properties": {
                    "logo": {
                      "description": "Link to the app's logo",
                      "type": "string"
                    },
                    "short_description": {
                      "description": "The app's short description. Should contain a summarize review of the app's purpose and functions. Max length is 260 chars.",
                      "type": "string"
                    },
                    "text": {
                      "description": "The app's long description. Should describe the app's functions in detail. Max length is 380 chars.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "locales": {
                  "description": "Locales supported by the app",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "menu_items": {
                  "description": "Configuration for the left sidebar menu",
                  "properties": {
                    "subitems": {
                      "description": "Items array",
                      "items": {
                        "properties": {
                          "category": {
                            "description": "Section of the left menu in which the item will appear. Valid values are: [\"calendar\", \"clients\", \"payments\", \"inbox\", \"documents\", \"campaigns\", \"reputation\", \"my-livesite\", \"social\", \"social_info\", \"app_market\", \"reports\", \"team-chat\", \"advertising\", \"subscriptions\", \"my_account\", \"cashflow\", \"workforce\", \"setupguide\", \"reviews\", \"social_media\", \"online_listing\"]",
                            "type": "string"
                          },
                          "item_name": {
                            "description": "Item names in different languages",
                            "properties": {
                              "de": {
                                "type": "string"
                              },
                              "en": {
                                "description": "Item name in english",
                                "type": "string"
                              },
                              "es": {
                                "type": "string"
                              },
                              "fr": {
                                "type": "string"
                              },
                              "he": {
                                "type": "string"
                              },
                              "it": {
                                "type": "string"
                              },
                              "pl": {
                                "type": "string"
                              },
                              "pt": {
                                "type": "string"
                              },
                              "ru": {
                                "type": "string"
                              },
                              "sl": {
                                "type": "string"
                              },
                              "tr": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "permissions": {
                            "description": "Permissions to control who can view this menu item. Available permissions: [\"can_access_listings_management\", \"can_access_soci\", \"can_access_online_presence\", \"can_access_clients\", \"can_use_reports\", \"can_view_payments\", \"can_view_documents\", \"has_marketing_permissions\", \"can_access_admin_account\", \"can_access_settings\", \"can_export_payments\"]",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "route": {
                            "description": "Suffix route relative to the app domain.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "name": {
                  "description": "The app's name. Must be 3 to 25 chars long.",
                  "type": "string"
                },
                "oauth_redirect_uris": {
                  "description": "An array of URLs to redirect the user to after a successful login.",
                  "type": "array"
                },
                "open_in_new_tab": {
                  "description": "Whether the app will be opened in a new tab or as an iframe",
                  "type": "boolean"
                },
                "personal_connection": {
                  "description": "Whether the app requires each user to connect separately",
                  "type": "boolean"
                },
                "privacy_policy_link": {
                  "description": "A link to the apps privacy policy",
                  "type": "string"
                },
                "redirect_uri": {
                  "description": "The link that the user will be redirected to when opening the app",
                  "type": "string"
                },
                "scopes": {
                  "description": "Scopes the application needs access to.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "supported_countries": {
                  "description": "Countries in which the app will be available. Empty array for all countries.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "trusted": {
                  "description": "Whether application can skip the authorization screen (true/false)",
                  "type": "string"
                },
                "url_params": {
                  "description": "Parameters that will be passed to the app.  Valid values are: impersonate, business_uid, staff_role, staff_uid, payment_permissions, language, package, brand_host",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "application": {
                  "api_uri": "https://OurApi.com",
                  "app_features": [
                    "Talk to all your friends!",
                    "Purchase stuff online!"
                  ],
                  "app_layer": "cores",
                  "app_screenshot_uris": [
                    "http://OurBestScreenshot.png"
                  ],
                  "app_type": [
                    "communication"
                  ],
                  "contact_support_link": "https://contactsupport.com",
                  "deep_link": {
                    "path": "/app/somepath",
                    "path_params": {
                      "this_is_a_parameter": 12
                    }
                  },
                  "demand_scopes": [
                    "payments",
                    "clients"
                  ],
                  "description": {
                    "logo": "https://BeautifulLogo.png",
                    "short_description": "This is the app's short description. A quick summary of the app's uses.",
                    "text": "This is the app's long description. It should describe the app's uses and benefits in detail."
                  },
                  "locales": [
                    "en"
                  ],
                  "menu_items": {
                    "subitems": [
                      {
                        "category": "clients",
                        "item_name": {
                          "en": "My RDBMS"
                        },
                        "route": "route"
                      }
                    ]
                  },
                  "name": "Our app",
                  "oauth_redirect_uris": [
                    "https://redirect.com",
                    "https://stuff.com",
                    "https://hello.com"
                  ],
                  "open_in_new_tab": true,
                  "privacy_policy_link": "https://ourprivacy.com",
                  "redirect_uri": "https://redirect.com",
                  "scopes": [
                    "clients"
                  ],
                  "supported_countries": [
                    "US"
                  ],
                  "trusted": "false",
                  "url_params": [
                    "business_uid"
                  ]
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates an app",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/assign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Assign an application to business or directory so that it can be viewed in the App Market",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "built_in": {
                  "description": "Define the app as built_in for this directory, meaning it is installed for all its users and cannot be uninstalled by them. Used with directory_uid only.",
                  "type": "string"
                },
                "business_uid": {
                  "description": "The business uid to associate the app to.",
                  "type": "string"
                },
                "directory_uid": {
                  "description": "The directory uid to associate the app to.",
                  "type": "string"
                },
                "is_internal": {
                  "description": "Specify that the app is an internal - used with directory_uid only.",
                  "type": "string"
                },
                "pre_installed": {
                  "description": "Define the app as pre-installed for all new accounts of this directory - used with directory_uid only.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "app_data": {
                    "assignment": {
                      "app_id": 2,
                      "built_in": false,
                      "business_id": 1222,
                      "created_at": "2021-11-16T13:29:47.000Z",
                      "directory_id": 12,
                      "id": 1,
                      "is_internal": false,
                      "pre_installed": false,
                      "updated_at": "2021-11-16T13:29:47.000Z"
                    }
                  }
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Assign an app on directory or a business [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/assign"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/install_app": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Installs an app for the business whose token was used for authorization",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {}
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "app_data": {
                  "app_code_name": "IncredibleCodeName",
                  "app_id": 72,
                  "app_name": "My Wiki Pages"
                },
                "data": {
                  "app_data": {
                    "app_code_name": "mywikipages_72",
                    "app_features": [],
                    "app_host": "https://en.wikipedia.org/wiki",
                    "app_id": 72,
                    "app_name": "My Wiki Pages",
                    "app_screenshot_uris": [],
                    "contact_support_link": null,
                    "description": {},
                    "is_internal": false,
                    "locales": [],
                    "permissions": null,
                    "privacy_policy_link": null,
                    "requires_upgrade": false,
                    "status": "installed",
                    "supported_countries": [],
                    "url_params": [
                      "language",
                      "staff_role"
                    ]
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "app_data": {
                  "app_code_name": "IncredibleCodeName"
                },
                "errors": [
                  {
                    "code": "already_exists",
                    "message": "Already installed"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Install an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/install_app"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/unassign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Unassign an application from business or directory",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business_uid": {
                  "description": "The business uid to associate the app to.",
                  "type": "string"
                },
                "directory_uid": {
                  "description": "The directory uid to associate the app to.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "app_data": {
                    "assignment": {
                      "app_id": 2,
                      "business_id": 1222,
                      "created_at": "2021-11-16T13:29:47.000Z",
                      "directory_id": 12,
                      "id": 1,
                      "is_internal": false,
                      "updated_at": "2021-11-16T13:29:47.000Z"
                    }
                  }
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Unassign an app on directory or a business [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/unassign"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/apps/{id}/uninstall_app": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Uninstalls an app for the business whose token was used for authorization",
        "parameters": [
          {
            "description": "App code name",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {}
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "app_data": {
                  "app_code_name": "IncredibleCodeName",
                  "app_id": 72,
                  "app_name": "My Wiki Pages"
                },
                "data": {
                  "app_data": {
                    "app_code_name": "mywikipages_72",
                    "app_features": [],
                    "app_host": "https://en.wikipedia.org/wiki",
                    "app_id": 72,
                    "app_name": "My Wiki Pages",
                    "app_screenshot_uris": [],
                    "contact_support_link": null,
                    "description": {},
                    "is_internal": false,
                    "locales": [],
                    "permissions": null,
                    "privacy_policy_link": null,
                    "requires_upgrade": false,
                    "status": "uninstalled",
                    "supported_countries": [],
                    "url_params": [
                      "language",
                      "staff_role"
                    ]
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "app_data": {
                  "app_code_name": "IncredibleCodeName"
                },
                "errors": [
                  {
                    "code": "missing",
                    "message": "App not installed"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Uninstall an app [Internal]",
        "tags": [
          "Applications"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/apps/{id}/uninstall_app"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Search for a business by external_reference_id or email. A filter is required for the API to return a result.",
        "parameters": [

          {
            "description": "Filter by email specified",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter by \"external_id\" specified. **Deprecate**. This will still work, but for new implementation please use external_reference_id.",
            "in": "query",
            "name": "external_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter by \"external_reference_id\" specified",
            "in": "query",
            "name": "external_reference_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business ID Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "businesses": [
                    "a123b456c789"
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Search Businesses",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses?email={email}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Business.",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "admin_account": {
                  "properties": {
                    "country_name": {
                      "description": "Business\u2019s Country. Must be a valid country name",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Owner\u2019s display name. Up to 255 characters, no HTML tags, no new lines (if not provided, FIRST NAME + LAST NAME will be used)",
                      "type": "string"
                    },
                    "email": {
                      "description": "Owner\u2019s email, also used as the business\u2019s main email",
                      "type": "string"
                    },
                    "first_name": {
                      "description": "Owner\u2019s first name. Up to 255 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "language": {
                      "default": "en",
                      "description": "One of en,es,fr,it,pt,de,pl,nl,en-GB. Default determined by Directory",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "Owner\u2019s last name. Up to 255 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "password": {
                      "description": "Owner\u2019s password. 6-20 characters",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Business phone number. Up to 20 characters",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "business": {
                  "properties": {
                    "address": {
                      "description": "Business address. Up to 255 characters, no HTML tags",
                      "type": "string"
                    },
                    "business_category": {
                      "description": "The business main occupation. Must be a valid business category",
                      "type": "string"
                    },
                    "business_maturity_in_years": {
                      "description": "Business maturity in years. Valid value is one of [null, 0, 0.5, 0.5-2, 2+]",
                      "type": "string"
                    },
                    "country_name": {
                      "description": "The business registered country",
                      "type": "string"
                    },
                    "hide_address": {
                      "default": true,
                      "description": "Whether to show the business address to clients",
                      "type": "boolean"
                    },
                    "landing_page": {
                      "description": "Deprecated - Previously used for marketing purposes, up to 255 characters",
                      "type": "string"
                    },
                    "logo_url": {
                      "description": "Business logo URL - A valid image URL. Supporting formats: jpg, jpeg, gif, png, SVG. Make sure the URL includes one of these extensions",
                      "type": "string"
                    },
                    "name": {
                      "description": "Business name. Up to 100 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Phone number. Up to 20 characters",
                      "type": "string"
                    },
                    "short_description": {
                      "description": "Short description of the business. Up to 255 characters, no HTML tags",
                      "type": "string"
                    },
                    "time_zone": {
                      "default": "Mountain Time (US & Canada)",
                      "description": "Time zone name from MAPPING object found in: https://api.rubyonrails.org/v4.2.3/classes/ActiveSupport/TimeZone.html, Default value is determined by the Directory",
                      "type": "string"
                    },
                    "website_url": {
                      "description": "Business\u2019s website URL. Must be a valid URL address including http/https.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "analytics": {
                      "properties": {
                        "google_client_id": {
                          "description": "Google Analytics ID to be embedded in the client portal, helping businesses to track their clients using Google Analytics. Must be a valid ID from Google",
                          "type": "string"
                        },
                        "mixpanel_id": {
                          "description": "Mixpanel ID for mixpanel integration (up to 80 characters). Matching pattern tracking of business actions",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "audit": {
                      "description": "For internal tracking of business actions. Format: [{'action' => 'action_name','context' => {'key' => 'value'}}]",
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "external_id": {
                      "description": "Legacy, replaced by external_reference_id. It may also be referred to as a 'nickname'. Must contain at least one lowercase letter, can include numbers, and dots, at least 5 characters long, platform unique",
                      "type": "string"
                    },
                    "external_reference_id": {
                      "description": "Unique id that represents the business in the partner\u2019s systems",
                      "type": "string"
                    },
                    "identities": {
                      "description": "Array of valid identity uids. Identities represent different occupational verticals. To obtain a full list of identities, please contact support",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "in_setup": {
                      "default": false,
                      "description": "Whether the business is in setup mode",
                      "type": "boolean"
                    },
                    "intents": {
                      "description": "List of modules the business wishes to use in the product from this list: [\"accept_payments_tile\", \"documents_and_forms\", \"add_online_scheduling\", \"secure_portal_for_clients\", \"promotions\", \"manage_client_records\"]",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "invite": {
                      "description": "Reference id to the marketing channel",
                      "type": "string"
                    },
                    "is_template": {
                      "default": false,
                      "description": "Whether this account can be used as a template for creating more businesses",
                      "type": "boolean"
                    },
                    "note": {
                      "description": "An administrative note about the business. Up to 255 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "suggested_identities": {
                      "description": "List of suggested identities to tailor the business experience",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "description": "A list of comma-separated tags. Up to 255 characters, no HTML tags, no new lines",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "template_business_id": {
                      "description": "Configure the newly created business similar to the provided business id",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business Created",
            "examples": {
              "application/json": {
                "data": {
                  "admin_account": {
                    "country_name": "United States",
                    "display_name": "DName",
                    "email": "adminemail@email.com",
                    "first_name": "FName",
                    "language": "en",
                    "last_name": "LName",
                    "phone": "+154863488",
                    "staff_uid": "aaa1234567890abcdef",
                    "user_id": "11111"
                  },
                  "business": {
                    "business_category": "aeroclub",
                    "business_maturity_in_years": "0.5",
                    "country_name": "United States",
                    "id": "1a123b456c789",
                    "landing_page": "Homepage",
                    "name": "Business name",
                    "short_description": "My business description"
                  },
                  "integrations": {},
                  "meta": {
                    "auth_token": "a1a1a1a1a1",
                    "external_id": "1213444",
                    "external_reference_id": "id123",
                    "identities": [
                      "aaa123",
                      "bbb345",
                      "1a3c4f4h"
                    ],
                    "in_setup": "false",
                    "intents": [
                      "accept_payments_tile",
                      "documents_and_forms"
                    ],
                    "is_template": "true",
                    "marketing_channel": "Client Channel",
                    "note": "Client Note",
                    "plan": {
                      "expires_on": "2022-06-14T09:31:21.000Z",
                      "external_subscription_params": "***",
                      "plan_name": "Essential"
                    },
                    "tags": "Client tag1, Client tag2"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/validate_login": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Validates username/password credentials for login. The API will be blocked for the username after 5 failed attempts.",
        "parameters": [

          {
            "description": "Email",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login Validated",
            "examples": {
              "application/json": {
                "data": {
                  "authenticated": true
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Login",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/verify_audience_claim": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This API performs entitlement verification for businesses seeking to register with a specific partner. It checks if a business meets the necessary criteria to qualify for partnership enrollment.\n",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "unique_validation_identifier": {
                  "description": "The future business' unique validation identifier",
                  "type": "object"
                }
              },
              "required": [
                "unique_validation_identifier"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Claim validated",
            "examples": {
              "application/json": {
                "data": true,
                "success": true
              }
            }
          }
        },
        "summary": "Verify Audience Claim",
        "tags": [
          "Business"
        ]
      }
    },
    "/businesses/{business_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "business": {
                    "admin_account": {
                      "country_name": "United States",
                      "display_name": "DName",
                      "email": "adminemail@email.com",
                      "first_name": "FName",
                      "language": "en",
                      "last_name": "LName",
                      "phone": "+154863488",
                      "staff_uid": "aaa1234567890abcdef",
                      "user_id": "11111"
                    },
                    "business": {
                      "account_blocked_at": "2023-04-15T09:10:11.000Z",
                      "address": "1st 2nd St., NYC, NY",
                      "business_category": "aeroclub",
                      "business_maturity_in_years": "0.5",
                      "country_name": "United States",
                      "dedicated_number": "18772186543",
                      "hide_address": "true",
                      "id": "1a123b456c789",
                      "landing_page": "Homepage",
                      "name": "Business name",
                      "phone": "123456789",
                      "promotional": {
                        "block_count": "5",
                        "blocked_at": "2023-04-15T09:10:11.000Z"
                      },
                      "scheduling_disabled": true,
                      "short_description": "My business description",
                      "time_zone": "Mountain Time (US & Canada)",
                      "website_url": "www.mysite.com"
                    },
                    "integrations": {
                      "plugins": [
                        {
                          "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                          "plan_name": "trial",
                          "plan_started_at": "2022-06-14T09:31:21.000Z",
                          "plan_terminated_at": "2022-06-14T09:31:21.000Z",
                          "site_url": "www.siteaddress.com",
                          "type": "Plugin type"
                        }
                      ]
                    },
                    "meta": {
                      "auth_token": "a1a1a1a1a1",
                      "booking_settings": {
                        "future_bookings_limit": 3,
                        "min_hours_before_meeting": 5
                      },
                      "branding": {
                        "background_color": "#4675d9",
                        "color": "#4DA51E",
                        "profile_picture_url": "https://domainexmaple.com/tomylogourl.jpg",
                        "url_logo": "https://domainexmaple.com/tomylogourl.jpg"
                      },
                      "external_id": "1213444",
                      "external_reference_id": "id123",
                      "identities": [
                        "aaa123",
                        "bbb345",
                        "1a3c4f4h"
                      ],
                      "in_setup": "false",
                      "intents": [
                        "accept_payments_tile",
                        "documents_and_forms"
                      ],
                      "is_template": "true",
                      "marketing_channel": "Client Channel",
                      "note": "Client Note",
                      "plan": {
                        "expires_on": "2022-06-14T09:31:21.000Z",
                        "external_subscription_params": "***",
                        "plan_name": "Essential"
                      },
                      "suggested_identities": [
                        "ccc333",
                        "ddd444"
                      ],
                      "tags": "Client tag1, Client tag2"
                    }
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business": {
                  "properties": {
                    "admin_account": {
                      "properties": {
                        "country_name": {
                          "description": "Business\u2019s Country. Must be a valid country name",
                          "type": "string"
                        },
                        "display_name": {
                          "description": "Owner\u2019s display name. Up to 255 characters, no HTML tags, no new lines (if not provided, FIRST NAME + LAST NAME will be used)",
                          "type": "string"
                        },
                        "email": {
                          "description": "Owner\u2019s email, also used as the business\u2019s main email",
                          "type": "string"
                        },
                        "first_name": {
                          "description": "Owner\u2019s first name. Up to 255 characters, no HTML tags, no new lines",
                          "type": "string"
                        },
                        "language": {
                          "default": "en",
                          "description": "One of en,es,fr,it,pt,de,pl,nl,en-GB,he,keys,pseudo - Default value is determined by the Directory",
                          "type": "string"
                        },
                        "last_name": {
                          "description": "Owner\u2019s last name. Up to 255 characters, no HTML tags, no new lines",
                          "type": "string"
                        },
                        "phone": {
                          "description": "Business phone number. Up to 20 characters",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "business": {
                      "properties": {
                        "address": {
                          "description": "Business address. Up to 255 characters, no HTML tags",
                          "type": "string"
                        },
                        "business_category": {
                          "description": "The business main occupation. Must be a valid business category",
                          "type": "string"
                        },
                        "business_maturity_in_years": {
                          "description": "Business maturity in years. Valid value is one of [null, 0, 0.5, 0.5-2, 2+]",
                          "type": "string"
                        },
                        "country_name": {
                          "description": "The business registered country",
                          "type": "string"
                        },
                        "hide_address": {
                          "default": true,
                          "description": "true",
                          "type": "boolean"
                        },
                        "landing_page": {
                          "description": "Deprecated - Previously used for marketing purposes, up to 255 characters",
                          "type": "string"
                        },
                        "logo_url": {
                          "description": "Business logo URL - A valid image URL. Supporting formats: jpg, jpeg, gif, png, SVG. Make sure the URL includes one of these extensions",
                          "type": "string"
                        },
                        "name": {
                          "description": "Business name. Up to 100 characters, no HTML tags, no new lines",
                          "type": "string"
                        },
                        "phone": {
                          "description": "Business phone number. Up to 20 characters",
                          "type": "string"
                        },
                        "scheduling_disabled": {
                          "description": "Business is not offering online scheduling through client portal",
                          "type": "boolean"
                        },
                        "short_description": {
                          "description": "Short description of the business. Up to 255 characters, no HTML tags",
                          "type": "string"
                        },
                        "time_zone": {
                          "default": "Mountain Time (US & Canada)",
                          "description": "Time zone name from MAPPING object found in: https://api.rubyonrails.org/v4.2.3/classes/ActiveSupport/TimeZone.html . Default value is determined by the Directory",
                          "type": "string"
                        },
                        "website_url": {
                          "description": "Business\u2019s website URL. Must be a valid URL address including http/https.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "integrations": {
                      "properties": {
                        "plugins": {
                          "properties": {
                            "external_id": {
                              "description": "Legacy, replaced by external_reference_id. It may also be referred to as a 'nickname'. Must contain at least one lowercase letter, can include numbers, and dots, at least 5 characters long, platform unique",
                              "type": "string"
                            },
                            "plan_name": {
                              "description": "Package name to subscribe the external party instance to",
                              "type": "string"
                            },
                            "site_url": {
                              "description": "Site url of the external party instance",
                              "type": "string"
                            },
                            "type": {
                              "description": "Plugin type",
                              "type": "string"
                            }
                          },
                          "required": [
                            "external_id",
                            "type",
                            "plan_name"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "meta": {
                      "properties": {
                        "branding": {
                          "properties": {
                            "background_color": {
                              "description": "Background color",
                              "type": "string"
                            },
                            "color": {
                              "description": "Brand color",
                              "type": "string"
                            },
                            "cover_picture": {
                              "description": "Cover picture url",
                              "type": "string"
                            },
                            "profile_picture": {
                              "description": "Profile picture url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "plan": {
                          "properties": {
                            "external_subscription_params": {
                              "description": "External Subscription Parameters (should not be used with recurly type)",
                              "type": "string"
                            },
                            "plan_name": {
                              "description": "Package name to subscribe (for manual type) / recurly plan code (for recurly type)",
                              "type": "string"
                            },
                            "staff_slots": {
                              "description": "Staff sub accounts limit (should not be used with recurly type)",
                              "type": "string"
                            },
                            "type": {
                              "description": "recurly/manual",
                              "type": "string"
                            }
                          },
                          "required": [
                            "plan_name"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "plan"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "business"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business Updated",
            "examples": {
              "application/json": {
                "data": {
                  "business": {
                    "admin_account": {
                      "country_name": "United States",
                      "display_name": "DName",
                      "email": "adminemail@email.com",
                      "first_name": "FName",
                      "language": "en",
                      "last_name": "LName",
                      "phone": "+154863488",
                      "staff_uid": "aaa1234567890abcdef",
                      "user_id": "11111"
                    },
                    "business": {
                      "business_category": "aeroclub",
                      "business_maturity_in_years": "0.5",
                      "country_name": "United States",
                      "id": "1a123b456c789",
                      "name": "Business name",
                      "short_description": "My business description"
                    },
                    "integrations": {
                      "plugins": [
                        {
                          "external_id": "aaaa-aaaa-aaaa-aaaa-aaaaaaaaaa",
                          "plan_name": "trial",
                          "plan_started_at": "2022-06-14T09:31:21.000Z",
                          "plan_terminated_at": "2022-06-14T09:31:21.000Z",
                          "site_url": "www.siteaddress.com",
                          "type": "Plugin type"
                        }
                      ]
                    },
                    "meta": {
                      "auth_token": "a1a1a1a1a1",
                      "branding": {
                        "background_color": "#4675d9",
                        "color": "#4DA51E",
                        "profile_picture_url": "https://domainexmaple.com/tomylogourl.jpg",
                        "url_logo": "https://domainexmaple.com/tomylogourl.jpg"
                      },
                      "external_id": "1213444",
                      "external_reference_id": "id123",
                      "identities": [
                        "aaa123",
                        "bbb345",
                        "1a3c4f4h"
                      ],
                      "in_setup": "false",
                      "intents": [
                        "accept_payments_tile",
                        "documents_and_forms"
                      ],
                      "is_template": "true",
                      "marketing_channel": "Client Channel",
                      "note": "Client Note",
                      "plan": {
                        "expires_on": "2022-06-14T09:31:21.000Z",
                        "external_subscription_params": "***",
                        "plan_name": "Essential",
                        "staff_slots": "7"
                      },
                      "tags": "Client tag1, Client tag2"
                    }
                  }
                },
                "status": "OK"
              }
            }
          },
          "400": {
            "description": "Business Updated",
            "examples": {
              "application/json": {
                "message": "Incorrect parameters for update",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/update_business"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/features": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Features Retrieved",
            "examples": {
              "application/json": {
                "data": [
                  "sales_account",
                  "identity_profession_mapping",
                  "verti_override_clone",
                  "checklist_dashboard",
                  "zoom",
                  "two_months_free_benefit",
                  "dashboard_quick_actions",
                  "accept_payments_wizard",
                  "basic_business_features",
                  "scheduling_features",
                  "invoicing_features",
                  "lead_gen_features",
                  "ultimate_features"
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business Features",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/purchased_items": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates purchased items for a business",
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "data": {
                  "description": "Purchased Items data",
                  "properties": {
                    "bundled": {
                      "description": "Bundled Items",
                      "type": "string"
                    },
                    "purchased": {
                      "description": "Purchased Items",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Type of a Purchased Items",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Purchased Items updated",
            "examples": {
              "application/json": {
                "data": {
                  "bundled": 2,
                  "purchased": 1
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Purchased Items",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/recurly_data": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "recurly_account": {
                    "account_code": "123456"
                  }
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Recurly parameters",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/staffs": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Staff List and Details (ordered by position field).",
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional fetch status active/all",
            "in": "query",
            "name": "status",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "staff": [
                    {
                      "active": "true",
                      "blocked_at": "2024-12-22 11:16:18",
                      "business_role_display_name": "Admin",
                      "deleted": "false",
                      "display_name": "FName LName 1",
                      "email": "staff_1@email.com",
                      "first_name": "FName",
                      "id": "1a123b456c789d",
                      "invite_sent": "2015-10-23 13:02:09",
                      "last_name": "LName 1",
                      "mobile_number": "0500000000",
                      "photo": null,
                      "photo_path": "",
                      "professional_title": "Staff Title 1",
                      "role": "admin"
                    },
                    {
                      "active": "true",
                      "blocked_at": null,
                      "business_role_display_name": "User",
                      "deleted": "false",
                      "display_name": "FName LName 2",
                      "email": "staff_2@email.com",
                      "first_name": "FName",
                      "id": "1a123b456c789e",
                      "invite_sent": "2015-10-23 13:02:09",
                      "last_name": "LName 2",
                      "mobile_number": "0500000001",
                      "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                      "photo_path": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                      "professional_title": "Staff Title 2",
                      "role": "user"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Staff Members",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Staff.",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "meta": {
                  "properties": {
                    "invite": {
                      "description": "Send invite to staff on creation",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "staff": {
                  "properties": {
                    "display_name": {
                      "description": "Display name",
                      "type": "string"
                    },
                    "email": {
                      "description": "Email Address",
                      "type": "string"
                    },
                    "first_name": {
                      "description": "First Name",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "Last Name",
                      "type": "string"
                    },
                    "role": {
                      "description": "Please use the new Access Control API: https://developers.intandem.tech/v3.0/docs/main-concepts",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "display_name"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "staff"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "staff": [
                    {
                      "active": "true",
                      "business_role_display_name": "User",
                      "deleted": "false",
                      "display_name": "My Display Name",
                      "email": "my.email@domain.com",
                      "first_name": "First Name",
                      "id": "somerandomuniqueid",
                      "invite_sent": "2015-10-23 13:02:09",
                      "last_name": "Last Name",
                      "mobile_number": "0500000001",
                      "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                      "professional_title": "My Professional Title",
                      "role": "user"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/staffs/{staff_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete Staff Member.",
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Delete Staff Member",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Staff Details.",
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "staff": [
                    {
                      "active": "true",
                      "business_role_display_name": "User",
                      "deleted": "false",
                      "display_name": "My Display Name",
                      "email": "my.email@domain.com",
                      "first_name": "First Name",
                      "id": "somerandomuniqueid",
                      "invite_sent": "2015-10-23 13:02:09",
                      "last_name": "Last Name",
                      "mobile_number": "0500000000",
                      "photo": "https://c15101458.ssl.cf2.rackcdn.com/avatar/image/46/cay8ek2xzufnr39cbrc0nebw1tmy4v2z.png",
                      "professional_title": "My Professional Title",
                      "role": "user"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Staff Member Details",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/staffs/{staff_id}/sessions": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "End Staff Member active sessions and log out from browser.",
        "parameters": [

          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "revoked": [
                    "25a2de7472aba0f1ff84025b7b354a595a9084412e26c2c481254fcfe300209e"
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "End Staff Member active sessions",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.business_id": "method.request.path.business_id",
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/staffs/{staff_id}/sessions"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/wizards": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of available wizards",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "completed": false,
                    "flags": {},
                    "id": "6qmnzxhpz102l6y0",
                    "name": "dolorem"
                  },
                  {
                    "completed": false,
                    "flags": {},
                    "id": "hd7ipau3i5jqijpi",
                    "name": "fuga"
                  }
                ],
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a list of wizards",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/{business_id}/wizards/{wizard_name}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a wizard by given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "completed": false,
                  "flags": {},
                  "id": "6qmnzxhpz102l6y0",
                  "name": "dolorem"
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets a wizard by name",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a wizard with given name",
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Wizard's name (e.g. register_wizard)",
            "in": "path",
            "name": "wizard_name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "completed": {
                  "description": "Completed true/false",
                  "type": "boolean"
                },
                "flags": {
                  "description": "Wizard's flags",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "completed": false,
                  "flags": {},
                  "id": "6qmnzxhpz102l6y0",
                  "name": "dolorem"
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update a wizard",
        "tags": [
          "Wizard"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}/wizards/{wizard_name}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "show only categories with valid services",
            "in": "query",
            "name": "only_visible_services",
            "required": false,
            "type": "string"
          },
          {
            "description": "return only categories that have events with future instances or valid services",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "type": "string"
          },
          {
            "description": "Categories ids array",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "categories_array",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Categories Returned",
            "examples": {
              "application/json": {
                "data": {
                  "categories": [
                    {
                      "id": "fjx4rv01kbg5x0kx",
                      "name": "My Services",
                      "num_of_services": 2,
                      "position": 1
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Categories [Alpha]",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories/{category_id}/services": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Services List by category [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "category_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff uids array",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "staff_array",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return only services that have events with future instances",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Adding the following fields to response: min_hours_before_meeting , future_bookings_limit, remind_before_in_hours_1, remind_before_in_hours_2, meeting_reminder_sms_1, sms_booking_confirmation, meeting_reminder_sms_2, auto_follow_up_hours, default_staff, order, rwg_eligible, padding, interval",
            "in": "query",
            "name": "extra_decorator_fields",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Return only services containing the provided search_string in their name. Usage: name[contains]=search_string",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return only services with the provided charge_type. Usage: charge_type[in]=free,no_price",
            "in": "query",
            "name": "charge_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Order services by name. Usage: order_by=name",
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "next_page": 1,
                  "services": [
                    {
                      "booking_restriction": {
                        "is_client_restricted": true,
                        "restricted_client_statuses": [
                          "lead"
                        ],
                        "restriction_rule_text": "Existing clients only",
                        "uid": "some uid"
                      },
                      "charge_type": "no_price",
                      "currency": "ILS",
                      "description": "desc",
                      "duration": 60,
                      "id": "qp2ggfq6x4sd8evq",
                      "image_path": "",
                      "interaction_type": "business_location",
                      "name": "In-office appointment",
                      "price": 120.0,
                      "type": "AppointmentService"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List by category [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories/{category_id}/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of clients or search by client attributes.",
        "parameters": [
          {
            "description": "Search Term",
            "in": "query",
            "name": "search_term",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search By - email/uid/phone/updated_at",
            "in": "query",
            "name": "search_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify the updated_at filter range, available operators for updated_at: gte, lte. example: updated_at[gte]=2019-01-01",
            "in": "query",
            "name": "updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "clients": [
                    {
                      "address": "My Hourse, bellvue, seattle, wasinton",
                      "business_uid": "b1ed52cb3c5a6f87",
                      "campaign": "Source Campaign",
                      "channel": "Source Channel",
                      "created_at": "2025-08-05T06:56:27Z",
                      "custom_field1": "value1",
                      "custom_field2": "value2",
                      "custom_field3": "value3",
                      "customer_status": "lead",
                      "email": "clientemail@mail.com",
                      "first_name": "First Name",
                      "id": "czpvt3f246p4cw9i",
                      "last_name": "Last Name",
                      "mobile_phone": "+16378383489",
                      "normalized_phone": null,
                      "opt_in": "1",
                      "source": "Client Portal",
                      "source_url": "Source URL",
                      "tags": [],
                      "updated_at": "2025-08-05T06:56:27Z"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Clients",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Client and returns the new client's data and the client's JWT token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Address",
                  "type": "string"
                },
                "custom_field1": {
                  "description": "Custom Field 1",
                  "type": "string"
                },
                "custom_field2": {
                  "description": "Custom Field 2",
                  "type": "string"
                },
                "custom_field3": {
                  "description": "Custom Field 3",
                  "type": "string"
                },
                "email": {
                  "description": "Email Address",
                  "type": "string"
                },
                "first_name": {
                  "description": "First Name",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last Name",
                  "type": "string"
                },
                "opt_in_transactional_sms": {
                  "description": "Whether the client opts in to receive transactional SMS messages.",
                  "type": "boolean"
                },
                "phone": {
                  "description": "Phone Number",
                  "type": "string"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "staff_id": {
                  "description": "Staff ID",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business",
                  "type": "string"
                },
                "tags": {
                  "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "Some big house in Hollywood 9",
                    "created_at": "2025-08-05T06:56:28Z",
                    "customer_status": "customer",
                    "email": "michael.douglass@spartacus.info.fake",
                    "first_name": "Michael",
                    "id": "fgrayekkrmqfzt7d",
                    "last_name": "Douglas",
                    "mobile_phone": "+19083073848",
                    "opt_in": null,
                    "source_data": {
                      "campaign": "campaign",
                      "channel": "channel",
                      "name": "website",
                      "website_url": "www.somesite.com"
                    },
                    "spam": false,
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "updated_at": "2025-08-05T06:56:28Z"
                  },
                  "token": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdHlfdWlkIjoiZmdyYXlla2tybXFmenQ3ZCIsImV4dHJhIjp7ImJ1c2luZXNzX3VpZCI6ImIxZWQ1MmNiM2M1YTZmODcifSwiZXhwIjoxNzU2Nzk2MTg4LCJyZWZyZXNoIjoxNzU2Nzc2OTg4LCJjcmVhdGVkIjoxNzU0Mzc2OTg4LCJ0eXBlIjoiY2xpZW50IiwianRpIjoiZWQxNGY0MWViY2RlZGU1ODEyYjFkY2ZiZDBkMDE3MmI5ZThjODlhNGRlM2UzYmU1OTIyNGE4OWFmMmQ2OWU2NyJ9.D0OMzkIJ4sPAYuAduQxPRnu9_ScVCK-9Td1eROv8eSM"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/merge_clients": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Merge two or more duplicate clients into one primary client. The request body can be empty but must be sent.",
        "parameters": [
          {
            "description": "UID of the destination primary client.",
            "in": "query",
            "name": "to_client_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "UIDs of all the clients to be merged into the to_client_uid, comma separated",
            "in": "query",
            "name": "from_client_uids",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "The request body. It can be empty but must still be sent.",
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Merge duplicate clients into a primary client.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/merge_clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/possible_merge_master": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns a list of client UIDs that can be used as a primary client for the merge.",
        "parameters": [
          {
            "description": "List of client uids, comma separated",
            "in": "query",
            "name": "client_ids",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "master_ids": [
                  "80g6241rk3zldz2h",
                  "06h6m891ub6d2rx3"
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "List of clients that can be used as primary for merge.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/possible_merge_master"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/update_usage": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_status_id": {
                  "description": "Payment status ID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package updated by client",
            "examples": {
              "application/json": {
                "data": {
                  "package_name": "Package Name"
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/validate": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Payment status ID",
            "in": "query",
            "name": "payment_status_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Validation Occurred",
            "examples": {
              "application/json": {
                "data": {
                  "has_package": true
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Client Package has redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/validate"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Deletes a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "campaign": "Source Campaign",
                    "channel": "Source Channel",
                    "created_at": "2025-08-05T06:56:27Z",
                    "custom_field1": "value1",
                    "custom_field2": "value2",
                    "custom_field3": "value3",
                    "customer_status": "inactive",
                    "email": "clientemail@mail.com.dczpvt3f246p4cw9i",
                    "first_name": "First Name",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "matter_term": "clients",
                    "matters": [],
                    "mobile_phone": "+16378383489",
                    "normalized_phone": null,
                    "opt_in": "1",
                    "source": "Client Portal",
                    "source_url": "Source URL",
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:28Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Deletes a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieves a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "campaign": "Source Campaign",
                    "channel": "Source Channel",
                    "created_at": "2025-08-05T06:56:27Z",
                    "custom_field1": "value1",
                    "custom_field2": "value2",
                    "custom_field3": "value3",
                    "customer_status": "lead",
                    "email": "clientemail@mail.com",
                    "first_name": "First Name",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "matter_term": "clients",
                    "matters": [
                      {
                        "display_name": "First Name Last Name",
                        "fields": [],
                        "uid": "eb28o6g7ad6q2ya8"
                      }
                    ],
                    "mobile_phone": "+16378383489",
                    "normalized_phone": null,
                    "opt_in": "1",
                    "source": "Client Portal",
                    "source_url": "Source URL",
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:27Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Retrieves a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Address. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                  "type": "string"
                },
                "created_at": {
                  "description": "Client creation date",
                  "type": "string"
                },
                "custom_field1": {
                  "description": "Custom Field 1",
                  "type": "string"
                },
                "custom_field2": {
                  "description": "Custom Field 2",
                  "type": "string"
                },
                "custom_field3": {
                  "description": "Custom Field 3",
                  "type": "string"
                },
                "email": {
                  "description": "Email Address",
                  "type": "string"
                },
                "first_name": {
                  "description": "First Name",
                  "type": "string"
                },
                "force_nullifying": {
                  "description": "If true, allows address and mobile_phone to be overridden with `null` or `\"\"`.",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last Name",
                  "type": "string"
                },
                "mobile_phone": {
                  "description": "Phone Number. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                  "type": "string"
                },
                "phone": {
                  "description": "Phone Number",
                  "type": "string"
                },
                "spam": {
                  "description": "Client marked as spam",
                  "type": "boolean"
                },
                "staff_id": {
                  "description": "Staff ID",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business",
                  "type": "string"
                },
                "tags": {
                  "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Client last update date",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "created_at": "2025-08-05T06:56:27Z",
                    "customer_status": "lead",
                    "email": "clientemail@mail.com",
                    "first_name": "NEWFIRSTNAME",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "mobile_phone": "+16378383489",
                    "opt_in": "1",
                    "spam": false,
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:28Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/conversations": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of conversations for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "conversations": [
                    {
                      "business_id": "2f27ca024eb96133",
                      "business_unread": false,
                      "client_id": "od0tuoli2prraw3y",
                      "client_unread": false,
                      "created_at": "2025-08-05T06:56:33.583Z",
                      "deep_link": "/app/conversations/uuk21b7xv53er6zq",
                      "id": "uuk21b7xv53er6zq",
                      "last_business_action": "",
                      "last_client_action": null,
                      "staff_id": "6ad7601fd821c8d2",
                      "title": null,
                      "updated_at": "2025-08-05T06:56:33.583Z"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Conversations For A Client",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/documents": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of documents for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "documents": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Documents For A Client",
        "tags": [
          "Documents"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/documents"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/estimates": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Estimates Returned",
            "examples": {
              "application/json": {
                "data": {
                  "estimates": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "amount": 8.8,
                      "client_address": "Lombard St, San Francisco, CA",
                      "client_id": "kf9d91uh82bclson",
                      "client_name": "Alice Smith",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "estimate_date": "2018-06-14",
                      "estimate_number": "1",
                      "id": "aaabbbccc112233",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Estimate for your service",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d34uh92bclwzg",
                      "status": "draft/issued/approved/rejected/invoiced",
                      "title": "Estimate title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates Of Client",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/invoices": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoices": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "allow_online_payment": true,
                      "amount": 8.8,
                      "client_id": "aaabbbccc112233",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "id": "aaabbbccc112233",
                      "invoice_number": "6",
                      "issued_at": "2018-06-14",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Invoice for your service",
                      "payment_balance": 5.0,
                      "payment_state": "pending",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d91uh92bclwzg",
                      "status": "issued/draft",
                      "title": "Invoice Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices Of Client",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payment/client_packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },

          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client Packages Returned",
            "examples": {
              "application/json": {
                "data": {
                  "client_packages": [
                    {
                      "active": "true",
                      "amount": 100.0,
                      "booking_credits": [
                        {
                          "bookings_usage": "0",
                          "credit_items": [
                            {
                              "bookings_usage": 0,
                              "item_id": "mzuk2kkt7vjnxdwo",
                              "item_type": "SERVICE"
                            }
                          ],
                          "id": "vu1rovse0166a9d9",
                          "total_bookings": "10"
                        }
                      ],
                      "bookings_usage": "0",
                      "business_id": "vqzqruk6nyclxpp6",
                      "client_id": "9yxsdkr1hdjtocpv",
                      "conversation_id": "war7ow99zh14qlty",
                      "created_at": "2020-06-01T21:05:00.562Z",
                      "currency": "USD",
                      "id": "m73jkvg4bf2z71b2",
                      "image_path": "",
                      "name": "Music Lessons",
                      "package_id": "v2fvy50p8gjuvnvb",
                      "payment_status_id": "6v5ybwkavv0z9hff",
                      "payment_status_state": "pending",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "name": "product1_name",
                          "quantity": 2
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "name": "product2_name",
                          "quantity": 4
                        }
                      ],
                      "staff_id": "mg9d91uh92bclwzg",
                      "total_bookings": "10",
                      "valid_from": "2020-06-01",
                      "valid_until": "2020-07-01"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Client Packages List Of Client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Available filters: state: filter[state][in]=paid,pending,failed,refunded,cancelled,archived,incompleted.\n                                                                        created_at: filter[created_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                        updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at.\n                                                                      Available operators: asc, desc.\n                                                                      Example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payments": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments of Client",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/conversations": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of conversations",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Folder - Inbox / Follow-up / Sent / Archived",
            "in": "query",
            "name": "folder",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "conversations": [
                    {
                      "business_id": "2f27ca024eb96133",
                      "business_unread": false,
                      "client_id": "od0tuoli2prraw3y",
                      "client_unread": false,
                      "created_at": "2025-08-05T06:56:33.583Z",
                      "deep_link": "/app/conversations/uuk21b7xv53er6zq",
                      "id": "uuk21b7xv53er6zq",
                      "last_business_action": "",
                      "last_client_action": null,
                      "staff_id": "6ad7601fd821c8d2",
                      "title": null,
                      "updated_at": "2025-08-05T06:56:33.583Z"
                    },
                    {
                      "business_id": "2f27ca024eb96133",
                      "business_unread": false,
                      "client_id": "dn7ucrylnqxrb52l",
                      "client_unread": false,
                      "created_at": "2025-08-05T06:56:34.629Z",
                      "deep_link": "/app/conversations/lzth35ivm33uo073",
                      "id": "lzth35ivm33uo073",
                      "last_business_action": "",
                      "last_client_action": null,
                      "staff_id": "6ad7601fd821c8d2",
                      "title": null,
                      "updated_at": "2025-08-05T06:56:34.629Z"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Conversations",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/directory/branding": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Directory's branding including logo url and colors",
        "parameters": [
          {
            "description": "Whitelabel host name",
            "in": "query",
            "name": "host",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "colors": {
                    "primary": "#374766",
                    "secondary": "#39c190",
                    "text": "#ffffff"
                  },
                  "logo": "https://logo.url/path_to.jpg",
                  "name": "Directory name",
                  "powered_by": {
                    "intandem_goto_url": "https://intandem.vcita.com",
                    "intandem_logo_bright": "https://res.cloudinary.com/livesite/image/upload/v1705830358/ParentPartner/inTandem_Light.svg",
                    "intandem_logo_dark": "https://res.cloudinary.com/livesite/image/upload/v1705830358/ParentPartner/inTandem_Dark.svg",
                    "parent_goto_url": "https://vcita.com",
                    "parent_logo_bright": "https://res.cloudinary.com/livesite/image/upload/v1706703241/ParentPartner/MasterCard/provided_by_MC_light.svg",
                    "parent_logo_dark": "https://res.cloudinary.com/livesite/image/upload/v1705319923/ParentPartner/MasterCard/provide_by_mc_dark.svg"
                  },
                  "uid": "aaaabbbb"
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets Directory's branding",
        "tags": [
          "Directory"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/directory/branding"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/estimates": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Estimates Returned",
            "examples": {
              "application/json": {
                "data": {
                  "estimates": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "amount": 8.8,
                      "client_address": "Lombard St, San Francisco, CA",
                      "client_id": "kf9d91uh82bclson",
                      "client_name": "Alice Smith",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "estimate_date": "2018-06-14",
                      "estimate_number": "1",
                      "id": "aaabbbccc112233",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Estimate for your service",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d34uh92bclwzg",
                      "status": "draft/issued/approved/rejected/invoiced",
                      "title": "Estimate title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates List",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Business address",
                  "type": "string"
                },
                "client_address": {
                  "description": "Client's address",
                  "type": "string"
                },
                "client_id": {
                  "description": "Client ID",
                  "type": "string"
                },
                "client_name": {
                  "description": "Client's name",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "Conversation ID",
                  "type": "string"
                },
                "currency": {
                  "description": "Estimate currency: USD, ILS etc.",
                  "type": "string"
                },
                "due_date": {
                  "description": "Estimate due date, must be later than estimate_date (ISO 8601 format)",
                  "type": "string"
                },
                "estimate_date": {
                  "description": "Estimate date (ISO 8601 format)",
                  "type": "string"
                },
                "estimate_number": {
                  "description": "Estimate number",
                  "type": "number"
                },
                "items": {
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Estimate item amount",
                        "type": "number"
                      },
                      "description": {
                        "description": "Estimate item description",
                        "type": "string"
                      },
                      "discount": {
                        "description": "Estimate item discount",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "Estimate item quantity",
                        "type": "number"
                      },
                      "taxes": {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Estimate item tax name",
                              "type": "string"
                            },
                            "rate": {
                              "description": "Estimate item tax rate in percentages",
                              "type": "number"
                            }
                          },
                          "required": [
                            "rate",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "description": "Estimate item title",
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "amount",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "note": {
                  "description": "Estimate note",
                  "type": "string"
                },
                "send_email": {
                  "description": "Set to true in order to send the estimate to the client (for issued estimate). Default: false",
                  "type": "boolean"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "status": {
                  "description": "Possible values: draft, issued, approved, rejected, invoiced. Default: issued",
                  "type": "string"
                },
                "title": {
                  "description": "Estimate title",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "due_date",
                "estimate_date",
                "currency",
                "address",
                "items",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Estimate Created",
            "examples": {
              "application/json": {
                "data": {
                  "estimate": {
                    "address": "habarzel 32\\nTel Aviv",
                    "amount": 8.8,
                    "client_address": "Lombard St, San Francisco, CA",
                    "client_id": "1kfvtps4a4wlh3lc",
                    "client_name": "Alice Smith",
                    "conversation_id": "rv28qk5ey5eretu9",
                    "created_at": "2018-06-14T09:31:21.000",
                    "currency": "USD",
                    "due_date": "2020-04-24",
                    "estimate_date": "2020-04-20",
                    "estimate_number": "1",
                    "id": "aaabbbccc112233",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Item title"
                      }
                    ],
                    "note": "Estimate for your service",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d34uh92bclwzg",
                    "status": "draft/issued/approved/rejected/invoiced",
                    "title": "Estimate title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Estimate",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get all Fields",

        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "default_value": "",
                    "deleted": false,
                    "forms": [
                      "client_card"
                    ],
                    "id": "xlqs9jl7482amkmf",
                    "keep_asking": false,
                    "label": "Colors",
                    "object_type": "matter",
                    "options": [
                      "Red",
                      "Green",
                      "Blue"
                    ],
                    "required": false,
                    "type": "dropdown"
                  }
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get all Fields",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a New Field",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "default_value": {
                  "description": "Default value for checkbox/opt-in",
                  "type": "boolean"
                },
                "forms": {
                  "description": "A list of forms to include this field",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "keep_asking": {
                  "description": "Indicates if to keep asking until filled",
                  "type": "boolean"
                },
                "label": {
                  "description": "Field label",
                  "type": "string"
                },
                "options": {
                  "description": "A list of options for dropdown field",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "required": {
                  "description": "Indicates if the field is required",
                  "type": "boolean"
                },
                "type": {
                  "description": "Field type",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "default_value": "",
                  "deleted": false,
                  "forms": [
                    "client_card",
                    "leave_details",
                    "share_documents"
                  ],
                  "id": "xo08llu7mfiyocar",
                  "keep_asking": true,
                  "label": "Eye color",
                  "object_type": "contact",
                  "options": [
                    "Brown",
                    "Green"
                  ],
                  "required": false,
                  "type": "dropdown"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a New Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields/{field_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Deletes a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Deletes a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets the field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "default_value": "",
                  "deleted": false,
                  "forms": [
                    "client_card"
                  ],
                  "id": "e6wimavv30yp0p0q",
                  "keep_asking": false,
                  "label": "Colors",
                  "object_type": "matter",
                  "options": [
                    "Red",
                    "Green",
                    "Blue"
                  ],
                  "required": false,
                  "type": "dropdown"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Field",
        "parameters": [
          {
            "description": "The id of the field",
            "in": "path",
            "name": "field_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "default_value": {
                  "description": "Default value for checkbox/opt-in",
                  "type": "boolean"
                },
                "forms": {
                  "description": "A list of forms to include this field",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "keep_asking": {
                  "description": "Indicates if to keep asking until filled",
                  "type": "boolean"
                },
                "label": {
                  "description": "Field label",
                  "type": "string"
                },
                "options": {
                  "description": "A list of options for dropdown field",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "required": {
                  "description": "Indicates if the field is required",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "default_value": "",
                  "deleted": false,
                  "forms": [
                    "client_card",
                    "leave_details",
                    "share_documents"
                  ],
                  "id": "8m0hvhge0w9m1yuc",
                  "keep_asking": true,
                  "label": "Colors",
                  "object_type": "matter",
                  "options": [
                    "Red",
                    "Green"
                  ],
                  "required": false,
                  "type": "dropdown"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Field",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/forms": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets all the forms of the business.",
        "parameters": [

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Forms Retrieved",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "sections": [
                      {
                        "editable": true,
                        "fields": [
                          {
                            "default_value": "",
                            "id": "qh0ki5qtre0ayi0q",
                            "keep_asking": false,
                            "required": false,
                            "type": "singleline"
                          }
                        ]
                      }
                    ],
                    "type": "client_card"
                  }
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Forms",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a Form.",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "sections": {
                  "description": "A list sections in the form",
                  "items": {
                    "properties": {
                      "fields": {
                        "description": "A list fields in the form",
                        "items": {
                          "properties": {
                            "default_value": {
                              "description": "The default value the field should have",
                              "type": "string"
                            },
                            "id": {
                              "description": "Field Id",
                              "type": "string"
                            },
                            "keep_asking": {
                              "description": "Should a value be requested until one was provided?",
                              "type": "boolean"
                            },
                            "required": {
                              "description": "Is this field required?",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "Field Type",
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      }
                    }
                  },
                  "type": "array"
                },
                "type": {
                  "description": "The type of the form",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Form Updated",
            "examples": {
              "application/json": {
                "data": {
                  "sections": [
                    {
                      "editable": true,
                      "fields": [
                        {
                          "default_value": "",
                          "id": "qh0ki5qtre0ayi0q",
                          "keep_asking": false,
                          "required": false,
                          "type": "singleline"
                        }
                      ]
                    }
                  ],
                  "type": "client_card"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Form",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoices": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "allow_online_payment": true,
                      "amount": 8.8,
                      "client_id": "aaabbbccc112233",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "id": "aaabbbccc112233",
                      "invoice_number": "6",
                      "issued_at": "2018-06-14",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Invoice for your service",
                      "payment_balance": 5.0,
                      "payment_state": "pending",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d91uh92bclwzg",
                      "status": "issued/draft",
                      "title": "Invoice Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices List",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "business address",
                  "type": "string"
                },
                "allow_online_payment": {
                  "description": "true, false, default: true if the business is connected to payment provider",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "client_uid",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "conversation_uid",
                  "type": "string"
                },
                "currency": {
                  "description": "USD, ILS etc.",
                  "type": "string"
                },
                "due_date": {
                  "description": "invoice due ,must be later than issued_at",
                  "type": "string"
                },
                "invoice_number": {
                  "description": "invoice number",
                  "type": "number"
                },
                "issued_at": {
                  "description": "invoice issue date",
                  "type": "string"
                },
                "items": {
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "invoice item amount",
                        "type": "number"
                      },
                      "description": {
                        "description": "invoice item description",
                        "type": "string"
                      },
                      "discount": {
                        "description": "invoice item discount",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "invoice item quantity",
                        "type": "number"
                      },
                      "taxes": {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "invoice item tax name",
                              "type": "string"
                            },
                            "rate": {
                              "description": "invoice item tax rate in percentages",
                              "type": "number"
                            }
                          },
                          "required": [
                            "rate",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "description": "invoice item title",
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "amount",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "note": {
                  "description": "invoice note",
                  "type": "string"
                },
                "send_email": {
                  "description": "true, false, default false",
                  "type": "boolean"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "staff_id": {
                  "description": "owner is the default",
                  "type": "string"
                },
                "status": {
                  "description": "draft, issued, default issued",
                  "type": "string"
                },
                "title": {
                  "description": "invoice title",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "due_date",
                "issued_at",
                "currency",
                "address",
                "items"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoice Created",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "address": "Oxford st.",
                    "allow_online_payment": false,
                    "amount": 8.8,
                    "client_id": "1kfvtps4a4wlh3lc",
                    "conversation_id": "3brhv2288yuvfmfd",
                    "created_at": "2019-12-17T21:07:04.659Z",
                    "currency": "USD",
                    "due_date": "2019-04-24",
                    "id": "an29s26qnw2pfryh",
                    "invoice_number": 97,
                    "issued_at": "2019-04-20",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Service"
                      }
                    ],
                    "note": "Invoice for your service",
                    "payment_balance": 8.8,
                    "payment_state": "pending",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "status": "issued",
                    "title": "INVOICE #0000097"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices/{invoice_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Invoice ID",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "address": "habarzel 32\\nTel Aviv",
                    "allow_online_payment": true,
                    "amount": 8.8,
                    "client_id": "aaabbbccc112233",
                    "conversation_id": "rv28qk5ey5eretu9",
                    "created_at": "2018-06-14T09:31:21.000",
                    "currency": "USD",
                    "due_date": "2018-06-14",
                    "id": "aaabbbccc112233",
                    "invoice_number": "6",
                    "issued_at": "2018-06-14",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Item title"
                      }
                    ],
                    "note": "Invoice for your service",
                    "payment_balance": 5.0,
                    "payment_state": "pending",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "status": "issued/draft",
                    "title": "Invoice Title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoice By ID",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices/{invoice_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/leadgen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Lead's address",
                  "type": "string"
                },
                "business_id": {
                  "description": "A unique identifier of the business. Can be the Business UID or nickname\\external ID.",
                  "type": "string"
                },
                "email": {
                  "description": "Lead email address. Unique per business.",
                  "type": "string"
                },
                "first_name": {
                  "description": "Lead first name. Mandatory for a new lead.",
                  "type": "string"
                },
                "identifier_type": {
                  "description": "Defines which unique identifier will be used to search for an existing lead or create a new one. Possible values: \"email\" or \"unique_id\"",
                  "type": "string"
                },
                "last_name": {
                  "description": "Lead last name.",
                  "type": "string"
                },
                "message_data": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Key and value that will appear in message",
                  "type": "object"
                },
                "notifications": {
                  "description": "A list of notifications to send after processing of the lead. Possible values: \"auto-reply\" (thank you email to the end user), \"email\" (notify the business owner) or \"sms\" (text notification to the business owner). None if empty.",
                  "type": "string"
                },
                "opt_in": {
                  "description": "Send \"true\" if lead opted in for promotions. Make sure the \"opt-in\" client card field is added to the client card under Settings>Client card.",
                  "type": "string"
                },
                "opt_in_transactional_sms": {
                  "description": "Whether the client opts in to receive transactional SMS messages.",
                  "type": "boolean"
                },
                "phone": {
                  "description": "Lead phone number.",
                  "type": "string"
                },
                "request_data": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Key and value properties that will update new lead and appear in message",
                  "type": "object"
                },
                "request_title": {
                  "description": "Request title. Will also be the created conversation title.",
                  "type": "string"
                },
                "source": {
                  "description": "Will be displayed to the business owner as the lead source",
                  "type": "string"
                },
                "source_url": {
                  "description": "The URL of the page where the lead was created.",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business, default is Lead.",
                  "type": "string"
                },
                "system_message": {
                  "description": "A message displayed to the business owner to introduce the lead. May contain links.",
                  "type": "string"
                },
                "tags": {
                  "description": "Customized labels that enbale you to sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Lead unique id. Unique per business.",
                  "type": "string"
                }
              },
              "required": [
                "identifier_type",
                "first_name",
                "request_title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "conversation_uid": "pehfh46jy6c9mlba",
                "status": "OK",
                "uid": "jg7vmlf2uwx5m6fy"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates a lead",
        "tags": [
          "LeadGen"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/leadgen"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/messages": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Message.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message",
                  "properties": {
                    "channels": {
                      "description": "Comma separated list of channels. Valid values: sms,email. By default will send to all.",
                      "type": "string"
                    },
                    "client_id": {
                      "description": "Client ID",
                      "type": "string"
                    },
                    "conversation_title": {
                      "description": "Conversation Title",
                      "type": "string"
                    },
                    "conversation_uid": {
                      "description": "Use conversation_uid for adding a message to an existing conversation, do not pass this param for creating new conversation",
                      "type": "string"
                    },
                    "direction": {
                      "description": "Message Direction - client_to_business/business_to_client",
                      "type": "string"
                    },
                    "staff_id": {
                      "description": "Staff Id",
                      "type": "string"
                    },
                    "text": {
                      "description": "Message Text",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "conversation_uid": "pyrbkggxakbjywxx",
                  "id": 21,
                  "uid": "ysrimghchgc0x6zl"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Message",
        "tags": [
          "Messages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/messages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/numbers/dedicated_numbers/assign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Assign Dedicated Number For Account, This API requires the 'enable_dedicated_nexmo_number' feature flag to be enabled on your account/directory. For additional information please reach out to our support.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "api_key": {
                  "type": "string"
                },
                "business_uid": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "number_type": {
                  "description": "[\"promotional\",\"transactional\"]",
                  "type": "string"
                }
              },
              "required": [
                "number",
                "number_type",
                "api_key"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "data": true,
                  "success": true
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Assign Dedicated Number",
        "tags": [
          "Manage Numbers"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/numbers/dedicated_numbers/assign"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/numbers/dedicated_numbers/set_two_way_texting_status": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Set Two Way Texting Status",

        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "data": "inactive",
                  "success": true
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Set Two Way Texting Status",
        "tags": [
          "Manage Numbers"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/numbers/dedicated_numbers/set_two_way_texting_status"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/numbers/twilio": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "translation missing: en.messaging-api.twilio.index.post.descriptionn",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business_uid": {
                  "type": "string"
                },
                "messaging_id": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "sub_account_id": {
                  "type": "string"
                }
              },
              "required": [
                "business_uid",
                "number",
                "messaging_id",
                "sub_account_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "business_uid": "123asd123asd",
                    "messaging_id": "123abc",
                    "number": "123456789",
                    "sub_account_id": "123aaa"
                  },
                  "success": true
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "translation missing: en.messaging-api.twilio.index.post.titlee",
        "tags": [
          "Manage Numbers"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/numbers/twilio"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/numbers/twilio/{sub_account_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Remove Twilio Number",
        "parameters": [
          {
            "description": "Sub Account ID",
            "in": "path",
            "name": "sub_account_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "business_uid": "123asd123asd",
                    "messaging_id": "123abc",
                    "number": "123456789"
                  },
                  "success": true
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Remove Twilio Number",
        "tags": [
          "Manage Numbers"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/numbers/twilio/{sub_account_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/cards/sync_card": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "client_id": {
                  "description": "client_uid",
                  "type": "string"
                },
                "customer_id": {
                  "description": "The customer ID at the payment gateway",
                  "type": "string"
                },
                "datails": {
                  "items": {
                    "properties": {
                      "card_brand": {
                        "description": "card_brand",
                        "type": "string"
                      },
                      "cardholder_name": {
                        "description": "cardholder_name",
                        "type": "string"
                      },
                      "exp_month": {
                        "description": "exp_month",
                        "type": "number"
                      },
                      "exp_year": {
                        "description": "exp_year",
                        "type": "number"
                      },
                      "last_4": {
                        "description": "last_4",
                        "type": "string"
                      }
                    },
                    "required": [
                      "client_id",
                      "external_card_id",
                      "default",
                      "details",
                      "items"
                    ],
                    "type": "object"
                  },
                  "type": "object"
                },
                "default": {
                  "description": "true/false. default: false (will be set to true if it is the client's first card)",
                  "type": "boolean"
                },
                "external_card_id": {
                  "description": "card id",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create sync card",
            "examples": {
              "application/json": {
                "data": {
                  "card": {
                    "active": true,
                    "business_id": "dk3wvzieadwjmojz",
                    "card_brand": "visa",
                    "cardholder_name": "test card",
                    "client_id": "9ev0ruk82bqk5oqa",
                    "created_at": "2021-02-18T11:09:54.000Z",
                    "default": true,
                    "exp_month": 11,
                    "exp_year": 2022,
                    "id": "so6k0ydbizask6cu",
                    "last_4": "1111",
                    "payment_provider": "stripe",
                    "staff_id": "hs6wse84tqv3kndi",
                    "staff_name": "multi matter pay"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create sync card",
        "tags": [
          "Card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/cards/sync_card"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/cards/{card_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete saved card.",
        "parameters": [

          {
            "description": "Card ID",
            "in": "path",
            "name": "card_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Delete saved card",
        "tags": [
          "Card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.card_id": "method.request.path.card_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/cards/{card_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a checkout process from webhook",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "amount": {
                  "description": "The charged amount  (You should send this only if you are in sync_flow)",
                  "type": "boolean"
                },
                "card": {
                  "description": "The saved card info - (You should send this only if client want to save the card) ",
                  "properties": {
                    "card_id": {
                      "description": "The card id - should be unique value",
                      "type": "string"
                    },
                    "card_info": {
                      "properties": {
                        "card_brand": {
                          "description": "The card brand",
                          "type": "string"
                        },
                        "cardholder_name": {
                          "description": "The card holder name",
                          "type": "string"
                        },
                        "exp_month": {
                          "description": "Expiration month (2 digits)",
                          "type": "string"
                        },
                        "exp_year": {
                          "description": "Expiration year (4 digits)",
                          "type": "string"
                        },
                        "last_4": {
                          "description": "Last 4 digits",
                          "type": "string"
                        }
                      },
                      "required": [
                        "card_brand",
                        "last_4",
                        "exp_month",
                        "exp_year",
                        "cardholder_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "created": {
                  "description": "the date of the payment",
                  "type": "string"
                },
                "customer_id": {
                  "description": "The customer unique id (You should send this only if client want to save the card)",
                  "type": "string"
                },
                "fees": {
                  "description": "Array of fees (Max 1 fee) (Relevant only for when sync_flow is not true)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Fee amount",
                        "type": "number"
                      },
                      "name": {
                        "description": "Fee name (Max 35 chars)",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "payment_method": {
                  "description": "The payment method which was used in checkout. Available methods: 'Credit Card', 'Bank Payment - ACH'.",
                  "type": "string"
                },
                "ps_id": {
                  "description": "The payment status uid (You should send this only if you are in sync_flow)",
                  "type": "string"
                },
                "state": {
                  "description": "The current payment state. This field can be used only for creating a pending payment. Value can be only 'pending'",
                  "type": "string"
                },
                "sync_flow": {
                  "description": "You should send true in case it is a post checkout flow ",
                  "type": "boolean"
                },
                "tips": {
                  "description": "Array of tips (Max 1 tip) (Relevant only for when sync_flow is not true)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Tip amount",
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "transaction_id": {
                  "description": "The external payment gateway transaction id",
                  "type": "string"
                },
                "type": {
                  "description": "checkout.session.completed",
                  "type": "string"
                },
                "url_key": {
                  "description": "The url_key",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payed by checkout",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Send checkout update by webhook ",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/{url_key}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "url_key",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Checkout Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "allow_save_card": false,
                  "amount": 20,
                  "client_id": "jdsfhfhjhsfg",
                  "client_store_card_for_business_use": false,
                  "currency": "USD",
                  "email": "nil",
                  "invoice_id": "yrg7iehgv",
                  "name": "XXX",
                  "return_url": "http://xxxx",
                  "terms_and_conditions_type": "text",
                  "terms_and_conditions_value": "terms and conditions"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Open Checkout For Specific url_key",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.url_key": "method.request.path.url_key"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/{url_key}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "client_id": {
                  "description": "Client ID",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "Conversation ID",
                  "type": "string"
                },
                "package_id": {
                  "description": "Package ID",
                  "type": "string"
                },
                "price": {
                  "description": "Price. Default: package price.",
                  "type": "number"
                },
                "valid_from": {
                  "description": "First valid date of the client package (ISO 8601 format)",
                  "type": "string"
                },
                "valid_until": {
                  "description": "Last valid date of the client package (ISO 8601 format). Default: will be set according to package expiration.",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "package_id",
                "valid_from"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Package added to the client",
            "examples": {
              "application/json": {
                "data": {
                  "client_package": {
                    "active": "true",
                    "amount": 100.0,
                    "booking_credits": [
                      {
                        "bookings_usage": "0",
                        "credit_items": [
                          {
                            "bookings_usage": 0,
                            "item_id": "mzuk2kkt7vjnxdwo",
                            "item_type": "SERVICE"
                          }
                        ],
                        "id": "vu1rovse0166a9d9",
                        "total_bookings": "10"
                      }
                    ],
                    "bookings_usage": "0",
                    "business_id": "vqzqruk6nyclxpp6",
                    "client_id": "9yxsdkr1hdjtocpv",
                    "conversation_id": "war7ow99zh14qlty",
                    "created_at": "2020-06-01T21:05:00.562Z",
                    "currency": "USD",
                    "id": "m73jkvg4bf2z71b2",
                    "image_path": "",
                    "name": "Music Lessons",
                    "package_id": "v2fvy50p8gjuvnvb",
                    "payment_status_id": "6v5ybwkavv0z9hff",
                    "payment_status_state": "pending",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "staff_id": "mg9d91uh92bclwzg",
                    "total_bookings": "10",
                    "valid_from": "2020-06-01",
                    "valid_until": "2020-07-01"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Add package to client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages/cancel_redemption": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_status_id": {
                  "description": "Payment status ID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client package credit updated",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel Client Package Credit Redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/cancel_redemption"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages/update_usage": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "matter_uid": {
                  "description": "Matter/Conversation UID. If not provided, the system will attempt to find the default matter for the client.",
                  "type": "string"
                },
                "payment_status_uid": {
                  "description": "Payment status UID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_uid"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client package credit updated using payment_status_id",
            "examples": {
              "application/json": {
                "data": {
                  "package_name": "Package Name"
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure with payment_status_id",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "if exists the packages returns with their items",
            "in": "query",
            "name": "include_items",
            "required": false,
            "type": "string"
          },
          {
            "description": "if exists the packages returns only active packages",
            "in": "query",
            "name": "active_only",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Packages Info Retrieved with active packages only",
            "examples": {
              "application/json": {
                "data": {
                  "packages": [
                    {
                      "active": true,
                      "currency": "USD",
                      "description": "Package description",
                      "discount_amount": "25",
                      "discount_unit": "f",
                      "expiration": 1,
                      "expiration_unit": "m",
                      "id": "456687634585436",
                      "image_path": null,
                      "name": "Package name",
                      "online_payment_enabled": true,
                      "price": "223.5",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "name": "product1_name",
                          "quantity": 2
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "name": "product2_name",
                          "quantity": 4
                        }
                      ],
                      "total_bookings": "10"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get all package of business",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {},
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a package and its corresponding items",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "currency": {
                  "description": "The items currency",
                  "type": "string"
                },
                "description": {
                  "description": "The package description",
                  "type": "string"
                },
                "discount_amount": {
                  "description": "Package discount amount (Only for view purposes)",
                  "type": "number"
                },
                "discount_unit": {
                  "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                  "type": "string"
                },
                "expiration": {
                  "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit   ",
                  "type": "number"
                },
                "expiration_unit": {
                  "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                  "type": "string"
                },
                "image_path": {
                  "description": "The package's image path",
                  "type": "string"
                },
                "items": {
                  "items": {
                    "properties": {
                      "services": {
                        "items": {
                          "properties": {
                            "id": {
                              "description": "Item uid",
                              "type": "number"
                            }
                          },
                          "required": [
                            "total_bookings",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_bookings": {
                        "description": "Usage number allowed for specific item within the package",
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_bookings",
                      "services"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "The name of the package",
                  "type": "string"
                },
                "online_payment_enabled": {
                  "description": "Online payments enabled?",
                  "type": "boolean"
                },
                "price": {
                  "description": "The price of the package",
                  "type": "number"
                },
                "products": {
                  "description": "Products included in the package. Up to 3 different products allowed.",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Product ID",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "Product's quantity, must be greater than 0, up to 5 items allowed.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name",
                "price",
                "currency",
                "items",
                "expiration",
                "expiration_unit"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Package Created",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create Package ",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages/{package_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "package": {
                    "active": true,
                    "currency": "USD",
                    "description": "Package description",
                    "discount_amount": "25",
                    "discount_unit": "f",
                    "expiration": 1,
                    "expiration_unit": "m",
                    "id": "456687634585436",
                    "image_path": null,
                    "items": [
                      {
                        "services": [
                          {
                            "id": "6f156jl6z3bqwn1c",
                            "name": "Yoga Class"
                          }
                        ],
                        "total_bookings": "5"
                      },
                      {
                        "services": [
                          {
                            "id": "eeyt3rk4vk4abl5v",
                            "name": "Spinning Class"
                          }
                        ],
                        "total_bookings": "5"
                      }
                    ],
                    "name": "Package name",
                    "online_payment_enabled": true,
                    "price": "223.5",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "total_bookings": 10
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Show package info",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "package": {
                  "properties": {
                    "currency": {
                      "description": "The items currency",
                      "type": "string"
                    },
                    "description": {
                      "description": "The package description",
                      "type": "string"
                    },
                    "discount_amount": {
                      "description": "Package discount amount (Only for view purposes)",
                      "type": "number"
                    },
                    "discount_unit": {
                      "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit",
                      "type": "number"
                    },
                    "expiration_unit": {
                      "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                      "type": "string"
                    },
                    "image_path": {
                      "description": "The package's image path",
                      "type": "string"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "services": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Item uid",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "total_bookings",
                                "id"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "total_bookings": {
                            "description": "Usage number allowed for specific item within the package",
                            "type": "number"
                          }
                        },
                        "required": [
                          "total_bookings",
                          "services"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the package",
                      "type": "string"
                    },
                    "online_payment_enabled": {
                      "description": "Online payments enabled?",
                      "type": "boolean"
                    },
                    "price": {
                      "description": "The price of the package",
                      "type": "number"
                    },
                    "products": {
                      "description": "Package's products. [] will remove the package's products",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Product ID",
                            "type": "number"
                          },
                          "quantity": {
                            "description": "Product's quantity, must be greater than 0.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "quantity"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "package"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package Updated",
            "examples": {
              "application/json": {
                "data": {
                  "package": {
                    "active": true,
                    "currency": "USD",
                    "description": "Package description",
                    "discount_amount": "25",
                    "discount_unit": "f",
                    "expiration": 1,
                    "expiration_unit": "m",
                    "id": "456687634585436",
                    "image_path": null,
                    "items": [
                      {
                        "services": [
                          {
                            "id": "6f156jl6z3bqwn1c",
                            "name": "Yoga Class"
                          }
                        ],
                        "total_bookings": "5"
                      },
                      {
                        "services": [
                          {
                            "id": "eeyt3rk4vk4abl5v",
                            "name": "Spinning Class"
                          }
                        ],
                        "total_bookings": "5"
                      }
                    ],
                    "name": "Package name",
                    "online_payment_enabled": true,
                    "price": "223.5",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "total_bookings": 10
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update package [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/settings": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Settings Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "payment_settings": {
                    "allow_bank_debit_on_checkout": true,
                    "allow_bank_debit_on_checkout_enabled": true,
                    "allow_credit_card": true,
                    "allow_view_payments": true,
                    "billing_address": null,
                    "braintree_merchant_id": null,
                    "client_store_card_for_business_use": true,
                    "connected_payment_gateways": [
                      "stripe",
                      "paypal"
                    ],
                    "currency": "USD",
                    "enable_tips_for_bo": true,
                    "enable_tips_for_cp": true,
                    "estimate_terms": null,
                    "ewallet_type": "paypal",
                    "hide_powered_by": null,
                    "invoice_terms": null,
                    "matter_terms": null,
                    "multiple_currencies": true,
                    "partial_payments_enabled": true,
                    "payments_enabled": true,
                    "payments_gateway_type": "stripe",
                    "paypal_email": "fake@fake.com",
                    "pdf_customization_color": null,
                    "pdf_customization_cover": null,
                    "pdf_customization_logo_size": null,
                    "pdf_customization_template": null,
                    "show_taxes": true,
                    "store_card_for_business_use_enabled": true,
                    "stripe_access_token": "fake_token",
                    "stripe_email": "fake@fake.com",
                    "stripe_user_id": "fake_user_id",
                    "supported_currencies": [
                      "USD",
                      "EUR",
                      "GBP"
                    ],
                    "tax_mode": null,
                    "terms_and_conditions_type": "text",
                    "terms_and_conditions_value": "terms and conditions",
                    "tips": [
                      {
                        "type": "percent",
                        "value": 10
                      },
                      {
                        "type": "percent",
                        "value": 15
                      }
                    ],
                    "vcita_payments_business_profession_code": null
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Current Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_settings": {
                  "properties": {
                    "allow_bank_debit_on_checkout": {
                      "description": "Allow Bank Debit on Checkout",
                      "type": "boolean"
                    },
                    "allow_credit_card": {
                      "description": "Allow Credit Card",
                      "type": "boolean"
                    },
                    "allow_view_payments": {
                      "description": "Allow View Payments",
                      "type": "boolean"
                    },
                    "braintree_access_token": {
                      "description": "Braintree Access Token",
                      "type": "string"
                    },
                    "braintree_merchant_id": {
                      "description": "Braintree Merchant ID",
                      "type": "string"
                    },
                    "braintree_refresh_token": {
                      "description": "Braintree Refresh Token",
                      "type": "string"
                    },
                    "client_store_card_for_business_use": {
                      "description": "Client Store Card for Business Use",
                      "type": "boolean"
                    },
                    "currency": {
                      "description": "3 Character Currency Code (PLN,GBP,EUR,USD,CSK,JPY,RUB)",
                      "type": "string"
                    },
                    "enable_tips_for_bo": {
                      "description": "Enable Tips for back office",
                      "type": "boolean"
                    },
                    "enable_tips_for_cp": {
                      "description": "Enable Tips for client portal",
                      "type": "boolean"
                    },
                    "ewallet_type": {
                      "description": "eWallet Type (valid: \"paypal\")",
                      "type": "string"
                    },
                    "multiple_currencies": {
                      "description": "Support Multiple Currencies",
                      "type": "boolean"
                    },
                    "payments_enabled": {
                      "description": "Enable Payments",
                      "type": "boolean"
                    },
                    "payments_gateway_type": {
                      "description": "Payments Gateway Type",
                      "type": "string"
                    },
                    "paypal_email": {
                      "description": "Paypal Payment Email",
                      "type": "string"
                    },
                    "stripe_access_token": {
                      "description": "Stripe Access Token",
                      "type": "string"
                    },
                    "stripe_email": {
                      "description": "Stripe Email",
                      "type": "string"
                    },
                    "stripe_user_id": {
                      "description": "Stripe User ID",
                      "type": "string"
                    },
                    "terms_and_conditions_type": {
                      "description": "Terms and Conditions Type",
                      "type": "string"
                    },
                    "terms_and_conditions_value": {
                      "description": "Terms and Conditions Value",
                      "type": "string"
                    },
                    "tips": {
                      "description": "Array of tips, can be empty or contain exactly 3 items",
                      "items": {
                        "properties": {
                          "type": {
                            "description": "Tip Type (valid: \"percent\")",
                            "type": "string"
                          },
                          "value": {
                            "description": "Tip Value (valid: 1-99)",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Settings Updated",
            "examples": {
              "application/json": {
                "data": {
                  "payment_settings": {
                    "allow_bank_debit_on_checkout": true,
                    "allow_bank_debit_on_checkout_enabled": true,
                    "allow_credit_card": true,
                    "allow_view_payments": true,
                    "billing_address": "123 Fake St",
                    "braintree_merchant_id": "fake_merchant_id",
                    "client_store_card_for_business_use": true,
                    "connected_payment_gateways": [
                      "stripe"
                    ],
                    "currency": "USD",
                    "enable_tips_for_bo": true,
                    "enable_tips_for_cp": true,
                    "estimate_terms": "30 days",
                    "ewallet_type": "paypal",
                    "hide_powered_by": true,
                    "invoice_terms": "30 days",
                    "matter_term": "Term",
                    "multiple_currencies": true,
                    "partial_payments_enabled": true,
                    "payments_enabled": true,
                    "payments_gateway_type": "stripe",
                    "paypal_email": "fake@fake.com",
                    "pdf_customization_color": "#000000",
                    "pdf_customization_cover": "default",
                    "pdf_customization_logo_size": "medium",
                    "pdf_customization_template": "default",
                    "show_taxes": true,
                    "store_card_for_business_use_enabled": true,
                    "stripe_access_token": "fake_token",
                    "stripe_email": "fake@fake.com",
                    "stripe_user_id": "fake_user_id",
                    "supported_currencies": [
                      "USD",
                      "EUR",
                      "GBP"
                    ],
                    "tax_mode": "exclude",
                    "terms_and_conditions_type": "text",
                    "terms_and_conditions_value": "terms and conditions",
                    "tips": [
                      {
                        "type": "percent",
                        "value": 10
                      },
                      {
                        "type": "percent",
                        "value": 15
                      },
                      {
                        "type": "percent",
                        "value": 20
                      }
                    ],
                    "vcita_payments_business_profession_code": "1234"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/settings/update_default_currency": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Default Currency Updated",
            "examples": {
              "application/json": {
                "data": {
                  "currency": "USD"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Default Currency",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment_statuses/{id}/apply_coupon": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon Applied",
            "examples": {
              "application/json": {
                "data": {
                  "payment_status": {
                    "amount_to_pay_h": "$8.00 USD",
                    "balance_h": "$8.00 USD",
                    "currency": "USD",
                    "id": "ej27h4bjknw0g6dh",
                    "price": "8.0",
                    "price_before_coupon": "10",
                    "state": "pending"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Invalid Coupon",
            "examples": {
              "application/json": {
                "error": "Invalid Coupon",
                "error_code": "INVALID_COUPON",
                "status": "Error"
              }
            }
          }
        },
        "summary": "Apply Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        }
      }
    },
    "/payment_statuses/{id}/validate_coupon": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Valid Coupon",
            "examples": {
              "application/json": {
                "data": {
                  "payment_status": {
                    "amount_to_pay_h": "$8.00 USD",
                    "balance_h": "$8.00 USD",
                    "currency": "USD",
                    "id": "ej27h4bjknw0g6dh",
                    "price": "8.0",
                    "price_before_coupon": "10",
                    "state": "pending"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Invalid Coupon",
            "examples": {
              "application/json": {
                "error": "Invalid Coupon",
                "error_code": "INVALID_COUPON",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: state: filter[state][in]=paid,pending,failed,refunded,cancelled,archived,incompleted.\n                                                                                           created_at: filter[created_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                                           updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                                           client_id: filter[client_id][eq]=client_id.\n                                                                                           invoice_id: filter[invoice_id][eq]=invoice_id.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at.\n                                                                      Available operators: asc, desc.\n                                                                      Example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payments": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments List",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "amount": {
                  "description": "amount",
                  "type": "number"
                },
                "client_id": {
                  "description": "client ID",
                  "type": "string"
                },
                "currency": {
                  "description": "USD, ILS etc.",
                  "type": "string"
                },
                "fees": {
                  "description": "Array of fees (Max 1 fee)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Fee amount",
                        "type": "number"
                      },
                      "name": {
                        "description": "Fee name (Max 35 chars)",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "mark_as_online": {
                  "description": "Enable online refund. Default is disabled",
                  "type": "boolean"
                },
                "other_payment_method": {
                  "description": "Max 24 chars",
                  "type": "string"
                },
                "paid_at": {
                  "description": "default is now",
                  "type": "string"
                },
                "pay_key": {
                  "description": "Max 64 chars",
                  "type": "string"
                },
                "payment_method": {
                  "description": "'PayPal', 'Other', 'Cash', 'Credit Card', 'Bank Transfer', 'Cheque'",
                  "type": "string"
                },
                "payment_subject_id": {
                  "description": "The ID of the entity for which the payment has been made",
                  "type": "string"
                },
                "payment_subject_type": {
                  "description": "The type of entity for which the payment has been made. Available types: 'Meeting', 'EventAttendance', 'Invoice', 'ClientBookingPackage', 'ProductOrder'.",
                  "type": "string"
                },
                "reference": {
                  "description": "Max 24 chars",
                  "type": "string"
                },
                "send_receipt": {
                  "description": "true, false. default true",
                  "type": "boolean"
                },
                "staff_id": {
                  "description": "Default is set to the staff that performed the API call. Business owner is allowed to send staff_id",
                  "type": "string"
                },
                "state": {
                  "description": "The current payment state. This field can be used only for creating a pending payment. Value can be only 'pending'",
                  "type": "string"
                },
                "tips": {
                  "description": "Array of tips (Max 1 tip)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Tip amount",
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "title": {
                  "description": "paid for service or product",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "payment_method",
                "currency",
                "amount",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment Created",
            "examples": {
              "application/json": {
                "data": {
                  "payment": {
                    "amount": 150,
                    "client_id": "aaabbbccc112233",
                    "conversation_id": "aaabbbccc112233",
                    "created_at": "2019-10-16T13:05:43Z",
                    "currency": "USD",
                    "fees": [
                      {
                        "amount": 13,
                        "name": "Taylor Swift Fee"
                      }
                    ],
                    "marked_as_online": false,
                    "other_payment_method": "bit",
                    "paid_at": "2019-10-15T13:05:43Z",
                    "paid_offline": true,
                    "pay_key": "123456",
                    "payment_action": "record_payment",
                    "payment_id": "aaabbbccc112233",
                    "payment_method": "credit_card",
                    "reference": "123",
                    "send_receipt": true,
                    "staff_id": "aaabbbccc112233",
                    "state": "paid",
                    "tips": [
                      {
                        "amount": 100
                      }
                    ],
                    "title": "Payment Title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments/{payment_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "payment's id",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payment": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments of Client",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.payment_id": "method.request.path.payment_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments/{payment_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments/{payment_uid}/match": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "relevant payment UID",
            "in": "path",
            "name": "payment_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "matter_uid": {
                  "description": "The matter uid of the relevant payment",
                  "type": "string"
                },
                "payment_status_uid": {
                  "description": "The uid of the relevant payment request to match",
                  "type": "string"
                }
              },
              "required": [
                "matter_uid",
                "payment_status_uid"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment Matched",
            "examples": {
              "application/json": {
                "data": {
                  "payment": {
                    "amount": 1,
                    "client_id": "jfcomkyykiz0mqkw",
                    "conversation_id": "lzxxiv5euh8z18qw",
                    "created_at": "2022-01-19T12:26:15Z",
                    "currency": "ILS",
                    "marked_as_online": false,
                    "other_payment_method": "bit",
                    "paid_at": "2022-01-19T12:26:05Z",
                    "paid_offline": true,
                    "payment_action": "record_payment",
                    "payment_id": "2ulfclwzu8yksj9u",
                    "payment_method": "Cash",
                    "reference": "123",
                    "send_receipt": true,
                    "source_data": {
                      "campaign": "1",
                      "channel": "1",
                      "name": "initiated_by_staff",
                      "website_url": "1"
                    },
                    "state": "paid"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Match Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/appointments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get appointments list",
        "parameters": [
          {
            "description": "Business ID (optional)",
            "in": "query",
            "name": "business_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Client ID Filter",
            "in": "query",
            "name": "client_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "State Filter - rejected/scheduled/done/cancelled/pending_reschedule/reschedule e.g state=done,rejected",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Multiple order by option - updated:DESC,start_at:ASC,created:DESC",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "appointments": [
                    {
                      "approval_mode": null,
                      "business_uid": "104a5664c3663a8d",
                      "category_name": null,
                      "charge_type": "no_price",
                      "client_color_id": 0,
                      "client_first_name": "Deeanna",
                      "client_id": "xvl55kzldujkar76",
                      "client_last_name": "Rice",
                      "conversation_id": "c7g4pvubtj84j6b5",
                      "created_at": "2025-08-05T06:56:16.020Z",
                      "currency": null,
                      "duration": 30,
                      "end_time": "2025-08-11T06:30:00.000Z",
                      "id": "e7j16p8hrgacto4g",
                      "image_url": "",
                      "initiator": null,
                      "interaction_details": "consequuntur",
                      "interaction_type": "client_location",
                      "is_recurring": false,
                      "linked_booking_uid": null,
                      "no_show": false,
                      "notes": null,
                      "optional_times": [],
                      "payment_id": null,
                      "payment_status": null,
                      "price": "0.0",
                      "series_id": null,
                      "series_instance_count": null,
                      "service_id": "vxolrre9o6ob92ee",
                      "staff_display_name": "Britt Bogan",
                      "staff_id": "9a33fc142dbb67f3",
                      "staff_image": null,
                      "start_time": "2025-08-11T06:00:00.000Z",
                      "state": "scheduled",
                      "title": "Advanced didactic portal",
                      "type": "appointment",
                      "updated_at": "2025-08-05T06:56:16.020Z"
                    }
                  ],
                  "next_page": null
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointments List",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/appointments/{appointment_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get appointment",
        "parameters": [
          {
            "description": "Appointment id",
            "in": "path",
            "name": "appointment_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "appointment": {
                    "approval_mode": null,
                    "auto_follow_up_hours": 0.0,
                    "business_uid": "104a5664c3663a8d",
                    "category_name": null,
                    "charge_type": "no_price",
                    "client_color_id": 0,
                    "client_first_name": "Deeanna",
                    "client_id": "xvl55kzldujkar76",
                    "client_last_name": "Rice",
                    "conversation_id": "c7g4pvubtj84j6b5",
                    "coupon": null,
                    "created_at": "2025-08-05T06:56:16.020Z",
                    "currency": null,
                    "duration": 30,
                    "end_time": "2025-08-11T06:30:00.000Z",
                    "follow_up_data": null,
                    "follow_up_note": "",
                    "follow_up_time": null,
                    "follow_up_type": null,
                    "future_bookings_limit": 0,
                    "id": "e7j16p8hrgacto4g",
                    "image_url": "",
                    "initiator": null,
                    "interaction_details": "consequuntur",
                    "interaction_type": "client_location",
                    "invoices": [],
                    "is_recurring": false,
                    "last_action_message": null,
                    "linked_booking_uid": null,
                    "meeting_reminder_sms_1": false,
                    "meeting_reminder_sms_2": false,
                    "min_hours_before_meeting": 0.0,
                    "no_show": false,
                    "notes": null,
                    "optional_times": [],
                    "payment": null,
                    "payment_id": null,
                    "payment_status": null,
                    "price": "0.0",
                    "remind_before_in_hours_1": 0.25,
                    "remind_before_in_hours_2": 0.0,
                    "request_data": null,
                    "series_id": null,
                    "series_instance_count": null,
                    "service_id": "vxolrre9o6ob92ee",
                    "sms_booking_confirmation": null,
                    "source_data": {
                      "campaign": null,
                      "channel": null,
                      "id": 60,
                      "name": "initiated_by_staff",
                      "website_url": null
                    },
                    "staff_display_name": "Britt Bogan",
                    "staff_id": "9a33fc142dbb67f3",
                    "staff_image": null,
                    "start_time": "2025-08-11T06:00:00.000Z",
                    "state": "scheduled",
                    "title": "Advanced didactic portal",
                    "type": "appointment",
                    "updated_at": "2025-08-05T06:56:16.020Z",
                    "zoom_start_url": null
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Appointment",
        "tags": [
          "Appointments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/appointments/{appointment_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get bookings of client",
        "parameters": [
          {
            "description": "Maximum number of records which are returned for the request",
            "in": "query",
            "name": "per_page",
            "required": true,
            "type": "string"
          },
          {
            "description": "First record's index in the returned list (e.g. per_page = 10, offset = 1, reords 11 to 20 are returned)",
            "in": "query",
            "name": "offset",
            "required": true,
            "type": "string"
          },
          {
            "description": "Business UID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Matter UID",
            "in": "query",
            "name": "matter_uid",
            "required": false,
            "type": "string"
          },
          {
            "description": "If equals to true, returns records from the past only. Otherwise, returns future bookings as well.",
            "in": "query",
            "name": "passed",
            "required": false,
            "type": "string"
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is bigger than this parameter",
            "in": "query",
            "name": "start_time",
            "required": false,
            "type": "string"
          },
          {
            "description": "Relevant to recurring appointment/event, returns appointment/event attendance which their start_time is smaller than this parameter",
            "in": "query",
            "name": "end_time",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "bookings": [
                    {
                      "approval_mode": "immediate",
                      "category_name": null,
                      "charge_type": "no_price",
                      "client_id": "3zashrlha0cwvnoz",
                      "conversation_id": "kehqoc1jkgooe0ft",
                      "currency": "ILS",
                      "depth": "deep",
                      "description": null,
                      "duration": 60,
                      "end_time": "2025-08-07T02:56:21.751-05:00",
                      "image_url": "",
                      "interaction_details": "Denver, CO, USA",
                      "interaction_type": "business_location",
                      "invoice_payment_status_uid": null,
                      "invoices": [],
                      "is_recurring": true,
                      "no_show": false,
                      "notes": "",
                      "payable": false,
                      "payment": null,
                      "payment_id": null,
                      "payment_status": null,
                      "policies": {
                        "cancellation": {
                          "can_cancel": true,
                          "can_cancel_now": true,
                          "time_limit": 0
                        },
                        "meetings": {
                          "meetings_policy": ""
                        },
                        "rescheduling": {
                          "can_reschedule": true,
                          "can_reschedule_now": true,
                          "time_limit": 0
                        }
                      },
                      "price": "0.0",
                      "recurrence_description": "Daily (4 times)",
                      "rsvp_required": false,
                      "rsvp_state": "confirmed",
                      "series_id": "vr40xtqf6qecdbft",
                      "service_id": "om30w1mj75dvvnja",
                      "source_data": {
                        "campaign": null,
                        "channel": null,
                        "id": 1412199,
                        "name": "initiated_by_staff",
                        "website_url": null
                      },
                      "staff_id": "36c7b7b9cf044b03",
                      "staff_name": "staff name",
                      "start_time": "2025-08-07T01:56:21.751-05:00",
                      "state": "scheduled",
                      "suggested_times": [],
                      "suggested_times_end": [],
                      "time_zone": "(GMT+02:00) Jerusalem",
                      "title": "Appointment 1",
                      "type": "appointment",
                      "uid": "wpyygjkyu0jca08e"
                    },
                    {
                      "approval_mode": "immediate",
                      "category_name": null,
                      "charge_type": "no_price",
                      "client_id": "3zashrlha0cwvnoz",
                      "conversation_id": "kehqoc1jkgooe0ft",
                      "currency": "ILS",
                      "depth": "deep",
                      "description": null,
                      "duration": 60,
                      "end_time": "2025-08-08T02:56:21.770-05:00",
                      "image_url": "",
                      "interaction_details": "Denver, CO, USA",
                      "interaction_type": "business_location",
                      "invoice_payment_status_uid": null,
                      "invoices": [],
                      "is_recurring": true,
                      "no_show": false,
                      "notes": "",
                      "payable": false,
                      "payment": null,
                      "payment_id": null,
                      "payment_status": null,
                      "policies": {
                        "cancellation": {
                          "can_cancel": true,
                          "can_cancel_now": true,
                          "time_limit": 0
                        },
                        "meetings": {
                          "meetings_policy": ""
                        },
                        "rescheduling": {
                          "can_reschedule": true,
                          "can_reschedule_now": true,
                          "time_limit": 0
                        }
                      },
                      "price": "0.0",
                      "recurrence_description": "Daily (4 times)",
                      "rsvp_required": false,
                      "rsvp_state": "confirmed",
                      "series_id": "vr40xtqf6qecdbft",
                      "service_id": "om30w1mj75dvvnja",
                      "source_data": {
                        "campaign": null,
                        "channel": null,
                        "id": 1412199,
                        "name": "initiated_by_staff",
                        "website_url": null
                      },
                      "staff_id": "36c7b7b9cf044b03",
                      "staff_name": "staff name",
                      "start_time": "2025-08-08T01:56:21.770-05:00",
                      "state": "scheduled",
                      "suggested_times": [],
                      "suggested_times_end": [],
                      "time_zone": "(GMT+02:00) Jerusalem",
                      "title": "Appointment 2",
                      "type": "appointment",
                      "uid": "hh8dbxq9yrqtsbem"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Bookings [Alpha] ",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create Booking",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business_id": {
                  "description": "Business uid",
                  "type": "string"
                },
                "campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "client_id": {
                  "description": "Client uid",
                  "type": "string"
                },
                "event_instance_id": {
                  "description": "Event instance uid. Required for event.",
                  "type": "string"
                },
                "form_data": {
                  "description": "When specifying a service location as either \"Client will set the address at booking\" or \"you will call the client,\" it is required to include the form_data with meeting_interaction_details inside meeting_details",
                  "type": "object"
                },
                "matter_uid": {
                  "description": "Matter uid",
                  "type": "string"
                },
                "portal_id": {
                  "description": "Business uid",
                  "type": "string"
                },
                "service_id": {
                  "description": "Service uid. Required for appointment.",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "staff_id": {
                  "description": "Staff uid. Required for appointment.",
                  "type": "string"
                },
                "start_time": {
                  "description": "ISO 8601 format. Required for appointment.",
                  "type": "string"
                },
                "time_zone": {
                  "description": "Default is set to UTC if not provided",
                  "type": "string"
                }
              },
              "required": [
                "business_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "booking": {
                    "business_id": "e62db14aa58c7675",
                    "client_id": "1kfvtps4a4wlh3lc",
                    "conversation_id": "ugd2qqidl75wrto6",
                    "created_at": "2020-01-19T07:44:21Z",
                    "duration": 60,
                    "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                    "id": "v8mvcenb8y3wej2n",
                    "service_id": "mxmuh2mewjxe9vip",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "start_time": "2020-01-22T13:00:00Z",
                    "status": "scheduled",
                    "time_zone": "UTC",
                    "title": "Imm + free",
                    "type": "appointment/event"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "error text",
                "error_code": "TIMESLOT_UNAVAILABLE/ALREADY_REGISTERED",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Booking [Alpha]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings/cancel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "cancel booking",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "booking_id": {
                  "description": "Booking (appointment/event) uid",
                  "type": "string"
                },
                "business_id": {
                  "description": "Business uid",
                  "type": "string"
                },
                "event_instance_id": {
                  "description": "Event instance uid. Required for event.",
                  "type": "string"
                }
              },
              "required": [
                "business_id",
                "booking_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "booking": {
                    "business_id": "2a244fc4f6edcad7",
                    "client_id": "i1srcak1820zi7yr",
                    "conversation_id": "lcfnf1pag6itpwlf",
                    "created_at": "2020-01-19T07:44:21Z",
                    "duration": 60,
                    "event_instance_id": "a8ma2ephjfvwnvy7 (only for event)",
                    "id": "q85mz0l11b7e0u2j",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "652fe81f2e369b1b",
                    "start_time": "2025-08-07T01:56:21.059-05:00",
                    "status": "cancelled",
                    "time_zone": "UTC",
                    "title": "Imm + free",
                    "type": "appointment/event"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel a Booking [Alpha]",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/bookings/{booking_uid}/update_rsvp_state": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update RSVP state",
        "parameters": [
          {
            "description": "Booking UID",
            "in": "path",
            "name": "booking_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "New RSVP State. 'confirmed' is the only valid option. any other state is forbidden (return 403)",
            "in": "query",
            "name": "new_rsvp_state",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "appointment_type": {
                  "description": "Three types are valid. 'appointment', 'event_instance' or 'event_attendance'",
                  "type": "string"
                },
                "business_id": {
                  "description": "Business UID",
                  "type": "string"
                }
              },
              "required": [
                "business_id",
                "appointment_type"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "booking": {
                    "approval_mode": "immediate",
                    "category_name": null,
                    "charge_type": "no_price",
                    "client_id": "9ni8maitv3m5d46z",
                    "conversation_id": "23pidd58zeesla4j",
                    "currency": "ILS",
                    "depth": "deep",
                    "description": null,
                    "duration": 60,
                    "end_time": "2025-08-07T02:56:22.469-05:00",
                    "image_url": "",
                    "interaction_details": "Denver, CO, USA",
                    "interaction_type": "business_location",
                    "invoice_payment_status_uid": null,
                    "invoices": [],
                    "is_recurring": true,
                    "no_show": false,
                    "notes": "",
                    "payable": false,
                    "payment": null,
                    "payment_id": null,
                    "payment_status": null,
                    "policies": {
                      "cancellation": {
                        "can_cancel": true,
                        "can_cancel_now": true,
                        "time_limit": 0
                      },
                      "meetings": {
                        "meetings_policy": ""
                      },
                      "rescheduling": {
                        "can_reschedule": true,
                        "can_reschedule_now": true,
                        "time_limit": 0
                      }
                    },
                    "price": "0.0",
                    "recurrence_description": "Daily (4 times)",
                    "rsvp_required": false,
                    "rsvp_state": "confirmed",
                    "series_id": "vr40xtqf6qecdbft",
                    "service_id": "om30w1mj75dvvnja",
                    "source_data": {
                      "campaign": null,
                      "channel": null,
                      "id": 1412199,
                      "name": "initiated_by_staff",
                      "website_url": null
                    },
                    "staff_id": "56f088bd289b1c51",
                    "staff_name": "staff name",
                    "start_time": "2025-08-07T01:56:22.469-05:00",
                    "state": "scheduled",
                    "suggested_times": [],
                    "suggested_times_end": [],
                    "time_zone": "(GMT+02:00) Jerusalem",
                    "title": "Service Without Payment",
                    "type": "appointment",
                    "uid": "g90kratlmu1n9w9i"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update RSVP state",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/bookings/{booking_uid}/update_rsvp_state"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/event_attendances/{event_attendance_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Event attendance",
        "parameters": [
          {
            "description": "Event attendance UID",
            "in": "path",
            "name": "event_attendance_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "event_attendance": {
                    "cancelled_by": {},
                    "charge_type": null,
                    "client": {
                      "address": null,
                      "client_type": null,
                      "color_id": 24,
                      "created_at": "2025-08-05T06:56:38.860Z",
                      "created_at_h": "Aug 05",
                      "demo": false,
                      "depth": "shallow",
                      "email": "wesley@baumbach.biz",
                      "first_name": "Clement",
                      "full_name": "Clement Macejkovic",
                      "last_name": "Macejkovic",
                      "phone_to_call": null,
                      "phone_to_display": null,
                      "photo_path": null,
                      "typed_custom_fields": null,
                      "uid": "bw3s8k1q1qfcr1a3"
                    },
                    "conversation_uid": "gjnfyiyt6cdqu7oa",
                    "created_at": "2025-08-05T06:56:39.373Z",
                    "created_at_h": "6:56 am",
                    "currency": null,
                    "description": null,
                    "duration": 30,
                    "event_instance_duration": 30,
                    "event_instance_staff_uid": "51092935d2f5a893",
                    "event_instance_state": "scheduled",
                    "event_instance_uid": "k1q95otq34mj35w1",
                    "event_series_attendance_id": null,
                    "event_service_uid": null,
                    "event_title": "Down-sized hybrid challenge",
                    "first_message_text": null,
                    "id": "wt9x82ydrkxjpgxa",
                    "image_url": "",
                    "matter": {
                      "display_name": null,
                      "uid": "gjnfyiyt6cdqu7oa"
                    },
                    "net_price": "0.0",
                    "no_show": false,
                    "payment": null,
                    "payment_state": "",
                    "payment_status": null,
                    "price": "0.0",
                    "price_h": null,
                    "request_data": null,
                    "rsvp_confirmation_date_h": null,
                    "rsvp_state": null,
                    "source": "initiated_by_staff",
                    "start_time": "2025-08-11T06:00:00.000Z",
                    "start_time_h": "Mon, August 11 at 6:00am",
                    "state_summary": {
                      "actions": [
                        {
                          "name": "invite",
                          "name_h": "translation missing: en.event_attendance.actions.invite"
                        },
                        {
                          "name": "cancel",
                          "name_h": "Cancel"
                        },
                        {
                          "name": "cancel_event",
                          "name_h": "translation missing: en.event_attendance.actions.cancel_event"
                        },
                        {
                          "name": "toggle_no_show",
                          "name_h": "translation missing: en.event_attendance.actions.toggle_no_show"
                        }
                      ],
                      "calendar_state": "translation missing: en.event_attendance.state.confirmed.calendar",
                      "description": "Attendance confirmed",
                      "state": "confirmed",
                      "state_h": "Registered"
                    },
                    "taxes": [],
                    "type": "event",
                    "uid": "wt9x82ydrkxjpgxa"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Event Attendance",
        "tags": [
          "Event Attendances"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/event_attendances/{event_attendance_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/event_instance/{event_instance_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Event Instance Details.",
        "parameters": [

          {
            "description": "The id of the event instance",
            "in": "path",
            "name": "event_instance_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "event_instance": {
                    "charge_type": "paid",
                    "currency": "USD",
                    "duration": 60,
                    "end_time": "2020-06-08T22:00:00.000Z",
                    "interaction_details": "Tel Aviv, Israel",
                    "interaction_type": "business_location",
                    "price": "10.0",
                    "service_id": "d37paicvkb4u8taf",
                    "staff_id": "36ri3mtnk53zpfkc",
                    "start_time": "2020-06-08T21:00:00.000Z",
                    "state": "scheduled",
                    "title": "Event require pay",
                    "uid": "gmy6c6keyo2mmnaa"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Event Instance",
        "tags": [
          "Event Instance"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/event_instance/{event_instance_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/staff": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter only active services or all",
            "in": "query",
            "name": "only_active_services",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by service id",
            "in": "query",
            "name": "service_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter by category id",
            "in": "query",
            "name": "category_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Staff Returned",
            "examples": {
              "application/json": {
                "data": {
                  "staff": [
                    {
                      "active": "true",
                      "deleted": "false",
                      "display_name": "The Last",
                      "first_name": "Adam",
                      "id": "j9c1xh0vzvkr2g0g",
                      "last_name": "Last",
                      "photo_url": "www.google.com",
                      "professional_title": "Professional Title",
                      "role": "admin"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "summary": "Get Staff List [Alpha]",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {},
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/staff/"
        }
      }
    },
    "/scheduling/staff/{staff_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Staff ID",
            "in": "path",
            "name": "staff_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter only active services or all",
            "in": "query",
            "name": "only_active_services",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Staff Returned",
            "examples": {
              "application/json": {
                "data": {
                  "staff": {
                    "active": "true",
                    "deleted": "false",
                    "display_name": "The Last",
                    "first_name": "Adam",
                    "id": "j9c1xh0vzvkr2g0g",
                    "last_name": "Last",
                    "photo_url": "www.google.com",
                    "professional_title": "Professional Title",
                    "role": "admin"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "summary": "Get Staff By ID [Alpha]",
        "tags": [
          "Staff"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.staff_id": "method.request.path.staff_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/staff/{staff_id}"
        }
      }
    },
    "/scheduling/waitlist": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create event Waitlist",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business_id": {
                  "description": "Business Uid",
                  "type": "string"
                },
                "channel": {
                  "description": "Source Channel",
                  "type": "string"
                },
                "client_id": {
                  "description": "Client Uid",
                  "type": "string"
                },
                "event_instance_id": {
                  "description": "Event instance uid. Required for event.",
                  "type": "string"
                },
                "matter_uid": {
                  "description": "Matter Uid",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source Name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "time_zone": {
                  "description": "translation missing: en.waitlist-controller.parameters.time_zone.description",
                  "type": "string"
                }
              },
              "required": [
                "business_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "waitlist": {
                    "client_id": 7203,
                    "created_at": "2021-09-09T10:38:15.962+03:00",
                    "entity_id": 664,
                    "entity_type": "EventInstance",
                    "event_instance_uid": "49rytay9lggliv5f",
                    "initiator": "client",
                    "matter": {
                      "display_name": "AddedClient6",
                      "uid": "rh3bl5x5ksjlikbh"
                    },
                    "source_id": 8012,
                    "spot": 6,
                    "staff_uid": "91g1yq1uzbypf5wx",
                    "start_time_h": "Thu, September 16 at 2:00pm",
                    "state_summary": {
                      "state": "pending",
                      "state_h": "Pending"
                    },
                    "status": "pending",
                    "title": "Demo class / event",
                    "type": "waitlist",
                    "uid": "kqzp5epsr2wr90pn",
                    "where_h": "Modiin, Israel"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Invalid staff",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create event Waitlist",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/waitlist"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/scheduling/waitlist/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Cancel a Waitlist registration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "business_uid": {
                  "description": "Business Uid",
                  "type": "string"
                },
                "client_uid": {
                  "description": "Client Uid",
                  "type": "string"
                },
                "event_instance_uid": {
                  "description": "Event instance uid. Required for event.",
                  "type": "string"
                },
                "matter_uid": {
                  "description": "Matter Uid",
                  "type": "string"
                }
              },
              "required": [
                "business_uid"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "waitlist": {
                    "client_id": 7192,
                    "created_at": "2021-08-24T14:46:42.355Z",
                    "entity_id": 664,
                    "entity_type": "EventInstance",
                    "event_instance_uid": "a8ma2ephjfvwnvy7",
                    "initiator": "client",
                    "matter": {
                      "display_name": "Tatto ",
                      "uid": "4s7p4tecdnq5g9ae"
                    },
                    "source_id": 7945,
                    "spot": 1,
                    "staff_uid": "91g1yq1uzbypf5wx",
                    "start_time_h": "Thu, September 16 at 11:00am",
                    "state_summary": {
                      "state": "cancelled",
                      "state_h": "Cancelled"
                    },
                    "status": "cancelled",
                    "title": "Demo class / event",
                    "type": "waitlist",
                    "uid": "0noit00aqikuq3n8",
                    "where_h": "Modiin, Israel"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel a Waitlist registration",
        "tags": [
          "Bookings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/scheduling/waitlist/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Services List [Alpha]",
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff uids array",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "staff_array",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return only services that have events with future instances",
            "in": "query",
            "name": "has_future_instance",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Including hidden services",
            "in": "query",
            "name": "include_hidden",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Return only services which at least one of the staff of the service is active",
            "in": "query",
            "name": "active_staff_only",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Adding the following fields to response: min_hours_before_meeting , future_bookings_limit, remind_before_in_hours_1, remind_before_in_hours_2, meeting_reminder_sms_1, sms_booking_confirmation, meeting_reminder_sms_2, auto_follow_up_hours, default_staff, order, rwg_eligible, padding, interval",
            "in": "query",
            "name": "extra_decorator_fields",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Return only services containing the provided search_string in their name. Usage: name[contains]=search_string",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return only services with the provided charge_type. Usage: charge_type[in]=free,no_price",
            "in": "query",
            "name": "charge_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Order services by name. Usage: order_by=name",
            "in": "query",
            "name": "order_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "next_page": 1,
                  "services": [
                    {
                      "auto_follow_up_hours": 0.0,
                      "booking_restriction": {
                        "is_client_restricted": true,
                        "restricted_client_statuses": [
                          "lead"
                        ],
                        "restriction_rule_text": "Existing clients only",
                        "uid": "some uid"
                      },
                      "charge_type": "no_price",
                      "currency": "ILS",
                      "default_staff": null,
                      "description": "desc",
                      "duration": 60,
                      "future_bookings_limit": 0,
                      "id": "qp2ggfq6x4sd8evq",
                      "image_path": "",
                      "interaction_type": "business_location",
                      "meeting_reminder_sms_1": true,
                      "meeting_reminder_sms_2": true,
                      "min_hours_before_meeting": 24.0,
                      "name": "In-office appointment",
                      "order": 1000,
                      "padding": 0,
                      "price": 120.0,
                      "remind_before_in_hours_1": 0.25,
                      "remind_before_in_hours_2": 48.0,
                      "rwg_eligible": false,
                      "sms_booking_confirmation": false,
                      "type": "AppointmentService"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/availability": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Multi Services availability [Alpha]",
        "parameters": [
          {
            "description": "Service IDs",
            "in": "query",
            "name": "service_ids",
            "required": false,
            "type": "string"
          },
          {
            "description": "Start date YYYY-MM-DD format",
            "in": "query",
            "name": "start_date",
            "required": true,
            "type": "string"
          },
          {
            "description": "End date YYYY-MM-DD format. Must be greater than the start_date by no more than 31 days",
            "in": "query",
            "name": "end_date",
            "required": true,
            "type": "string"
          },
          {
            "description": "Time zone",
            "in": "query",
            "name": "time_zone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Include DST - When this parameter set to true the response will calculate availability times including dst offset",
            "in": "query",
            "name": "include_dst",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Staff ids array[]",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "staff_ids_array[]",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "availabilities": {
                    "2020-01-20": [
                      {
                        "charge_type": "paid_force",
                        "currency": "USD",
                        "duration_minutes": 30,
                        "event_instance_id": "2gq44zlylgmas8hc (for events only)",
                        "interaction_details": "Tel Aviv, Israel",
                        "interaction_type": "business_location",
                        "price": 3.0,
                        "spots_open": 1,
                        "spots_total": 1,
                        "staff_id": "clmtykygtbu5e34b",
                        "start_time": "2020-01-20T00:00:00-10:00"
                      }
                    ]
                  },
                  "time_zone": "Hawaii"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Multi Services availability [Alpha]",
        "tags": [
          "Availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Service By ID [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Adding the following fields to response: min_hours_before_meeting , future_bookings_limit, remind_before_in_hours_1, remind_before_in_hours_2, meeting_reminder_sms_1, sms_booking_confirmation, meeting_reminder_sms_2, auto_follow_up_hours, default_staff, order, rwg_eligible, padding, interval",
            "in": "query",
            "name": "extra_decorator_fields",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "service": {
                    "booking_restriction": {
                      "is_client_restricted": true,
                      "restricted_client_statuses": [
                        "lead"
                      ],
                      "restriction_rule_text": "Existing clients only",
                      "uid": "some uid"
                    },
                    "charge_type": "free",
                    "currency": "ILS",
                    "description": "Service description",
                    "duration": 120,
                    "id": "j9c1xh0vzvkr2g0g",
                    "image_path": "/path/to/image",
                    "interaction_type": "business_location",
                    "name": "2 hours class",
                    "price": 120.0,
                    "type": "EventService"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service By ID [Alpha]",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}/availability": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Service availability By ID [Alpha]",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Start date YYYY-MM-DD format",
            "in": "query",
            "name": "start_date",
            "required": true,
            "type": "string"
          },
          {
            "description": "End date YYYY-MM-DD format. Must be greater than the start_date by no more than 31 days",
            "in": "query",
            "name": "end_date",
            "required": true,
            "type": "string"
          },
          {
            "description": "Time zone",
            "in": "query",
            "name": "time_zone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Include DST - When this parameter set to true the response will calculate availability times including dst offset",
            "in": "query",
            "name": "include_dst",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Staff ids array[]. \n In case of more than one id, query in URL will appear as: \n staff_ids_array[]=ID1&staff_ids_array[]=ID2",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "staff_ids_array[]",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "availabilities": {
                    "2020-01-20": [
                      {
                        "charge_type": "paid_force",
                        "currency": "USD",
                        "duration_minutes": 30,
                        "event_instance_id": "2gq44zlylgmas8hc (for events only)",
                        "interaction_details": "Tel Aviv, Israel",
                        "interaction_type": "business_location",
                        "price": 3.0,
                        "spots_open": 1,
                        "spots_total": 1,
                        "staff_id": "clmtykygtbu5e34b",
                        "start_time": "2020-01-20T00:00:00-10:00"
                      }
                    ]
                  },
                  "time_zone": "Hawaii"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service availability By ID [Alpha]",
        "tags": [
          "Availability"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of tokens.",
        "parameters": [

          {
            "description": "Application ID",
            "in": "query",
            "name": "app_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Tokens Returned",
            "examples": {
              "application/json": {
                "data": {
                  "tokens": [
                    {
                      "token": "some_token"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get tokens",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "app_id": {
                  "description": "A unique identifier for a 3rd party application. ",
                  "type": "string"
                },
                "business_id": {
                  "description": "A unique identifier for a business.",
                  "type": "string"
                },
                "directory_id": {
                  "description": "A unique identifier for a partner.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Token Created",
            "examples": {
              "application/json": {
                "data": {
                  "token": "some_token"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates a token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens/revoke": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "token": {
                  "description": "Token to revoke",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Token Revoked",
            "examples": {
              "application/json": {
                "data": {
                  "revoked_tokens": [
                    "some_token"
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Revokes a token",
        "tags": [
          "Token Management"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens/revoke"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/subscribe": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "event": {
                  "description": "Object / Event name to subscribe to",
                  "type": "string"
                },
                "target_url": {
                  "description": "Where to send the webhook",
                  "type": "string"
                }
              },
              "required": [
                "target_url",
                "event"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Subscribed"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Subscribe To Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions/platform/subscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/unsubscribe": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "event": {
                  "description": "Object / Event name to unsubscribe from",
                  "type": "string"
                },
                "target_url": {
                  "description": "Where to send the webhook",
                  "type": "string"
                }
              },
              "required": [
                "target_url"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Unsubscribed"
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Unsubscribe from Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions/platform/unsubscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhooks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get appointment",
        "parameters": [

          {
            "description": "Filtering the list of webhooks.\nFilter is a 'deepObject' works with:\n  1. 'entity' - object which listen to event (example: client)\n  2. 'event_type' - type of event to triger hoom (example: created)\n\nExample:\n  <url>?filter[entity]=client&filter[event_type]=created\n",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List webhooks",
            "examples": {
              "application/json": {
                "status": "OK",
                "subscriptions": [
                  {
                    "entity": "client",
                    "event_type": "create",
                    "uid": 32,
                    "url": "https://my.domain.com/path/of/webhook/call"
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "status": {
                  "type": "string"
                },
                "subscriptions": {
                  "items": {
                    "properties": {
                      "entity": {
                        "type": "string"
                      },
                      "event_type": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "target_url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "status",
                "subscriptions"
              ],
              "type": "object"
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Webhooks List",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "platform": "All platform related operations",
        "platform_create": "platform create scope",
        "platform_delete": "platform delete scope",
        "platform_read": "platform read scope",
        "platform_update": "platform update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "platform": "",
        "platform_create": "",
        "platform_delete": "",
        "platform_read": "",
        "platform_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}