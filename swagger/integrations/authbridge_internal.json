{
    "openapi": "3.0.0",
    "info": {
        "title": "AuthBridge Internal API",
        "description": "Internal API for managing IDP users and invitations via the AuthBridge service.",
        "version": "1.0.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "IDP Users",
            "description": "Operations for managing IDP users"
        },
        {
            "name": "Invitations", 
            "description": "Operations for sending invitations to external IDP users"
        }
    ],
    "servers": [
        {
            "url": "https://api.vcita.biz/v3",
            "description": "API Gateway server"
        }
    ],
    "paths": {
        "/authbridge/idp_users/{actor_type}": {
            "post": {
                "summary": "Create an IDP User",
                "description": "Create a user on the IDP using Directory token. Internal API.",
                "tags": ["IDP Users"],
                "parameters": [
                    {
                        "name": "actor_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["business_uid", "role_code", "email", "locale"],
                                "properties": {
                                    "business_uid": {
                                        "type": "string"
                                    },
                                    "role_code": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "locale": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "idp_user_reference_id": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/authbridge/idp_users/{actor_type}/{idp_user_reference_id}": {
            "delete": {
                "summary": "Delete an IDP User",
                "description": "Deletes a user from the IDP. Used when staff creation fails. Internal API.",
                "tags": ["IDP Users"],
                "parameters": [
                    {
                        "name": "actor_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "idp_user_reference_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "description": "User not found",
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/authbridge/idp_actor_mappings/{idp_actor_mappings_uid}/invite": {
            "post": {
                "summary": "Send Invitation to External IDP User",
                "description": "Sends an invitation to an existing external IDP user. Requires pre-existing mapping. Internal API.",
                "tags": ["Invitations"],
                "parameters": [
                    {
                        "name": "idp_actor_mappings_uid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "example": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invitation sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "$ref": "#/components/responses/ErrorResponse"
                    },
                    "404": {
                        "description": "Mapping not found",
                        "$ref": "#/components/responses/ErrorResponse"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "ErrorResponse": {
                "description": "Error response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "code": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "description": "Authentication method using a Bearer token. Include the token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
            }
        }
    }
} 