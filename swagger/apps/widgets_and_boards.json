{
  "openapi": "3.0.0",
  "info": {
    "title": "Widgets And Boards",
    "description": "A set of API endpoints used by the inTandem platform to manage\n       App widgets and staff widgets boards.",
    "version": "3.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://api.vcita.biz/",
      "description": "API Gateway server"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "success",
          "data"
        ]
      },
      "ResponseEntity": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The unique identifier of the setting"
          },
          "business_uid": {
            "type": "string",
            "description": "The unique identifier of the business"
          },
          "staff_uid": {
            "type": "string",
            "description": "The unique identifier of the staff"
          },
          "forwarding_enabled": {
            "type": "string",
            "description": "Whether or not forwarding to the staff is enabled"
          },
          "forward_number": {
            "type": "string",
            "description": "The number to forward to"
          },
          "dedicated_number": {
            "type": "string",
            "description": "The dedicated number"
          },
          "call_forwarding_policy": {
            "type": "string",
            "description": "The call forwarding policy"
          },
          "call_timeout_sec": {
            "type": "number",
            "description": "The call timeout in seconds"
          },
          "external_app_name": {
            "type": "string",
            "description": "The external app name"
          },
          "app_status": {
            "type": "string",
            "description": "The status of the app"
          }
        },
        "required": [
          "uid",
          "business_uid",
          "staff_uid",
          "external_app_name",
          "app_status"
        ]
      },
      "DisplayNameDto": {
        "type": "object",
        "properties": {}
      },
      "WidgetDimentionsDto": {
        "type": "object",
        "properties": {}
      },
      "CustomizedWidgetDimentionsDto": {
        "type": "object",
        "properties": {}
      },
      "ComponentDataDto": {
        "type": "object",
        "properties": {}
      },
      "WidgetRequestDto": {
        "type": "object",
        "properties": {
          "display_name": {
            "description": "The widget display name in different languages",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayNameDto"
              }
            ]
          },
          "dimentions": {
            "description": "The widget dimetions",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetDimentionsDto"
              }
            ]
          },
          "permessions": {
            "type": "string",
            "description": "The permessions required to get this widget"
          },
          "module": {
            "type": "string",
            "description": "The module which this widget belongs to"
          },
          "feature_flags": {
            "type": "string",
            "description": "The feature flags required for this widget, seperated with comma"
          },
          "component_data": {
            "description": "The widget component data, name and config",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDataDto"
              }
            ]
          }
        },
        "required": [
          "display_name",
          "dimentions",
          "component_data"
        ]
      },
      "UpdateWidgetRequestDto": {
        "type": "object",
        "properties": {
          "display_name": {
            "description": "The widget display name in different languages",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisplayNameDto"
              }
            ]
          },
          "config_data": {
            "description": "The widget configuration data",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComponentDataDto"
              }
            ]
          }
        }
      },
      "MultiWidgetsResponse": {
        "type": "object",
        "properties": {
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
            }
          }
        },
        "required": [
          "widgets"
        ]
      },
      "StaffWidgetsBoardRequestDto": {
        "type": "object",
        "properties": {
          "board_layout": {
            "type": "string",
            "description": "The widgets board layout"
          },
          "type": {
            "type": "string",
            "description": "The board type"
          },
          "sections": {
            "description": "The id of the number the call is from",
            "allOf": [
              {
                "$ref": "#/components/schemas/SectionDto"
              }
            ]
          }
        },
        "required": [
          "staff_uid",
          "client_uid",
          "from_number",
          "to_number",
          "direction",
          "status",
          "rate",
          "provider",
          "source_id",
          "external_uuid",
          "business_uid"
        ]
      },
      "MultiStaffWidgetsBoardResponseDto": {
        "type": "object",
        "properties": {
          "staffWidgetsBoards": {
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoard.json"
            }
          }
        },
        "required": [
          "staffWidgetsBoards"
        ]
      },
      "SectionDto": {
        "type": "object",
        "properties": {
          "code_name": {
            "type": "string",
            "description": "The section code name"
          },
          "widgets": {
            "description": "The sections widgets",
            "allOf": [
              {
                "$ref": "#/components/schemas/SectionWidgetDto"
              }
            ]
          }
        },
        "required": [
          "code_name",
          "widgets"
        ]
      },
      "SectionWidgetDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "The widget uid"
          },
          "dimentions": {
            "description": "The sections widgets",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomizedWidgetDimentionsDto"
              }
            ]
          }
        },
        "required": [
          "uid"
        ]
      }
    }
  },
  "paths": {
    "/v3/apps/widgets": {
      "post": {
        "operationId": "Widgets_create",
        "summary": "Create a Widget",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Widget"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "Widgets_getAll",
        "summary": "Get all Widgets",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by a field. Example: filter[created_at][gt]=2019-01-01",
            "required": false,
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/MultiWidgetsResponse"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Widget"
        ],
        "security": [
          {
            "Bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "Widgets_update",
        "summary": "Update Widget",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWidgetRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/widget.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Widgets Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v3/apps/staff_widgets_boards": {
      "post": {
        "operationId": "StaffWidgetsBoard_create",
        "summary": "Create a Staff Widgets Board",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffWidgetsBoardRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/apps/staffWidgetsBoard.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Staff Widgets Board"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "StaffWidgetsBoard_getAll",
        "summary": "Get all Widgets Boards Of The Staff",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number of results.",
            "schema": {
              "minimum": 1,
              "maximum": 10000,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "per_page",
            "required": false,
            "in": "query",
            "description": "How many items to return per page. Max: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "description": "Sort by fields. Example: sort=created_at:asc,updated_at:desc",
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "updated_at:desc",
              "type": "string"
            }
          },
          {
            "description": "Filter by a field. Example: filter[created_at][gt]=2019-01-01, filter[type]=dashboard",
            "required": false,
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Response"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/MultiStaffWidgetsBoardResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Widgets"
        ],
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  }
}