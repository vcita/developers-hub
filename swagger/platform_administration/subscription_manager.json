{
    "openapi": "3.0.0",
    "info": {
      "title": "License",
      "description": "",
      "contact": {},
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://api.vcita.biz"
      }
    ],
    "tags": [
      {
        "name": "subscriptions",
        "description": "Handling subscriptions in inTandem."
      }
    ],
    "components": {
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "description": "Provide a valid bearer token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
        }
      },
      "schemas": {
        "CreateSubscriptionDTO": {
          "type": "object",
          "properties": {
            "purchase_params": {
              "description": "The required parameters to create the subscription",
              "type": "object",
              "properties": {
                "item_uid":{
                  "type": "string",
                  "description": "The product to purchase",
                  "example":"approve"
                },
                "item_type":{
                  "type":"string",
                  "description": "The type of the product. app - an application; Ppackage - the main subscription; one_time_purchase - a consumable such as SMS; staff_slot - an additional seat for a staff member",
                  "enum": [
                    "app",
                    "package",
                    "one_time_purchase",
                    "staff_slot"
                  ],
                  "example":"app"
                },
                "currency":{
                  "type":"string",
                  "description": "The currency used for the purchase",
                  "enum": [
                    "USD",
                    "EUR",
                    "GBP"
                  ],
                  "example":"USD"
                },
                "recurrence":{
                  "type": "string",
                  "description": "The recurring period for this purchase",
                  "enum": [
                    "monthly",
                    "annualy"
                  ],
                  "example":"monthly"
                }
              },
              "required": [
                "item_uid",
                "item_type",
                "currency",
                "recurrence"
              ]
            }
          }
        },
        "SubscriptionDTO":{
          "type":"object",
          "properties": {
            "uid": {
              "type":"string",
              "description": "The unique identifier of the subscription",
              "example":"41eee83a-dba5-459c-b8a8-e6fc309893e5"
            },
            "display_name":{
              "type": "string",
              "description": "The display name of the underlying product",
              "example":"100_sms"
            },
            "purchasable_uid":{
              "type":"string",
              "description": "The unique identifier of the underlying offering",
              "example":"cdeeb972-b151-4aba-8a16-83e1333ada60"
            },
            "buyer_uid":{
              "type": "string",
              "description": "The unique identifier of the staff member that initiated the subscription creation",
              "example":"8rorlwnfkhu63prx"
            },
            "business_uid":{
              "type": "string",
              "description": "The unique identifier of the business that uses the subscription",
              "example":"ato1v21vej20krqm"
            },
            "purchase_currency": {
              "type": "string",
              "description": "The type of currency used for the purchase",
              "enum": [
                "USD",
                "GBP",
                "EUR"
              ],
              "example":"USD"
            },
            "purchase_price": {
              "type": "number",
              "description":"the cost of the underlying product",
              "example":8.00
            },
            "purchase_state": {
              "type":"string",
              "description": "The state of the subscription",
              "enum": [
                "purchased",
                "suspended",
                "expired",
                "canceled"
              ],
              "example":"canceled"
            },
            "cancellation_date": {
              "type":"string",
              "format": "date-time",
              "description": "The date and time when the cancellation of the subscription was requested.",
              "example":"2024-03-31T10:16:28.000Z"
            },
            "expiration_date":{
              "type": "string",
              "format":"date-time",
              "description": "The date the subscription expired",
              "example":null
            },
            "updated_at": {
              "type":"string",
              "format": "date-time",
              "description": "The date and time of last update.",
              "example":"2024-03-31T10:16:28.000Z"
            },
            "created_at":{
              "type":"string",
              "format": "date-time",
              "description": "The date and time when the subscription was created.",
              "example":"2024-03-15T10:16:28.000Z"
            },
            "payment_type":{
              "type": "string",
              "description": "The subscription payment type",
              "enum": [
                "monthly",
                "annualy",
                "free",
                "bundled",
                "single_charge"
              ]
            },
            "bundled_from_subscription_uid": {
              "type": "string",
              "description": "The unique identifier of the bundling subscription",
              "example":null
            },
            "is_active":{
              "title": "boolean",
              "description": "A calculated property that indicates whether or not this subscription is active"
            }
          }
        },  
        "SubscriptionList": {
          "type": "object",
          "properties": {
            "subscriptions": {
              "description": "List of Subscriptions",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubscriptionDTO"
              }
            }
          }
        },
        "PurchasableDTO":{
          "type": "object",
          "properties": {
            "uid": {
              "type": "string",
              "description": "The unique identifier of the purchasable",
              "example":"0313a904-7d05-4ecf-a3e1-06f2eaaef57e"
            },
            "display_name": {
              "type": "string",
              "description": "The name of the underlying product",
              "example":"my app"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "example":"2024-04-21T15:15:09.000Z"
            },
            "created_at":{
              "type": "string",
              "format": "date-time",
              "example":"2024-04-21T15:15:09.000Z"
            },
            "item_type":{
              "type": "string",
              "description": "The type of the underlying product. Can be package, app, SMS",
              "example":"app"
            } ,
            "item_uid": {
              "type": "string",
              "description": "The underlying product's SKU",
              "example":"my_app"
            },
            "prices":{
              "type": "array",
              "description": "The available pricing model for the purchasable",
              "items":{
                "type": "object",
                "properties":{
                  "price":{
                    "type": "number",
                    "description" :"The product's price in a specific currency",
                    "example":9.5
                  },
                  "currency":{
                    "type": "string",
                    "description": "The currency used for the price",
                    "enum":[
                      "USD", 
                      "EUR", 
                      "GBP"
                    ],
                    "example":"EUR"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "Defines the billing cycle period.",
                    "enum":[
                      "monthly", 
                      "annualy", 
                      "free", 
                      "single_charge"
                    ]
                  }
                }
              }
            }
          }
        },
        "PurchasableList": {
          "type": "object",
          "properties": {
            "subscriptions": {
              "description": "List of Purchasables",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PurchasableDTO"
              }
            }
          }
        }
      }
    },
    "paths": {
      "/business/subscriptionsmng/v1/subscriptions": {
        "get": {
          "summary": "List all Subscriptions",
          "parameters": [
            {
              "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
              "in": "header",
              "name": "Authorization",
              "required": true,
              "schema":{
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number of the results."
            },
            {
              "in": "query",
              "name": "per_page",
              "schema": {
                "type": "integer",
                "default": 25,
                "maximum": 100
              },
              "description": "How many items to return per page."
            },
            {
              "in": "query",
              "name": "sort",
              "schema": {
                "type": "string",
                "default": "updated_at:desc"
              },
              "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\"."
            },
            {
              "in": "query",
              "name": "filter",
              "schema": {
                "type": "string"
              },
              "description": "Use LHS barckets to filter\n\nSupported fields: **created_at, updated_at**\n",
              "example": "filter[created][lte]=2020-01-01&filter[created][gte]=2019-01-01&filter[name][contains]=joh"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of subscriptions.",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "object",
                            "$ref": "#/components/schemas/SubscriptionList"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "tags": [
            "Subscription"
          ],
          "description": "List all Subscriptions in scope.\n\nAvailable for **directory, staff, and app tokens**\n **DEPREACTED - END-OF-LIFE ON MARCH 2025**"
        }
      },
      "/system/subscriptions/manual": {
        "post": {
          "parameters": [
            {
              "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
              "in": "header",
              "name": "Authorization",
              "required": true,
              "schema":{
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionDTO"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                      }
                    ]
                  }
                }
              }
            }
          },
          "summary": "Create a Subscription",
          "description": "Create a new subscription for a business.\n\nAvailable for **Staff Tokens**\n **DEPREACTED - END-OF-LIFE ON MARCH 2025**",
          "security": [
            {
              "Bearer": []
            }
          ],
          "tags": [
            "Subscription"
          ]
        }
      },
      "/business/subscriptionsmng/v1/subscriptions/{Subscription_uid}":{
        "put": {
          "summary": "Update a Subscription",
          "parameters": [
            { 
              "name": "Subscription_uid",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
              "in": "header",
              "name": "Authorization",
              "required": true,
              "schema":{
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "subscription": {
                        "type": "object",
                        "properties": {
                          "purchase_state":{
                            "type": "string",
                            "description": "The updated state of the subscription. canceled (together with future expiration_date) - the business requested to cancel the subscription at the end of the billing cycle. Expired - The subscription is fully expired",
                            "enum": [
                              "canceled",
                              "expired"
                            ]
                          },
                          "expiration_date":{
                            "type": "string",
                            "description": "The date to expire the subscription",
                            "format": "date-time"
                          }
                        },
                        "description": "Cancel or completely expire a subscription"
                    }       
                }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Subscription updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SubscriptionDTO"
                  }
                }
              }
            }
          },
          "description" : "Update the subscription with a new purchase state and expiration date.\n\nAvailable for **Staff Tokens**\n **DEPREACTED - END-OF-LIFE ON MARCH 2025**",
          "security": [
            {
              "Bearer": []
            }
          ],
          "tags" : [ "Subscription" ]
        }
      },
      "/business/subscriptionsmng/v1/purchasables": {
        "get": {
          "summary": "List all Purchasables",
          "parameters": [
            {
              "description": "API Token. The resulting header should look like this: 'Authorization: \"Bearer API_TOKEN\"'",
              "in": "header",
              "name": "Authorization",
              "required": true,
              "schema":{
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer",
                "default": 1
              },
              "description": "Page number of the results."
            },
            {
              "in": "query",
              "name": "per_page",
              "schema": {
                "type": "integer",
                "default": 25,
                "maximum": 100
              },
              "description": "How many items to return per page."
            },
            {
              "in": "query",
              "name": "sort",
              "schema": {
                "type": "string",
                "default": "updated_at:desc"
              },
              "description": "Sort by fields, e.g., \"created_at:asc,updated_at:desc\"."
            },
            {
              "in": "query",
              "name": "filter",
              "schema": {
                "type": "string"
              },
              "description": "Use LHS barckets to filter\n\nSupported fields: **created_at, updated_at**\n",
              "example": "filter[created][lte]=2020-01-01&filter[created][gte]=2019-01-01&filter[name][contains]=joh"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of Purchasables.",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "object",
                            "$ref": "#/components/schemas/PurchasableList"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "tags": [
            "Purchasable"
          ],
          "description": "List all Purchasables in scope.\n\nAvailable for **directory, staff, and app tokens**\n **DEPREACTED - END-OF-LIFE ON MARCH 2025**"
        }
      }
    }
  }