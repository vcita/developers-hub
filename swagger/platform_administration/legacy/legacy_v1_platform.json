{
  "basePath": "/platform/v1",
  "host": "api.vcita.biz",
  "info": {
    "title": "Platform Administration Legacy API v1",
    "version": "v1.0",
    "description": "Legacy v1 Platform API endpoints for platform administration domain including businesses, staff, tokens, webhooks, categories, fields, forms, and directory management"
  },
  "paths": {
    "/businesses": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Search for a business by external_reference_id or email. A filter is required for the API to return a result.",
        "parameters": [
          {
            "description": "Filter by email specified",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter by \"external_id\" specified. **Deprecate**. This will still work, but for new implementation please use external_reference_id.",
            "in": "query",
            "name": "external_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Filter by \"external_reference_id\" specified",
            "in": "query",
            "name": "external_reference_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business ID Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "businesses": [
                    "a123b456c789"
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Search Businesses",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses?email={email}"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Business.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "admin_account": {
                  "properties": {
                    "country_name": {
                      "description": "Business's Country. Must be a valid country name",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "Owner's display name. Up to 255 characters, no HTML tags, no new lines (if not provided, FIRST NAME + LAST NAME will be used)",
                      "type": "string"
                    },
                    "email": {
                      "description": "Owner's email, also used as the business's main email",
                      "type": "string"
                    },
                    "first_name": {
                      "description": "Owner's first name. Up to 255 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "language": {
                      "default": "en",
                      "description": "One of en,es,fr,it,pt,de,pl,nl,en-GB. Default determined by Directory",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "Owner's last name. Up to 255 characters, no HTML tags, no new lines",
                      "type": "string"
                    },
                    "password": {
                      "description": "Owner's password. 6-20 characters",
                      "type": "string"
                    },
                    "phone": {
                      "description": "Business phone number. Up to 20 characters",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                },
                "business": {
                  "properties": {
                    "address": {
                      "description": "Business address. Up to 255 characters, no HTML tags",
                      "type": "string"
                    },
                    "business_category": {
                      "description": "The business main occupation. Must be a valid business category",
                      "type": "string"
                    },
                    "business_maturity_in_years": {
                      "description": "Business maturity in years. Valid value is one of [null, 0, 0.5, 0.5-2, 2+]",
                      "type": "string"
                    },
                    "country_name": {
                      "description": "The business registered country",
                      "type": "string"
                    },
                    "hide_address": {
                      "default": true,
                      "description": "Whether to show the business address to clients",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Business name. Up to 100 characters, no HTML tags, no new lines",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business Created",
            "examples": {
              "application/json": {
                "data": {
                  "admin_account": {
                    "country_name": "United States",
                    "display_name": "DName",
                    "email": "adminemail@email.com",
                    "first_name": "FName",
                    "language": "en",
                    "last_name": "LName",
                    "phone": "+154863488",
                    "staff_uid": "aaa1234567890abcdef",
                    "user_id": "11111"
                  },
                  "business": {
                    "business_category": "aeroclub",
                    "business_maturity_in_years": "0.5",
                    "country_name": "United States",
                    "id": "1a123b456c789",
                    "landing_page": "Homepage",
                    "name": "Business name",
                    "short_description": "My business description"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/validate_login": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Validates username/password credentials for login. The API will be blocked for the username after 5 failed attempts.",
        "parameters": [
          {
            "description": "Email",
            "in": "query",
            "name": "username",
            "required": true,
            "type": "string"
          },
          {
            "description": "Password",
            "in": "query",
            "name": "password",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login Validated",
            "examples": {
              "application/json": {
                "data": {
                  "authenticated": true
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Login",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/businesses/verify_audience_claim": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This API performs entitlement verification for businesses seeking to register with a specific partner. It checks if a business meets the necessary criteria to qualify for partnership enrollment.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "unique_validation_identifier": {
                  "description": "The future business' unique validation identifier",
                  "type": "object"
                }
              },
              "required": [
                "unique_validation_identifier"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Claim validated",
            "examples": {
              "application/json": {
                "data": true,
                "success": true
              }
            }
          }
        },
        "summary": "Verify Audience Claim",
        "tags": [
          "Business"
        ]
      }
    },
    "/businesses/{business_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Business ID",
            "in": "path",
            "name": "business_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Business Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "business": {
                    "admin_account": {
                      "country_name": "United States",
                      "display_name": "DName",
                      "email": "adminemail@email.com",
                      "first_name": "FName",
                      "language": "en",
                      "last_name": "LName",
                      "phone": "+154863488",
                      "staff_uid": "aaa1234567890abcdef",
                      "user_id": "11111"
                    },
                    "business": {
                      "business_category": "aeroclub",
                      "country_name": "United States",
                      "id": "1a123b456c789",
                      "name": "Business name"
                    }
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Business",
        "tags": [
          "Business"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/businesses/{business_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/directory/branding": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get Directory's branding including logo url and colors",
        "parameters": [
          {
            "description": "Whitelabel host name",
            "in": "query",
            "name": "host",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "colors": {
                    "primary": "#374766",
                    "secondary": "#39c190",
                    "text": "#ffffff"
                  },
                  "logo": "https://logo.url/path_to.jpg",
                  "name": "Directory name",
                  "uid": "aaaabbbb"
                },
                "success": true
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Gets Directory's branding",
        "tags": [
          "Directory"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/directory/branding"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get categories list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "categories": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Categories List",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/categories/{category_id}/services": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get services for a category",
        "parameters": [
          {
            "description": "Category ID",
            "in": "path",
            "name": "category_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "services": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Category Services",
        "tags": [
          "Categories"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/categories/{category_id}/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get custom fields list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "fields": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Fields List",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/fields/{field_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get specific field details",
        "parameters": [
          {
            "description": "Field ID",
            "in": "path",
            "name": "field_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "field": {}
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Field Details",
        "tags": [
          "Fields"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/fields/{field_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/forms": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get forms list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "forms": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Forms List",
        "tags": [
          "Forms"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/forms"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get tokens list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "tokens": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Tokens List",
        "tags": [
          "Tokens"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/tokens/revoke": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Revoke token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "token": {
                  "description": "Token to revoke",
                  "type": "string"
                }
              },
              "required": [
                "token"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "revoked": true
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Revoke Token",
        "tags": [
          "Tokens"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/tokens/revoke"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/subscribe": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Subscribe to webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "entity": {
                  "description": "Entity to subscribe to (e.g. client, appointment)",
                  "type": "string"
                },
                "event_type": {
                  "description": "Event type (e.g. created, updated, deleted)",
                  "type": "string"
                },
                "url": {
                  "description": "Webhook URL",
                  "type": "string"
                }
              },
              "required": [
                "entity",
                "event_type",
                "url"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "subscription_id": "12345"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Subscribe to Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/webhook/subscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhook/unsubscribe": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Unsubscribe from webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "subscription_id": {
                  "description": "Subscription ID to unsubscribe",
                  "type": "string"
                }
              },
              "required": [
                "subscription_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "unsubscribed": true
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Unsubscribe from Webhook",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/webhook/unsubscribe"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/webhooks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get webhooks list",
        "parameters": [
          {
            "description": "Filtering the list of webhooks.\nFilter is a 'deepObject' works with:\n  1. 'entity' - object which listen to event (example: client)\n  2. 'event_type' - type of event to triger hoom (example: created)\n\nExample:\n  <url>?filter[entity]=client&filter[event_type]=created\n",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List webhooks",
            "examples": {
              "application/json": {
                "status": "OK",
                "subscriptions": [
                  {
                    "entity": "client",
                    "event_type": "create",
                    "uid": 32,
                    "url": "https://my.domain.com/path/of/webhook/call"
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "status": {
                  "type": "string"
                },
                "subscriptions": {
                  "items": {
                    "properties": {
                      "entity": {
                        "type": "string"
                      },
                      "event_type": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "target_url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "status",
                "subscriptions"
              ],
              "type": "object"
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Webhooks List",
        "tags": [
          "Webhooks"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///v1/subscriptions"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "platform": "All platform related operations",
        "platform_create": "platform create scope",
        "platform_delete": "platform delete scope",
        "platform_read": "platform read scope",
        "platform_update": "platform update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "platform": "",
        "platform_create": "",
        "platform_delete": "",
        "platform_read": "",
        "platform_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}
