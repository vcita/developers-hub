{
  "openapi": "3.0.0",
  "info": {
    "title": "AI Recommendation API",
    "version": "1.0.0",
    "description": "API for managing AI Recommendations and Recommended Actions"
  },
  "servers": [
    {
        "url": "https://api.vcita.biz",
        "description": "API Gateway server"
    }
],
  "paths": {

    "/v3/ai/ai_recommendations": {
      "get": {
        "tags": ["AI Recommendations"],
        "summary": "Get all AIRecommendations",
        "description": "Retrieve a list of AIRecommendations with optional filtering by status, target, and context. **Available for Staff tokens**",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by recommendation status."
          },
          {
            "name": "target",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by target actor UID."
          },
          {
            "name": "context",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by context UID."
          },
          {
            "name": "recommendation_type",
            "in": "query",
            "schema": { "type": "string" ,"enum": ["schedule","estimate","matter_next_best_action" ]},
            "description": "Filter by recommendation type."       
          }
        ],
        "responses": {
          "200": {
            "description": "A list of AIRecommendations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/AIRecommendationList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["AI Recommendations"],
        "summary": "Create an AIRecommendation",
        "description": "Create a new AIRecommendation. **Available for Staff tokens**",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AIRecommendationRequest" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AIRecommendation created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {              
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendation.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v3/ai/ai_recommendations/{uid}": {
      "get": {
        "tags": ["AI Recommendations"],
        "summary": "Get an AIRecommendation",
        "description": "Retrieve a specific AIRecommendation by UID. **Available for Staff tokens**",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "AIRecommendation retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendation.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["AI Recommendations"],
        "summary": "Update an AIRecommendation",
        "description": "Update an existing AIRecommendation by UID. **Available for Staff tokens**",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AIRecommendationUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AIRecommendation updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendation.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v3/ai/ai_recommended_actions/{uid}": {
      "get": {
        "tags": ["AI Recommended Actions"],
        "summary": "Retrieve an AIRecommendedAction",
        "description": "Retrieve a specific AIRecommendedAction by UID. **Available for Staff tokens**",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "AIRecommendedAction retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendedAction.json"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Authentication method using a Bearer token. Include the token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
      }
    },
    "schemas": {
      "AIRecommendationRequest": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "A list of recommended actions related to this entity.",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendedAction.json"
            }
          },
          "display": {
            "type": "object",
            "description": "Contains display-related information for the recommendation.",
            "properties": {
              "title": {
                "type": "string",
                "description": "A human-readable title describing the recommendation."
              }
            }
          },
          "context": {
            "type": "object",
            "description": "The context in which the recommendation was generated.",
            "properties": {
              "context_uid": {
                "type": "string",
                "description": "A unique identifier for the context associated with this recommendation."
                
              },
              "context_type": {
                "type": "string",
                "description": "The type of context (e.g., 'user_message', 'booking_request').",
                "enum": ["matter","client", "business"]
                
              
              }
            }
          },
          "target": {
            "type": "object",
            "description": "The target entity for this recommendation, typically representing the user or business involved.",
            "properties": {
              "target_actor_uid": {
                "type": "string",
                "description": "A unique identifier for the target actor (e.g., a user or business)."
              },
              "target_actor_type": {
                "type": "string",
                "description": "The type of target actor (e.g., 'customer', 'business').",
              "enum": ["staff", "directory"]
              }
            }
          },
          "recommendation_type": {
            "type": "string",
            "description": "The type of recommendation. Possible values:\n- 'client_incoming_message': A recommendation based on a client's incoming_message.\n- 'insight': A recommendation to consider a specific insight or observation.",
            "enum": ["booking", "payment"]
          },
          "status": {
            "type": "object",
            "properties":{
                "dismissed": {
                    "type": "boolean",
                    "description": "Indicates whether the recommendation has been dismissed."
                },
                "dismissed_source_type": {
                    "type": "string",
                    "enum": ["user",  "system"]
                }
            }
          }
        },
        "required": ["user_description", "staff_uid", "sources", "actions"]
      },
      "AIRecommendationUpdateRequest": {
        "type": "object",
        "properties": {
          "status": { "type": "object",
          "properties": {
            "dismissed": {
                "type": "boolean",
                "description": "Indicates whether the recommendation has been dismissed."
            },
            "dismissed_source_type": {
                "type": "string",
                "enum": ["user",  "system"]
            }
          }
           }
        }
      },
      "AIRecommendationList":{
        "type": "object",
            "properties": {
                "airecommendations": {
                    "description": "List of Coupons",
                    "type": "array",
                    "items": {
                        "$ref": "https://vcita.github.io/developers-hub/entities/ai/AIRecommendation.json"
                    }
                }
            }
      }
    }
  }
}
