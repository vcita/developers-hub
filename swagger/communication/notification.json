{
  "openapi": "3.0.0",
  "info": {
    "title": "Notification API",
    "description": "API for managing notifications to staff members",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "API Gateway server"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Provide a valid bearer token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
      }
    },
    "schemas": {
      "NotificationCreate": {
        "type": "object",
        "required": [
          "staff_uid",
          "notification_code_name"
        ],
        "properties": {
          "staff_uid": {
            "type": "string",
            "description": "The unique identifier of the staff member associated with this notification."
          },
          "notification_code_name": {
            "type": "string",
            "description": "The code name identifying the type of notification."
          },
          "locale": {
            "type": "string",
            "description": "The language locale for the notification content.",
            "enum": ["en", "fr", "de", "it", "pl", "pt", "es", "nl", "he", "sl", "en_gb"],
            "default": "en"
          },
          "params": {
            "type": "object",
            "description": "Additional parameters for populating notification templates.",
            "properties": {
              "param1": {
                "type": "string",
                "description": "First notification parameter."
              },
              "param2": {
                "type": "string",
                "description": "Second notification parameter."
              }
            },
            "additionalProperties": true
          }
        }
      },
      "NotificationUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The updated status of the notification.",
            "enum": ["pending", "sent", "read", "failed", "cancelled"]
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the API request was successful",
            "example": true
          },
          "data": {
            "type": "object",
            "$ref": "https://vcita.github.io/developers-hub/entities/communication/notification.json",
            "description": "The notification entity data"
          }
        }
      }
    }
  },
  "paths": {
    "/v3/communication/notifications": {
      "post": {
        "summary": "Create a notification",
        "description": "Create a new notification for a staff member",
        "tags": ["Notification"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreate"
              },
              "example": {
                "staff_uid": "staff-67890",
                "notification_code_name": "new_appointment_created",
                "locale": "en",
                "params": {
                  "param1": "John Doe",
                  "param2": "2023-05-15T14:30:00Z"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/v3/communication/notifications/{uid}": {
      "get": {
        "summary": "Retrieve a notification",
        "description": "Retrieve a notification by its unique identifier",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the notification",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notification not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a notification",
        "description": "Update a notification status by its unique identifier",
        "tags": ["Notification"],
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the notification",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationUpdate"
              },
              "example": {
                "status": "read"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notification not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  }
} 