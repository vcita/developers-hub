{
  "basePath": "/platform/v1",
  "host": "api.vcita.biz",
  "info": {
    "title": "Clients Legacy API v1",
    "version": "v1.0",
    "description": "Legacy v1 Platform API endpoints for clients domain"
  },
  "paths": {
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of clients or search by client attributes.",
        "parameters": [
          {
            "description": "Search Term",
            "in": "query",
            "name": "search_term",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search By - email/uid/phone/updated_at",
            "in": "query",
            "name": "search_by",
            "required": false,
            "type": "string"
          },
          {
            "description": "Specify the updated_at filter range, available operators for updated_at: gte, lte. example: updated_at[gte]=2019-01-01",
            "in": "query",
            "name": "updated_at",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "clients": [
                    {
                      "address": "My Hourse, bellvue, seattle, wasinton",
                      "business_uid": "b1ed52cb3c5a6f87",
                      "campaign": "Source Campaign",
                      "channel": "Source Channel",
                      "created_at": "2025-08-05T06:56:27Z",
                      "custom_field1": "value1",
                      "custom_field2": "value2",
                      "custom_field3": "value3",
                      "customer_status": "lead",
                      "email": "clientemail@mail.com",
                      "first_name": "First Name",
                      "id": "czpvt3f246p4cw9i",
                      "last_name": "Last Name",
                      "mobile_phone": "+16378383489",
                      "normalized_phone": null,
                      "opt_in": "1",
                      "source": "Client Portal",
                      "source_url": "Source URL",
                      "tags": [],
                      "updated_at": "2025-08-05T06:56:27Z"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Clients",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Client and returns the new client's data and the client's JWT token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Address",
                  "type": "string"
                },
                "custom_field1": {
                  "description": "Custom Field 1",
                  "type": "string"
                },
                "custom_field2": {
                  "description": "Custom Field 2",
                  "type": "string"
                },
                "custom_field3": {
                  "description": "Custom Field 3",
                  "type": "string"
                },
                "email": {
                  "description": "Email Address",
                  "type": "string"
                },
                "first_name": {
                  "description": "First Name",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last Name",
                  "type": "string"
                },
                "opt_in_transactional_sms": {
                  "description": "Whether the client opts in to receive transactional SMS messages.",
                  "type": "boolean"
                },
                "phone": {
                  "description": "Phone Number",
                  "type": "string"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "staff_id": {
                  "description": "Staff ID",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business",
                  "type": "string"
                },
                "tags": {
                  "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "Some big house in Hollywood 9",
                    "created_at": "2025-08-05T06:56:28Z",
                    "customer_status": "customer",
                    "email": "michael.douglass@spartacus.info.fake",
                    "first_name": "Michael",
                    "id": "fgrayekkrmqfzt7d",
                    "last_name": "Douglas",
                    "mobile_phone": "+19083073848",
                    "opt_in": null,
                    "source_data": {
                      "campaign": "campaign",
                      "channel": "channel",
                      "name": "website",
                      "website_url": "www.somesite.com"
                    },
                    "spam": false,
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "updated_at": "2025-08-05T06:56:28Z"
                  },
                  "token": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdHlfdWlkIjoiZmdyYXlla2tybXFmenQ3ZCIsImV4dHJhIjp7ImJ1c2luZXNzX3VpZCI6ImIxZWQ1MmNiM2M1YTZmODcifSwiZXhwIjoxNzU2Nzk2MTg4LCJyZWZyZXNoIjoxNzU2Nzc2OTg4LCJjcmVhdGVkIjoxNzU0Mzc2OTg4LCJ0eXBlIjoiY2xpZW50IiwianRpIjoiZWQxNGY0MWViY2RlZGU1ODEyYjFkY2ZiZDBkMDE3MmI5ZThjODlhNGRlM2UzYmU1OTIyNGE4OWFmMmQ2OWU2NyJ9.D0OMzkIJ4sPAYuAduQxPRnu9_ScVCK-9Td1eROv8eSM"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/merge_clients": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Merge two or more duplicate clients into one primary client. The request body can be empty but must be sent.",
        "parameters": [
          {
            "description": "UID of the destination primary client.",
            "in": "query",
            "name": "to_client_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "UIDs of all the clients to be merged into the to_client_uid, comma separated",
            "in": "query",
            "name": "from_client_uids",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "The request body. It can be empty but must still be sent.",
              "properties": {},
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Merge duplicate clients into a primary client.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/merge_clients"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/merges/possible_merge_master": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Returns a list of client UIDs that can be used as a primary client for the merge.",
        "parameters": [
          {
            "description": "List of client uids, comma separated",
            "in": "query",
            "name": "client_ids",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "master_ids": [
                  "80g6241rk3zldz2h",
                  "06h6m891ub6d2rx3"
                ],
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "List of clients that can be used as primary for merge.",
        "tags": [
          "Matters"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/merges/possible_merge_master"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/update_usage": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_status_id": {
                  "description": "Payment status ID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package updated by client",
            "examples": {
              "application/json": {
                "data": {
                  "package_name": "Package Name"
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/payment/client_packages/validate": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Payment status ID",
            "in": "query",
            "name": "payment_status_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Validation Occurred",
            "examples": {
              "application/json": {
                "data": {
                  "has_package": true
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Client Package has redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/validate"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Deletes a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "campaign": "Source Campaign",
                    "channel": "Source Channel",
                    "created_at": "2025-08-05T06:56:27Z",
                    "custom_field1": "value1",
                    "custom_field2": "value2",
                    "custom_field3": "value3",
                    "customer_status": "inactive",
                    "email": "clientemail@mail.com.dczpvt3f246p4cw9i",
                    "first_name": "First Name",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "matter_term": "clients",
                    "matters": [],
                    "mobile_phone": "+16378383489",
                    "normalized_phone": null,
                    "opt_in": "1",
                    "source": "Client Portal",
                    "source_url": "Source URL",
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:28Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Deletes a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Retrieves a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "campaign": "Source Campaign",
                    "channel": "Source Channel",
                    "created_at": "2025-08-05T06:56:27Z",
                    "custom_field1": "value1",
                    "custom_field2": "value2",
                    "custom_field3": "value3",
                    "customer_status": "lead",
                    "email": "clientemail@mail.com",
                    "first_name": "First Name",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "matter_term": "clients",
                    "matters": [
                      {
                        "display_name": "First Name Last Name",
                        "fields": [],
                        "uid": "eb28o6g7ad6q2ya8"
                      }
                    ],
                    "mobile_phone": "+16378383489",
                    "normalized_phone": null,
                    "opt_in": "1",
                    "source": "Client Portal",
                    "source_url": "Source URL",
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:27Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Retrieves a Client by Id",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a Client.",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Address. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                  "type": "string"
                },
                "created_at": {
                  "description": "Client creation date",
                  "type": "string"
                },
                "custom_field1": {
                  "description": "Custom Field 1",
                  "type": "string"
                },
                "custom_field2": {
                  "description": "Custom Field 2",
                  "type": "string"
                },
                "custom_field3": {
                  "description": "Custom Field 3",
                  "type": "string"
                },
                "email": {
                  "description": "Email Address",
                  "type": "string"
                },
                "first_name": {
                  "description": "First Name",
                  "type": "string"
                },
                "force_nullifying": {
                  "description": "If true, allows address and mobile_phone to be overridden with `null` or `\"\"`.",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last Name",
                  "type": "string"
                },
                "mobile_phone": {
                  "description": "Phone Number. Send `null` or `\"\"` to clear this field if force_nullifying is true.",
                  "type": "string"
                },
                "phone": {
                  "description": "Phone Number",
                  "type": "string"
                },
                "spam": {
                  "description": "Client marked as spam",
                  "type": "boolean"
                },
                "staff_id": {
                  "description": "Staff ID",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business",
                  "type": "string"
                },
                "tags": {
                  "description": "The tag system is based on customized labels that you create, so you can sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                },
                "updated_at": {
                  "description": "Client last update date",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "client": {
                    "address": "My Hourse, bellvue, seattle, wasinton",
                    "created_at": "2025-08-05T06:56:27Z",
                    "customer_status": "lead",
                    "email": "clientemail@mail.com",
                    "first_name": "NEWFIRSTNAME",
                    "id": "czpvt3f246p4cw9i",
                    "last_name": "Last Name",
                    "mobile_phone": "+16378383489",
                    "opt_in": "1",
                    "spam": false,
                    "tags": [],
                    "updated_at": "2025-08-05T06:56:28Z"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Updates a Client",
        "tags": [
          "Clients"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/conversations": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of conversations for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "conversations": [
                    {
                      "business_id": "2f27ca024eb96133",
                      "business_unread": false,
                      "client_id": "od0tuoli2prraw3y",
                      "client_unread": false,
                      "created_at": "2025-08-05T06:56:33.583Z",
                      "deep_link": "/app/conversations/uuk21b7xv53er6zq",
                      "id": "uuk21b7xv53er6zq",
                      "last_business_action": "",
                      "last_client_action": null,
                      "staff_id": "6ad7601fd821c8d2",
                      "title": null,
                      "updated_at": "2025-08-05T06:56:33.583Z"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Conversations For A Client",
        "tags": [
          "Conversations"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/conversations"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/documents": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of documents for a client",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "documents": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Documents For A Client",
        "tags": [
          "Documents"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/documents"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/estimates": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }

        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Estimates Returned",
            "examples": {
              "application/json": {
                "data": {
                  "estimates": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "amount": 8.8,
                      "client_address": "Lombard St, San Francisco, CA",
                      "client_id": "kf9d91uh82bclson",
                      "client_name": "Alice Smith",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "estimate_date": "2018-06-14",
                      "estimate_number": "1",
                      "id": "aaabbbccc112233",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Estimate for your service",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d34uh92bclwzg",
                      "status": "draft/issued/approved/rejected/invoiced",
                      "title": "Estimate title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates Of Client",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/invoices": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoices": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "allow_online_payment": true,
                      "amount": 8.8,
                      "client_id": "aaabbbccc112233",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "id": "aaabbbccc112233",
                      "invoice_number": "6",
                      "issued_at": "2018-06-14",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Invoice for your service",
                      "payment_balance": 5.0,
                      "payment_state": "pending",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d91uh92bclwzg",
                      "status": "issued/draft",
                      "title": "Invoice Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices Of Client",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payment/client_packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Client ID",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },

          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client Packages Returned",
            "examples": {
              "application/json": {
                "data": {
                  "client_packages": [
                    {
                      "active": "true",
                      "amount": 100.0,
                      "booking_credits": [
                        {
                          "bookings_usage": "0",
                          "credit_items": [
                            {
                              "bookings_usage": 0,
                              "item_id": "mzuk2kkt7vjnxdwo",
                              "item_type": "SERVICE"
                            }
                          ],
                          "id": "vu1rovse0166a9d9",
                          "total_bookings": "10"
                        }
                      ],
                      "bookings_usage": "0",
                      "business_id": "vqzqruk6nyclxpp6",
                      "client_id": "9yxsdkr1hdjtocpv",
                      "conversation_id": "war7ow99zh14qlty",
                      "created_at": "2020-06-01T21:05:00.562Z",
                      "currency": "USD",
                      "id": "m73jkvg4bf2z71b2",
                      "image_path": "",
                      "name": "Music Lessons",
                      "package_id": "v2fvy50p8gjuvnvb",
                      "payment_status_id": "6v5ybwkavv0z9hff",
                      "payment_status_state": "pending",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "name": "product1_name",
                          "quantity": 2
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "name": "product2_name",
                          "quantity": 4
                        }
                      ],
                      "staff_id": "mg9d91uh92bclwzg",
                      "total_bookings": "10",
                      "valid_from": "2020-06-01",
                      "valid_until": "2020-07-01"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Client Packages List Of Client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/clients/{client_id}/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "client's id",
            "in": "path",
            "name": "client_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Available filters: state: filter[state][in]=paid,pending,failed,refunded,cancelled,archived,incompleted.\n                                                                        created_at: filter[created_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                        updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at.\n                                                                      Available operators: asc, desc.\n                                                                      Example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payments": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments of Client",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_id": "method.request.path.client_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/{client_id}/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "platform": "All platform related operations",
        "platform_create": "platform create scope",
        "platform_delete": "platform delete scope",
        "platform_read": "platform read scope",
        "platform_update": "platform update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "platform": "",
        "platform_create": "",
        "platform_delete": "",
        "platform_read": "",
        "platform_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}
