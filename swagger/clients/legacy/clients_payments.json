{
  "basePath": "/client/payments",
  "host": "api.vcita.biz",
  "info": {
    "title": "Payment related API (Clients)",
    "version": "v2.0"
  },
  "paths": {
    "/v1/apps/primary_provider_connected_application": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get External Connected Payment Application",

        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "app": {
                    "api_uri": "https://ourApis.com/api",
                    "app_code_name": "a0eb85f0df0b1177",
                    "app_features": [
                      "Does stuff",
                      "And even more stuff"
                    ],
                    "app_host": "https://www.cnn.com",
                    "app_id": 1,
                    "app_mobile_screenshot_uris": [
                      "http://helloWorld.png"
                    ],
                    "app_name": "TaylorSwiftPayments",
                    "app_screenshot_uris": [
                      "http://helloWorld.png"
                    ],
                    "built_in": false,
                    "contact_support_link": "http://www.contact.com",
                    "deep_link": {
                      "path": "/app/someroute",
                      "path_params": {
                        "some_param": "true"
                      }
                    },
                    "description": {
                      "logo": "http://puppies.png",
                      "short_description": "Short text with buzzwords",
                      "text": "This is a very long text that describes everything about the app"
                    },
                    "is_internal": false,
                    "locales": [
                      "en",
                      "he"
                    ],
                    "menu_items": {
                      "subitems": [
                        {
                          "category": "clients",
                          "item_name": {
                            "en": "My RDBMS"
                          },
                          "key": "My RDBMS",
                          "route": "route"
                        }
                      ]
                    },
                    "open_in_new_tab": true,
                    "permissions": null,
                    "personal_connection": true,
                    "pre_installed": false,
                    "privacy_policy_link": "http://www.private.com",
                    "requires_upgrade": false,
                    "requires_upgrade_if_paid": false,
                    "status": "not_installed",
                    "supported_countries": [
                      "United States",
                      "Poland"
                    ],
                    "supported_in_mobile": true,
                    "url_params": [
                      "business_uid",
                      "staff_uid"
                    ]
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Get External Connected Payment Application",
        "tags": [
          "Apps"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/apps/primary_provider_connected_application"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "card": {
                  "properties": {
                    "cardholder_name": {
                      "description": "card holder name",
                      "type": "string"
                    },
                    "options": {
                      "properties": {
                        "default": {
                          "description": "is default card",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "token": {
                      "description": "card token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "token",
                    "cardholder_name"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "card"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Card Created",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "card": {
                      "uid": "822hs9sgnltvbkkt"
                    }
                  },
                  "success": true
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "invalid",
                    "message": "To store cards on file connect to a credit card processor"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Create New Card On File",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards/get_new_card": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "uid of the payment with which the card was created",
            "in": "query",
            "name": "source_payment",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Recent Card Retreived",
            "examples": {
              "application/json": {
                "data": {
                  "card": {
                    "active": true,
                    "business_id": "ob684pf7k4d2y8mh",
                    "card_brand": "visa",
                    "cardholder_name": "sdfs",
                    "client_id": "3ccj0h5o5bqo44ui",
                    "created_at": "2020-10-06T13:55:11.000Z",
                    "default": true,
                    "exp_month": 11,
                    "exp_year": 2022,
                    "id": "mquqmydothyf7n1k",
                    "last_4": "1111",
                    "payment_provider": "stripe",
                    "staff_id": "jp6as22f8mfnaojn",
                    "staff_name": "packages packages packages"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Get most recent pending card added to client [Alpha]",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards/get_new_card"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards/save_card_session": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "redirect_url": {
                  "description": "redirect url",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Save Card Session created Created",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "save_card_session": {
                      "account": "Taylor Swift",
                      "session_url": "www.taylorswift.com"
                    }
                  },
                  "success": true
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "invalid",
                    "field": "client_uid",
                    "message": "business doesn't have 'cp_and_new_cof' FF"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Create New Save Card Session",
        "tags": [
          "Cards"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/cards"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Cart",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "cart": {
                  "properties": {
                    "currency": {
                      "description": "translation missing: en.payments-api.client.carts.parameters.currency",
                      "type": "string"
                    },
                    "items": {
                      "description": "translation missing: en.payments-api.client.carts.parameters.items",
                      "items": {
                        "properties": {
                          "entity_type": {
                            "description": "translation missing: en.payments-api.client.carts.parameters.item.entity_type",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "translation missing: en.payments-api.client.carts.parameters.item.entity_uid",
                            "type": "string"
                          }
                        },
                        "required": [
                          "entity_uid",
                          "entity_type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "items",
                    "matter_uid"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "cart"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "cart": {
                    "cart_number": 2,
                    "cart_type": null,
                    "created_at": "2025-08-05T01:55:08.385-05:00",
                    "currency": "USD",
                    "is_sale": null,
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": "Added Aug 05, 2025",
                        "discount": null,
                        "entity_name": "Shampoo",
                        "entity_type": "ProductOrder",
                        "entity_uid": "61hsvd7pg3r51jea",
                        "fee_type": null,
                        "grand_total": "100.0",
                        "item_index": null,
                        "name": "Shampoo",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 1.0,
                        "sub_total": "100.0",
                        "taxes": [],
                        "uid": "xlrhp3gr21z8hh94",
                        "unit_amount": "100.0"
                      }
                    ],
                    "matter_uid": "pu7hkbneq6n1mfpp",
                    "payment_request_uid": "2xflyox2d1bo02u0",
                    "sub_total": "100.0",
                    "taxes": [],
                    "title": "Multi-item #0000002",
                    "total_price": "100.0",
                    "uid": "z0z6q9g6kogvn297",
                    "updated_at": "2025-08-05T01:55:08.385-05:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Create Cart",
        "tags": [
          "Carts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/carts"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts/{uid}?matter_uid={matter_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show specific cart data",
        "parameters": [
          {
            "description": "Cart UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "cart": {
                    "cart_number": 1,
                    "cart_type": null,
                    "created_at": "2025-08-05T01:55:07.984-05:00",
                    "currency": "USD",
                    "is_sale": null,
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": "Added Aug 05, 2025",
                        "discount": null,
                        "entity_name": "Shampoo",
                        "entity_type": "ProductOrder",
                        "entity_uid": "61hsvd7pg3r51jea",
                        "fee_type": null,
                        "grand_total": "100.0",
                        "item_index": null,
                        "name": "Shampoo",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 1.0,
                        "sub_total": "100.0",
                        "taxes": [],
                        "uid": "hb43a18hlbgywxju",
                        "unit_amount": "100.0"
                      }
                    ],
                    "matter_uid": "pu7hkbneq6n1mfpp",
                    "payment_request_uid": "j7dhebvnq4q09swv",
                    "sub_total": "100.0",
                    "taxes": [],
                    "title": "Multi-item #0000001",
                    "total_price": "100.0",
                    "uid": "sg1oz2nuy0in41ly",
                    "updated_at": "2025-08-05T01:55:07.984-05:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Cart",
        "tags": [
          "Carts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/carts/{uid}?matter_uid={matter_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/client_packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of Client Packages",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch packages for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, valid_from, valid_until.  available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: state: filter[state][eq]=ACTIVE/INACTIVE.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "error": "The API cannot be accessed. This could be because you lack permissions to use this API endpoint.",
                  "status": "Error"
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "List of Client Packages",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of deposits",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch deposits for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: entity_uid, entity_type. example: filter[entity_uid][eq]=123&filter[entity_type][in]=Invoice.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposits": [
                    {
                      "amount": {
                        "is_rounded": null,
                        "total": 50.0,
                        "type": "fixed",
                        "value": 50.0
                      },
                      "can_client_pay": true,
                      "created_at": "2025-08-05T01:55:17.659-05:00",
                      "currency": "USD",
                      "entity_type": "Invoice",
                      "entity_uid": "ogw6lfpggda2sews",
                      "matter_uid": "w8gtso6t02go66ad",
                      "payment_request_uid": null,
                      "payment_uid": "ftxwbw9a199m9xdb",
                      "staff_uid": "c1d6ffb93c834ba9",
                      "title": "Deposit for INVOICE #0000001",
                      "uid": "6y5ssai032sfpv54",
                      "updated_at": "2025-08-05T01:55:17.659-05:00"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Deposits List",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/deposits"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits/{uid}?matter_uid={matter_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "translation missing: en.payments-api.client.deposits.description",
        "parameters": [
          {
            "description": "Deposit UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Matter UID",
            "in": "path",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposit": {
                    "amount": {
                      "is_rounded": null,
                      "total": 50.0,
                      "type": "fixed",
                      "value": 50.0
                    },
                    "can_client_pay": true,
                    "created_at": "2025-08-05T01:55:17.659-05:00",
                    "currency": "USD",
                    "entity_type": "Invoice",
                    "entity_uid": "ogw6lfpggda2sews",
                    "matter_uid": "w8gtso6t02go66ad",
                    "payment_request_uid": null,
                    "payment_uid": "ftxwbw9a199m9xdb",
                    "staff_uid": "c1d6ffb93c834ba9",
                    "title": "Deposit for INVOICE #0000001",
                    "uid": "6y5ssai032sfpv54",
                    "updated_at": "2025-08-05T01:55:17.659-05:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/deposits/{uid}?matter_uid={matter_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/invoices": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of invoices",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch invoices for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: client_uid: filter[client_uid][eq]=123. matter_uid: filter[matter_uid][eq]=123. created_at: filter[created_at][eq/lt/lte/gt/gte]=2019-01-01. updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2019-01-01. uid: filter[uid][in]=123,456",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "invoices": [
                    {
                      "additional_recipients": [],
                      "allow_online_payment": false,
                      "allow_partial_payment": false,
                      "billing_address": "1 Bay St, San Francisco, CA, United States",
                      "business_name": "business7f25adfa30364684",
                      "client_name": "First name",
                      "contact_details": null,
                      "currency": "USD",
                      "due_date": "2025-08-05",
                      "invoice_label": "INVOICE",
                      "invoice_number": "1",
                      "issue_date": "2025-08-05",
                      "items": [
                        {
                          "cost": null,
                          "currency": "USD",
                          "description": null,
                          "discount": null,
                          "entity_name": null,
                          "entity_type": null,
                          "entity_uid": null,
                          "fee_type": null,
                          "grand_total": "20.0",
                          "item_index": null,
                          "name": "Hair Conditioner",
                          "orig_taxes": [],
                          "partial_payments_amount": "0.0",
                          "quantity": 2.0,
                          "sub_total": "20.0",
                          "taxes": [],
                          "uid": "y2e4jnwkup5b5gch",
                          "unit_amount": "10.0"
                        }
                      ],
                      "matter_details": null,
                      "matter_name": "First name",
                      "matter_term": "Client",
                      "matter_uid": null,
                      "metadata": {
                        "display_items_total": true,
                        "display_sections_total": true,
                        "pdf_customization": {
                          "color": null,
                          "cover": null,
                          "logo_size": null,
                          "template": null
                        },
                        "tax_mode": "exclude"
                      },
                      "note": null,
                      "payment_status_uid": "bh7e3e2tzlo0pglk",
                      "purchase_order": null,
                      "status": "ISSUED",
                      "subtotal": "20.0",
                      "taxes": [],
                      "terms_and_conditions": null,
                      "total": 20,
                      "total_tax": 0,
                      "uid": "l0lhtf9tcciyl65z"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Invoices List",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Business ID",
            "in": "query",
            "name": "business_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "When present, returns only active packages",
            "in": "query",
            "name": "active_only",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Packages Info Retrieved with active packages only",
            "examples": {
              "application/json": {
                "data": {
                  "packages": [
                    {
                      "active": true,
                      "currency": "USD",
                      "description": "Package description",
                      "discount_amount": 25,
                      "discount_unit": "f",
                      "expiration": 1,
                      "expiration_unit": "m",
                      "id": "m73jkvg4bf2z71b2",
                      "image_path": null,
                      "items": [
                        {
                          "services": [
                            {
                              "id": "mzuk2kkt7vjnxdwo",
                              "name": "Service name"
                            }
                          ],
                          "total_bookings": "10"
                        }
                      ],
                      "name": "Music Lessons",
                      "online_payment_enabled": true,
                      "original_price": "120.0",
                      "price": "100.0",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "name": "product1_name",
                          "quantity": 2
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "name": "product2_name",
                          "quantity": 4
                        }
                      ],
                      "total_bookings": 10
                    }
                  ]
                },
                "success": true
              }
            }
          }
        },
        "summary": "List Packages Info [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "None"
      }
    },
    "/v1/packages/{package_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "package": {
                    "active": true,
                    "currency": "USD",
                    "description": "Package description",
                    "discount_amount": 25,
                    "discount_unit": "f",
                    "expiration": 1,
                    "expiration_unit": "m",
                    "id": "m73jkvg4bf2z71b2",
                    "image_path": null,
                    "items": [
                      {
                        "services": [
                          {
                            "id": "mzuk2kkt7vjnxdwo",
                            "name": "Service name"
                          }
                        ],
                        "total_bookings": "10"
                      }
                    ],
                    "name": "Music Lessons",
                    "online_payment_enabled": true,
                    "original_price": "120.0",
                    "price": "100.0",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "quantity": "2"
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "quantity": "4"
                      }
                    ],
                    "total_bookings": 10
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "summary": "Show Package Info [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/packages/{package_id}"
        },
        "x-auth-type": "None"
      }
    },
    "/v1/payment_requests": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of payment requests",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch payment requests for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: state, uid, entity_type, enitity_uid. example: filter[state][in]=paid&filter[uid][in]=123&filter[entity_type][in]=Invoice.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payment_requests": [
                    {
                      "amount": "20.0",
                      "amount_before_coupon": null,
                      "amount_paid": 0.0,
                      "amount_pending": null,
                      "created_at": "2025-08-05T01:55:27.581-05:00",
                      "currency": "USD",
                      "display": true,
                      "due_date": "2025-08-04T19:00:00.000-05:00",
                      "fees_amount": 0.0,
                      "matter_uid": "ci0ippxguwzmvcia",
                      "net_amount": "20.0",
                      "paid_at": null,
                      "pait_at": null,
                      "payable_type": "Invoice",
                      "payable_uid": "gsu536shmo37ig6e",
                      "sellable_name": "INVOICE #0000001",
                      "staff_uid": "1bc6b627e589e0d4",
                      "state": "pending",
                      "tax_mode": "exclude",
                      "taxes": [],
                      "tips_amount": 0.0,
                      "uid": "cv03mnjcgqfg7vt6",
                      "updated_at": "2025-08-05T01:55:27.581-05:00"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Get Payment Requests List",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payment_requests"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payment_requests/{payment_request_uid}/checkout": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the checkout session of a given payment request",
        "parameters": [
          {
            "description": "Payment Request UID",
            "in": "path",
            "name": "payment_request_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional coupon code to apply discount to the payment request",
            "in": "query",
            "name": "coupon_code",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "checkout_session": {
                    "amount_left_to_pay": 20.0,
                    "amount_total": 20.0,
                    "checkout_options": null,
                    "coupon_discount": 0.0,
                    "currency": "USD",
                    "discount": 0.0,
                    "is_allowed_coupons": true,
                    "is_cart_coupon": false,
                    "items": [
                      {
                        "description": {
                          "issue_date": "2025-08-05"
                        },
                        "discount": 0.0,
                        "entity_type": "Invoice",
                        "entity_uid": "gsu536shmo37ig6e",
                        "price_after_discount": 20.0,
                        "price_before_discount": 20.0,
                        "taxes": [],
                        "title": "Invoice #001"
                      }
                    ],
                    "net_amount_left_to_pay": 20.0,
                    "net_total_amount": 20.0,
                    "payable_type": "Invoice",
                    "payable_uid": "gsu536shmo37ig6e",
                    "payment_status_uid": "cv03mnjcgqfg7vt6",
                    "state": "due",
                    "tax_mode": "exclude",
                    "taxes": [],
                    "title": "Invoice #001"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Get Checkout Session",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payment_requests/{payment_request_uid}/checkout"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of payments",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch payments for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: state, payment_status_uid. example: filter[state][in]=paid&filter[payment_status_uid][in]=123.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payments": [
                    {
                      "amount": 50,
                      "amount_refunded": "0.0",
                      "assignable": null,
                      "business_uid": "fc766c51080b64b7",
                      "created_at": "2025-08-05T06:55:31Z",
                      "currency": "USD",
                      "fees": null,
                      "is_deposit": null,
                      "mapping_metadata": {},
                      "marked_as_online": false,
                      "matter_uid": "h330nmo78dot1jc6",
                      "other_payment_method": null,
                      "paid_online": false,
                      "payment_method": "Cash",
                      "payment_request_uid": null,
                      "payment_time": "2025-08-05T06:55:31Z",
                      "provider_state": null,
                      "provider_transaction_id": null,
                      "reference": null,
                      "refunded_at": null,
                      "scheduled_payments_rule_uid": null,
                      "state": "paid",
                      "tips": null,
                      "title": "Cookie",
                      "uid": "n8byn15vnj2jb4bs",
                      "updated_at": "2025-08-05T06:55:31Z"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Payments List",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/product_orders": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of product orders",
        "parameters": [
          {
            "description": "relevant matter_uid to fetch products orders for",
            "in": "query",
            "name": "matter_uid",
            "required": true,
            "type": "string"
          },
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: client_uid, uid, entity_type. example: filter[client_uid][in]=uId1&filter[uid][in]=123.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "product_orders": [
                    {
                      "client_id": "amebs8yr715qhz9l",
                      "cost": null,
                      "created_at": "2025-08-05T01:55:35.643-05:00",
                      "currency": "USD",
                      "description": "Best hair shampoo",
                      "id": "rwi3bicfvmjmxjph",
                      "matter_uid": "kmiu5c4ox5r1t1eg",
                      "name": "Shampoo",
                      "payment_request_id": "g2zg6kg3q59oxlgn",
                      "payment_request_state": "pending",
                      "price": "10.0",
                      "product_id": "6sukaz56hxev8b9c",
                      "staff_id": "7edde4a6d219fa49",
                      "taxes": [],
                      "total_price": null
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "client/payments"
            ]
          }
        ],
        "summary": "Show Product Orders List",
        "tags": [
          "Product Orders"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///client/payments/v1/product_orders"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "client/payments": "All payments related operations from the client side",
        "client/payments_create": "client/payments create scope",
        "client/payments_delete": "client/payments delete scope",
        "client/payments_read": "client/payments read scope",
        "client/payments_update": "client/payments update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "client/payments": "",
        "client/payments_create": "",
        "client/payments_delete": "",
        "client/payments_read": "",
        "client/payments_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}