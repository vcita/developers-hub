{
  "basePath": "/business/payments",
  "host": "api.vcita.biz",
  "info": {
    "title": "Payment related API (Business)",
    "version": "v2.0"
  },
  "paths": {
    "/v1/card_requests": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Card Request",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "card_request": {
                  "properties": {
                    "alpha2": {
                      "description": "Country code",
                      "type": "string"
                    },
                    "channel": {
                      "description": "channel type, possible values: email / sms",
                      "type": "string"
                    },
                    "channel_value": {
                      "description": "channel value, possible values: email / phone number",
                      "type": "string"
                    },
                    "client_uid": {
                      "description": "Client UID",
                      "type": "string"
                    }
                  },
                  "required": [
                    "client_uid",
                    "channel",
                    "channel_value"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "card_request"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "card_request": {
                    "channel": "sms",
                    "client_uid": "2ug8kox93vc7ahwf",
                    "created_at": "2025-08-05T06:53:46Z",
                    "last_requested_at": "2025-08-05T06:53:46Z",
                    "staff_uid": "00215830e0950e57",
                    "uid": "fe59cwfgr76yzhdi",
                    "updated_at": "2025-08-05T06:53:46Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Card Request",
        "tags": [
          "Card Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/card_requests"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/card_requests/{client_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a Card Request",
        "parameters": [
          {
            "description": "Client UID",
            "in": "path",
            "name": "client_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "card_request": {
                    "channel": "sms",
                    "client_uid": "2ug8kox93vc7ahwf",
                    "created_at": "2025-08-05T06:53:46Z",
                    "last_requested_at": "2025-08-05T06:53:46Z",
                    "staff_uid": "00215830e0950e57",
                    "uid": "fe59cwfgr76yzhdi",
                    "updated_at": "2025-08-05T06:53:46Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Card Request",
        "tags": [
          "Card Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/card_requests/{client_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/cards/{uid}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Card",
        "parameters": [
          {
            "description": "Card UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "card": {
                  "properties": {
                    "default": {
                      "description": "Indicates whether the card is the default card for the business. Only true value is accepted. To remove a card's default status, set another card as default instead.",
                      "type": "boolean"
                    },
                    "usage_permission": {
                      "description": "Card usage_permission, possible values: all / client",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "card"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "card": {
                    "active": true,
                    "business_id": "9487420d62e8a61d",
                    "card_brand": null,
                    "cardholder_name": null,
                    "client_id": "1g36ed0wz9yhpnbc",
                    "created_at": "2025-08-05T09:53:48.525+03:00",
                    "default": true,
                    "exp_month": null,
                    "exp_year": null,
                    "id": "4y9q965ktpsglxoj",
                    "initiator": null,
                    "last_4": null,
                    "payment_provider": "stripe",
                    "staff_id": null,
                    "staff_name": "",
                    "usage_permission": "all"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Card",
        "tags": [
          "card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/cards/{uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Sale",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "cart": {
                  "properties": {
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "items": {
                      "description": "Items of the sale - Services / Products / Meeting / EventAttendance / ProductOrder",
                      "items": {
                        "properties": {
                          "amount": {
                            "description": "Amount of the item. For free items, the amount should be 0",
                            "type": "number"
                          },
                          "description": {
                            "description": "Description of the item",
                            "type": "string"
                          },
                          "discount": {
                            "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                            "properties": {
                              "amount": {
                                "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                "type": "number"
                              },
                              "percent": {
                                "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "entity_name": {
                            "description": "Name of the entity (will be used in the reports)",
                            "type": "string"
                          },
                          "entity_type": {
                            "description": "Possible values: Service / Product / Package / Meeting / EventAttendance / ProductOrder / ClientBookingPackage / Custom",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "The UID of the entity",
                            "type": "string"
                          },
                          "taxes": {
                            "items": {
                              "properties": {
                                "name": {
                                  "description": "Tax name",
                                  "type": "string"
                                },
                                "rate": {
                                  "description": "Tax rate (percentage, up to 3 decimal places). The rate should be greater than 0 and less than or equal to 100.",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "entity_uid",
                          "entity_type"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "items",
                    "matter_uid"
                  ],
                  "type": "object"
                },
                "is_sale": {
                  "description": "Required - Should create a sale (Required value = true)",
                  "type": "boolean"
                }
              },
              "required": [
                "cart",
                "is_sale"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created sale",
            "examples": {
              "application/json": {
                "data": {
                  "cart": {
                    "cart_number": 2,
                    "cart_type": null,
                    "created_at": "2025-08-05T09:53:52.977+03:00",
                    "currency": "USD",
                    "is_sale": null,
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": "nil",
                        "discount": {
                          "amount": 10
                        },
                        "entity_name": "Drum sticks",
                        "entity_type": "Product",
                        "entity_uid": "ztytw16puobna058",
                        "grand_total": 100,
                        "name": "Shampoo",
                        "quantity": 1.0,
                        "sub_total": 100,
                        "taxes": [],
                        "uid": null,
                        "unit_amount": 100
                      }
                    ],
                    "matter_uid": "1ei99zpv9sayyhnc",
                    "payment_request_uid": "yvn9ufix3aq8twiy",
                    "sub_total": "100.0",
                    "taxes": [],
                    "title": "Multi-item #0000002",
                    "total_price": "100.0",
                    "uid": "jdvrqcqvf9cnf2f1",
                    "updated_at": "2025-08-05T09:53:52.977+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "missing",
                    "message": "Not Found"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Sale",
        "tags": [
          "Sales"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/carts"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts/{uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show specific sale data",
        "parameters": [
          {
            "description": "Sale UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "cart": {
                    "cart_number": 1,
                    "cart_type": "catalog",
                    "created_at": "2025-08-05T09:54:45.240+03:00",
                    "currency": "USD",
                    "is_sale": true,
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_name": "Drum sticks",
                        "entity_type": "Product",
                        "entity_uid": "ztytw16puobna058",
                        "fee_type": null,
                        "grand_total": "100.0",
                        "item_index": null,
                        "name": "Drum sticks",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 1.0,
                        "sub_total": "100.0",
                        "taxes": [],
                        "uid": "xa081ynil58lkqm5",
                        "unit_amount": "100.0"
                      }
                    ],
                    "matter_uid": "1ei99zpv9sayyhnc",
                    "payment_request_uid": "z64bopfhichave18",
                    "sub_total": "100.0",
                    "taxes": [],
                    "title": "Sale #1 - Drum sticks",
                    "total_price": "100.0",
                    "uid": "huohc4fdomgl83gw",
                    "updated_at": "2025-08-05T09:54:45.240+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Sale",
        "tags": [
          "Sales"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/carts/{uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts/{uid}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Cancel a sale",
        "parameters": [
          {
            "description": "Sale UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "cancel_payment_statuses_items": {
                  "description": "Cancel the related activities under the sale",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "cart": {
                    "cart_number": 1,
                    "cart_type": "catalog",
                    "created_at": "2025-08-05T09:54:45.240+03:00",
                    "currency": null,
                    "is_sale": true,
                    "items": [
                      {
                        "cost": null,
                        "currency": null,
                        "description": null,
                        "discount": null,
                        "entity_name": "Drum sticks",
                        "entity_type": "Product",
                        "entity_uid": "ztytw16puobna058",
                        "fee_type": null,
                        "grand_total": "100.0",
                        "item_index": null,
                        "name": "Drum sticks",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 1.0,
                        "sub_total": "100.0",
                        "taxes": [],
                        "uid": "xa081ynil58lkqm5",
                        "unit_amount": "100.0"
                      }
                    ],
                    "matter_uid": "1ei99zpv9sayyhnc",
                    "payment_request_uid": null,
                    "sub_total": "100.0",
                    "taxes": [],
                    "title": "Sale #1 - Drum sticks",
                    "total_price": null,
                    "uid": "huohc4fdomgl83gw",
                    "updated_at": "2025-08-05T09:54:45.240+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Cancel an open sale",
        "tags": [
          "Sales"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/carts/{uid}/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/carts/{uid}/cart_completed": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Completes and finalizes the sale",
        "parameters": [
          {
            "description": "Sale UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "json": {
                    "message": "Cart completed successfully"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Complete an open sale",
        "tags": [
          "Sales"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/carts/{uid}/cart_completed"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/client_packages/{client_package_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "client_package_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client Package Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "client_package": {
                    "active": "true",
                    "amount": 100.0,
                    "booking_credits": [
                      {
                        "bookings_usage": "0",
                        "credit_items": [
                          {
                            "bookings_usage": 0,
                            "item_id": "mzuk2kkt7vjnxdwo",
                            "item_type": "SERVICE"
                          }
                        ],
                        "id": "vu1rovse0166a9d9",
                        "total_bookings": "10"
                      }
                    ],
                    "bookings_usage": "0",
                    "business_id": "vqzqruk6nyclxpp6",
                    "client_id": "9yxsdkr1hdjtocpv",
                    "conversation_id": "war7ow99zh14qlty",
                    "created_at": "2020-06-01T21:05:00.562Z",
                    "currency": "USD",
                    "id": "m73jkvg4bf2z71b2",
                    "image_path": "",
                    "name": "Music Lessons",
                    "package_id": "v2fvy50p8gjuvnvb",
                    "payment_request_id": "6v5ybwkavv0z9hff",
                    "payment_request_state": "pending",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "source": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "total_bookings": "10",
                    "valid_from": "2020-06-01",
                    "valid_until": "2020-07-01"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Show Client Package Info [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.client_package_id": "method.request.path.client_package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/client_packages/{client_package_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "client_package_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "client_package": {
                  "properties": {
                    "booking_credits": {
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Credit Item ID",
                            "type": "string"
                          },
                          "total_bookings": {
                            "description": "Total bookings for the provided booking credit. Must be equal or greater than the current booking credit usage.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "total_bookings",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "valid_until": {
                      "description": "Last valid date of the client package (ISO 8601 format). Must be in the future and equal or greater than valid_from value.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "client_package"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client Package Updated",
            "examples": {
              "application/json": {
                "data": {
                  "client_package": {
                    "active": "true",
                    "amount": 100.0,
                    "booking_credits": [
                      {
                        "bookings_usage": "0",
                        "credit_items": [
                          {
                            "bookings_usage": 0,
                            "item_id": "mzuk2kkt7vjnxdwo",
                            "item_type": "SERVICE"
                          }
                        ],
                        "id": "vu1rovse0166a9d9",
                        "total_bookings": "5"
                      }
                    ],
                    "bookings_usage": "0",
                    "business_id": "vqzqruk6nyclxpp6",
                    "client_id": "9yxsdkr1hdjtocpv",
                    "conversation_id": "war7ow99zh14qlty",
                    "created_at": "2020-06-01T21:05:00.562Z",
                    "currency": "USD",
                    "id": "m73jkvg4bf2z71b2",
                    "image_path": "",
                    "name": "Music Lessons",
                    "package_id": "v2fvy50p8gjuvnvb",
                    "payment_request_id": "6v5ybwkavv0z9hff",
                    "payment_request_state": "pending",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "staff_id": "mg9d91uh92bclwzg",
                    "total_bookings": "5",
                    "valid_from": "2020-06-01",
                    "valid_until": "2021-07-01"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update client package [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.client_package_id": "method.request.path.client_package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/client_packages/{client_package_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show list of deposits",
        "parameters": [
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: entity_uid, entity_type. example: filter[entity_uid][eq]=123&filter[entity_type][in]=Invoice.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposits": [
                    {
                      "amount": {
                        "is_rounded": null,
                        "total": 50.0,
                        "type": "fixed",
                        "value": 50.0
                      },
                      "can_client_pay": true,
                      "created_at": "2025-08-05T09:54:08.266+03:00",
                      "currency": "USD",
                      "entity_type": "Invoice",
                      "entity_uid": "ehxqtvabtig2aj06",
                      "matter_uid": "8ou4cwb8h5ipjlvt",
                      "payment_request_uid": null,
                      "payment_uid": "7zv99u0v4w36l3ru",
                      "staff_uid": "63dd60d2c4783ebe",
                      "title": "Deposit for INVOICE #0000001",
                      "uid": "pzbkn3h41ntc3c4u",
                      "updated_at": "2025-08-05T09:54:08.266+03:00"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Show Deposits List",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/deposits"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Deposit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "deposit": {
                  "properties": {
                    "amount": {
                      "description": "Deposit's amount",
                      "items": {
                        "properties": {
                          "is_rounded": {
                            "description": "indicatation whether amount is rounded to the closest dollar",
                            "type": "boolean"
                          },
                          "total": {
                            "description": "amount total (fixed - after precentage calculation)",
                            "type": "number"
                          },
                          "type": {
                            "description": "amount type (fixed/precentage)",
                            "type": "string"
                          },
                          "value": {
                            "description": "amount value",
                            "type": "number"
                          }
                        },
                        "required": [
                          "type",
                          "value",
                          "total"
                        ],
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "can_client_pay": {
                      "description": "Indicates whether the payment will be made in Client Portal. Default is true",
                      "type": "boolean"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "entity_type": {
                      "description": "Related entity_type",
                      "type": "string"
                    },
                    "entity_uid": {
                      "description": "Related entity_uid",
                      "type": "string"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    },
                    "payment_uid": {
                      "description": "Related payment_uid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "currency",
                    "matter_uid",
                    "amount",
                    "entity_uid",
                    "entity_type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "deposit"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposit": {
                    "amount": {
                      "is_rounded": null,
                      "total": 50.0,
                      "type": "fixed",
                      "value": 50.0
                    },
                    "can_client_pay": true,
                    "created_at": "2025-08-05T09:54:09.134+03:00",
                    "currency": "USD",
                    "entity_type": "Invoice",
                    "entity_uid": "1loujducpdk71p5r",
                    "matter_uid": "8ou4cwb8h5ipjlvt",
                    "payment_request_uid": null,
                    "payment_uid": "874tdqen0acd5t7f",
                    "staff_uid": "63dd60d2c4783ebe",
                    "title": "Deposit for INVOICE #0000002",
                    "uid": "m9k8akac0pu9h71v",
                    "updated_at": "2025-08-05T09:54:09.134+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/deposits"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/deposits/{uid}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete a specific deposit",
        "parameters": [
          {
            "description": "Deposit UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Delete Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/deposits/{uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Show specific deposit data",
        "parameters": [
          {
            "description": "Deposit UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposit": {
                    "amount": {
                      "is_rounded": null,
                      "total": 50.0,
                      "type": "fixed",
                      "value": 50.0
                    },
                    "can_client_pay": true,
                    "created_at": "2025-08-05T09:54:08.266+03:00",
                    "currency": "USD",
                    "entity_type": "Invoice",
                    "entity_uid": "ehxqtvabtig2aj06",
                    "matter_uid": "8ou4cwb8h5ipjlvt",
                    "payment_request_uid": null,
                    "payment_uid": "7zv99u0v4w36l3ru",
                    "staff_uid": "63dd60d2c4783ebe",
                    "title": "Deposit for INVOICE #0000001",
                    "uid": "pzbkn3h41ntc3c4u",
                    "updated_at": "2025-08-05T09:54:08.266+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Show Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/deposits/{uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update specific deposit",
        "parameters": [
          {
            "description": "Deposit UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "deposit": {
                  "properties": {
                    "amount": {
                      "description": "Deposit's amount",
                      "items": {
                        "properties": {
                          "is_rounded": {
                            "description": "indicatation whether amount is rounded to the closest dollar",
                            "type": "boolean"
                          },
                          "total": {
                            "description": "amount total (fixed - after precentage calculation)",
                            "type": "number"
                          },
                          "type": {
                            "description": "amount type (fixed/precentage)",
                            "type": "string"
                          },
                          "value": {
                            "description": "amount value",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "object"
                    },
                    "can_client_pay": {
                      "description": "Indicates whether the payment will be made in Client Portal. Default is true",
                      "type": "boolean"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "entity_type": {
                      "description": "Related entity_type",
                      "type": "string"
                    },
                    "entity_uid": {
                      "description": "Related entity_uid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "deposit"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "deposit": {
                    "amount": {
                      "is_rounded": null,
                      "total": 50.0,
                      "type": "fixed",
                      "value": 50.0
                    },
                    "can_client_pay": true,
                    "created_at": "2025-08-05T09:54:08.266+03:00",
                    "currency": "USD",
                    "entity_type": "Invoice",
                    "entity_uid": "ehxqtvabtig2aj06",
                    "matter_uid": "8ou4cwb8h5ipjlvt",
                    "payment_request_uid": null,
                    "payment_uid": "7zv99u0v4w36l3ru",
                    "staff_uid": "63dd60d2c4783ebe",
                    "title": "Deposit for INVOICE #0000001",
                    "uid": "pzbkn3h41ntc3c4u",
                    "updated_at": "2025-08-05T09:54:08.266+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Deposit",
        "tags": [
          "Deposits"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/deposits/{uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/estimates": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates an Estimate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "estimate": {
                  "properties": {
                    "billing_address": {
                      "description": "Business billing address",
                      "type": "string"
                    },
                    "business_name": {
                      "description": "The business name. Default value: The business name",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "display_items_total": {
                      "description": "Indicates wheter items total amounts should be displayed in the estimate. Default is true",
                      "type": "boolean"
                    },
                    "display_sections_total": {
                      "description": "Indicates wheter sections total amounts should be displayed in the estimate. Default is true",
                      "type": "boolean"
                    },
                    "due_date": {
                      "description": "The date when the estimate is due, in YYYY-MM-DD format (based on the timezone of the business), must be equal or greater than the estimate issue date",
                      "type": "string"
                    },
                    "estimate_label": {
                      "description": "The invoice label. Default value: ESTIMATE (in the business locale)",
                      "type": "string"
                    },
                    "estimate_number": {
                      "description": "A unique estimate number. Default value: last estimate number increment by 1",
                      "type": "number"
                    },
                    "is_signature_required": {
                      "description": "Indicates whether signature is required for the specific estimate",
                      "type": "boolean"
                    },
                    "issue_date": {
                      "description": "Estimate date, in YYYY-MM-DD format (based on the timezone of the business)",
                      "type": "string"
                    },
                    "items": {
                      "description": "An array of estimate item information. At least one item is required (unless sections provided).",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The item description",
                            "type": "string"
                          },
                          "discount": {
                            "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                            "properties": {
                              "amount": {
                                "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                "type": "number"
                              },
                              "percent": {
                                "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "entity_type": {
                            "description": "Possible values: Service / Product / BookingPackage",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "The UID of the entity",
                            "type": "string"
                          },
                          "item_index": {
                            "description": "the order of the item in the section / estimate (if not inside a section)",
                            "type": "number"
                          },
                          "name": {
                            "description": "The item name",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "The quantity of the item, must be greater than 0.",
                            "type": "number"
                          },
                          "tax_uids": {
                            "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "unit_amount": {
                            "description": "The unit amount of the item",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "quantity",
                          "unit_amount"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    },
                    "note": {
                      "description": "A note for the invoice recipient",
                      "type": "string"
                    },
                    "notify_recipient": {
                      "description": "Indicates whether to send the estimate to the recipient. This can be set only on ISSUED estimate. Default value: true",
                      "type": "boolean"
                    },
                    "purchase_order": {
                      "description": "Purchase Order",
                      "type": "string"
                    },
                    "sections": {
                      "description": "An array of estimate sections information. requires if not general items provided.",
                      "items": {
                        "properties": {
                          "items": {
                            "description": "An array of estimate item information. At least one item is required (unless sections provided).",
                            "items": {
                              "properties": {
                                "description": {
                                  "description": "The item description",
                                  "type": "string"
                                },
                                "discount": {
                                  "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                                  "properties": {
                                    "amount": {
                                      "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                      "type": "number"
                                    },
                                    "percent": {
                                      "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "entity_type": {
                                  "description": "Possible values: Service / Product / BookingPackage",
                                  "type": "string"
                                },
                                "entity_uid": {
                                  "description": "The UID of the entity",
                                  "type": "string"
                                },
                                "item_index": {
                                  "description": "the order of the item in the section / estimate (if not inside a section)",
                                  "type": "number"
                                },
                                "name": {
                                  "description": "The item name",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "The quantity of the item, must be greater than 0.",
                                  "type": "number"
                                },
                                "tax_uids": {
                                  "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "unit_amount": {
                                  "description": "The unit amount of the item",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "name",
                                "quantity",
                                "unit_amount",
                                "item_index"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "The section name",
                            "type": "string"
                          },
                          "section_index": {
                            "description": "the order of the section among all sections",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "section_index"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "source_campaign": {
                      "description": "Source Campaign",
                      "type": "string"
                    },
                    "source_channel": {
                      "description": "Source Channel",
                      "type": "string"
                    },
                    "source_name": {
                      "description": "Source Name",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "Source Url",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the estimate. The possible values are: DRAFT / ISSUED. Default value: ISSUED",
                      "type": "string"
                    },
                    "terms_and_conditions": {
                      "description": "The terms and conditions of the estimate",
                      "type": "string"
                    }
                  },
                  "required": [
                    "matter_uid",
                    "issue_date",
                    "due_date",
                    "currency",
                    "billing_address",
                    "items"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "estimate"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "estimate": {
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "The Best Barber Shop",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-09-05",
                    "estimate_label": "Estimate",
                    "estimate_number": 2,
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "currency": "USD",
                        "description": "Best Hair Conditioner",
                        "discount": {
                          "amount": "10.0",
                          "percent": "50.0"
                        },
                        "entity_type": null,
                        "entity_uid": null,
                        "grand_total": "10.0",
                        "item_index": 0,
                        "name": "Hair Conditioner",
                        "quantity": 2.0,
                        "sub_total": "10.0",
                        "taxes": [],
                        "uid": "p2nk17ytww78yobp",
                        "unit_amount": "10.0"
                      }
                    ],
                    "last_action": "2025-08-05T09:54:13.348+03:00",
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "tbfn3poiscu6sbdx",
                    "metadata": {
                      "display_items_total": false,
                      "display_sections_total": false,
                      "is_signature_required": null,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": "Thank you in advance!",
                    "purchase_order": null,
                    "sections": [
                      {
                        "items": [
                          {
                            "currency": "USD",
                            "description": "Best Hair Conditioner",
                            "discount": {
                              "amount": "10.0",
                              "percent": "50.0"
                            },
                            "entity_type": null,
                            "entity_uid": null,
                            "grand_total": "10.0",
                            "item_index": 0,
                            "name": "Hair Conditioner",
                            "quantity": 2.0,
                            "sub_total": "10.0",
                            "taxes": [],
                            "uid": "3bktizh6n28cg9b5",
                            "unit_amount": "10.0"
                          }
                        ],
                        "name": "Taylor Swift",
                        "section_index": 0,
                        "total_amount": "10.0",
                        "uid": "0xp61qwcq7zk9mt0"
                      }
                    ],
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": "Payment is due on the specified due date.",
                    "total": "20.0",
                    "total_tax": 0,
                    "uid": "q2mq3cdujuw2jcpt"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Estimate",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/estimates/{estimate_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "fetch a specific estimate",
        "parameters": [
          {
            "description": "Estimate UID",
            "in": "path",
            "name": "estimate_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "estimate": {
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "businesse980f4492b535cb7",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-08-05",
                    "estimate_label": "Estimate",
                    "estimate_number": 1,
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "grand_total": "20.0",
                        "item_index": null,
                        "name": "Hair Conditioner",
                        "quantity": 2.0,
                        "sub_total": "20.0",
                        "taxes": [],
                        "uid": "azuv5w1obgam63xo",
                        "unit_amount": "10.0"
                      }
                    ],
                    "last_action": "2025-08-05T09:54:11.331+03:00",
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "tbfn3poiscu6sbdx",
                    "metadata": {
                      "display_items_total": true,
                      "display_sections_total": true,
                      "is_signature_required": null,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": null,
                    "purchase_order": null,
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": null,
                    "total": "20.0",
                    "total_tax": 0,
                    "uid": "tbzc47bc1cyfrg0x"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Estimate",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/estimates/{estimate_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "update an existing estimate",
        "parameters": [
          {
            "description": "Estimate UID",
            "in": "path",
            "name": "estimate_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "estimate": {
                  "properties": {
                    "billing_address": {
                      "description": "Business billing address",
                      "type": "string"
                    },
                    "business_name": {
                      "description": "The business name",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "display_items_total": {
                      "description": "Indicates wheter items total amounts should be displayed in the estimate. Default is true",
                      "type": "boolean"
                    },
                    "display_sections_total": {
                      "description": "Indicates wheter sections total amounts should be displayed in the estimate. Default is true",
                      "type": "boolean"
                    },
                    "due_date": {
                      "description": "The date when the estimate is due, in YYYY-MM-DD format (based on the timezone of the business), must be equal or greater than the estimate issue date",
                      "type": "string"
                    },
                    "estimate_label": {
                      "description": "The estimate label",
                      "type": "string"
                    },
                    "estimate_number": {
                      "description": "A unique estimate number",
                      "type": "number"
                    },
                    "is_signature_required": {
                      "description": "Indicates whether signature is required for the specific estimate",
                      "type": "boolean"
                    },
                    "issue_date": {
                      "description": "Estimate date, in YYYY-MM-DD format (based on the timezone of the business)",
                      "type": "string"
                    },
                    "items": {
                      "description": "An array of estimate item information. At least one item is required. All estimate items will be replaced with the provided items. Exisitng item that won't be provided will be removed.",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The item description",
                            "type": "string"
                          },
                          "discount": {
                            "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                            "properties": {
                              "amount": {
                                "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                "type": "number"
                              },
                              "percent": {
                                "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "entity_type": {
                            "description": "Possible values: Service / Product / BookingPackage",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "The UID of the entity",
                            "type": "string"
                          },
                          "item_index": {
                            "description": "the order of the item in the section / estimate (if not inside a section)",
                            "type": "number"
                          },
                          "name": {
                            "description": "The item name",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "The quantity of the item, must be greater than 0.",
                            "type": "number"
                          },
                          "tax_uids": {
                            "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "unit_amount": {
                            "description": "The unit amount of the item",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "quantity",
                          "unit_amount"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "note": {
                      "description": "A note for the invoice recipient",
                      "type": "string"
                    },
                    "notify_recipient": {
                      "description": "Indicates whether to send the estimate to the recipient. This can be set only on ISSUED estimate. Default value: true",
                      "type": "boolean"
                    },
                    "purchase_order": {
                      "description": "Purchase Order",
                      "type": "string"
                    },
                    "sections": {
                      "description": "An array of estimate sections information. requires if not general items provided.",
                      "items": {
                        "properties": {
                          "items": {
                            "description": "An array of estimate item information. At least one item is required (unless sections provided).",
                            "items": {
                              "properties": {
                                "description": {
                                  "description": "The item description",
                                  "type": "string"
                                },
                                "discount": {
                                  "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                                  "properties": {
                                    "amount": {
                                      "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                      "type": "number"
                                    },
                                    "percent": {
                                      "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "entity_type": {
                                  "description": "Possible values: Service / Product / BookingPackage",
                                  "type": "string"
                                },
                                "entity_uid": {
                                  "description": "The UID of the entity",
                                  "type": "string"
                                },
                                "item_index": {
                                  "description": "the order of the item in the section / estimate (if not inside a section)",
                                  "type": "number"
                                },
                                "name": {
                                  "description": "The item name",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "The quantity of the item, must be greater than 0.",
                                  "type": "number"
                                },
                                "tax_uids": {
                                  "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "unit_amount": {
                                  "description": "The unit amount of the item",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "name",
                                "quantity",
                                "unit_amount",
                                "item_index"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "The section name",
                            "type": "string"
                          },
                          "section_index": {
                            "description": "the order of the section among all sections",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "section_index"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of the estimate. The possible values are: DRAFT / ISSUED / APPROVED / REJECTED.",
                      "type": "string"
                    },
                    "terms_and_conditions": {
                      "description": "The terms and conditions of the estimate",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "estimate"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "estimate": {
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "businesse980f4492b535cb7",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-08-05",
                    "estimate_label": "Estimate",
                    "estimate_number": 1,
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "grand_total": "20.0",
                        "item_index": null,
                        "name": "Hair Conditioner",
                        "quantity": 2.0,
                        "sub_total": "20.0",
                        "taxes": [],
                        "uid": "azuv5w1obgam63xo",
                        "unit_amount": "10.0"
                      }
                    ],
                    "last_action": "2025-08-05T09:54:11.331+03:00",
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "tbfn3poiscu6sbdx",
                    "metadata": {
                      "display_items_total": true,
                      "display_sections_total": true,
                      "is_signature_required": null,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": null,
                    "purchase_order": null,
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": null,
                    "total": "20.0",
                    "total_tax": 0,
                    "uid": "tbzc47bc1cyfrg0x"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "update",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/estimates/{estimate_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/invoices": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates an Invoice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "invoice": {
                  "properties": {
                    "additional_recipients": {
                      "description": "An array of email addresses of additional recipients to notify",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "allow_online_payment": {
                      "description": "Indicates whether an online payment is allowed for this invoice. This can be set for business with online payment enabled and when connected to a payment gateway. Default value: true when connected to a payment gateway and online payment is enabled for the business.",
                      "type": "boolean"
                    },
                    "allow_partial_payment": {
                      "description": "Indicates whether a partial payment is allowed for this invoice. This can be set when online payment is allowed for the invoice. Default value: true when online payment allowed for the invoice and partial payment is enabled for the business.",
                      "type": "boolean"
                    },
                    "billing_address": {
                      "description": "Business billing address",
                      "type": "string"
                    },
                    "business_name": {
                      "description": "The business name. Default value: The business name",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "display_items_total": {
                      "description": "Indicates wheter items total amounts should be displayed in the invoice. Default is true",
                      "type": "boolean"
                    },
                    "display_sections_total": {
                      "description": "Indicates wheter sections total amounts should be displayed in the invoice. Default is true",
                      "type": "boolean"
                    },
                    "due_date": {
                      "description": "The date when the invoice payment is due, in YYYY-MM-DD format (based on the timezone of the business), must be equal or greater than the invoice issue date",
                      "type": "string"
                    },
                    "from_estimate_uid": {
                      "description": "The UID of the estimate from which the invoice was created.",
                      "type": "string"
                    },
                    "invoice_label": {
                      "description": "The invoice label. Default value: INVOICE (in the business locale)",
                      "type": "string"
                    },
                    "invoice_number": {
                      "description": "A unique invoice number. Default value: last invoice number increment by 1",
                      "type": "number"
                    },
                    "issue_date": {
                      "description": "Invoice date, in YYYY-MM-DD format (based on the timezone of the business)",
                      "type": "string"
                    },
                    "items": {
                      "description": "An array of invoice item information. At least one item is required (unless sections provided).",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The item description",
                            "type": "string"
                          },
                          "discount": {
                            "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                            "properties": {
                              "amount": {
                                "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                "type": "number"
                              },
                              "percent": {
                                "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "entity_type": {
                            "description": "Possible values: Service / Product / BookingPackage /  Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "The UID of the entity",
                            "type": "string"
                          },
                          "item_index": {
                            "description": "the order of the item in the section / invoice (if not inside a section)",
                            "type": "number"
                          },
                          "name": {
                            "description": "The item name",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "The quantity of the item, must be greater than 0. The quantity of an item with one of the following entity types must be 1: Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                            "type": "number"
                          },
                          "tax_uids": {
                            "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "unit_amount": {
                            "description": "The unit amount of the item",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "quantity",
                          "unit_amount"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    },
                    "note": {
                      "description": "A note for the invoice recipient",
                      "type": "string"
                    },
                    "notify_recipient": {
                      "description": "Indicates whether to send the invoice to the recipient. This can be set only on ISSUED invoice. Default value: true",
                      "type": "boolean"
                    },
                    "purchase_order": {
                      "description": "Purchase Order",
                      "type": "string"
                    },
                    "sections": {
                      "description": "An array of invoice sections information. requires if not general items provided.",
                      "items": {
                        "properties": {
                          "items": {
                            "description": "An array of invoice item information. At least one item is required (unless sections provided).",
                            "items": {
                              "properties": {
                                "description": {
                                  "description": "The item description",
                                  "type": "string"
                                },
                                "discount": {
                                  "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                                  "properties": {
                                    "amount": {
                                      "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                      "type": "number"
                                    },
                                    "percent": {
                                      "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "entity_type": {
                                  "description": "Possible values: Service / Product / BookingPackage /  Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                                  "type": "string"
                                },
                                "entity_uid": {
                                  "description": "The UID of the entity",
                                  "type": "string"
                                },
                                "item_index": {
                                  "description": "the order of the item in the section / invoice (if not inside a section)",
                                  "type": "number"
                                },
                                "name": {
                                  "description": "The item name",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "The quantity of the item, must be greater than 0. The quantity of an item with one of the following entity types must be 1: Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                                  "type": "number"
                                },
                                "tax_uids": {
                                  "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "unit_amount": {
                                  "description": "The unit amount of the item",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "name",
                                "quantity",
                                "unit_amount",
                                "item_index"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "The section name",
                            "type": "string"
                          },
                          "section_index": {
                            "description": "the order of the section among all sections",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "section_index"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "source_campaign": {
                      "description": "Source Campaign",
                      "type": "string"
                    },
                    "source_channel": {
                      "description": "Source Channel",
                      "type": "string"
                    },
                    "source_name": {
                      "description": "Source Name",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "Source Url",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the invoice. The possible values are: DRAFT / ISSUED. Default value: ISSUED",
                      "type": "string"
                    },
                    "terms_and_conditions": {
                      "description": "The terms and conditions of the invoice",
                      "type": "string"
                    }
                  },
                  "required": [
                    "matter_uid",
                    "issue_date",
                    "due_date",
                    "currency",
                    "billing_address",
                    "items"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "invoice"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "additional_recipients": [],
                    "allow_online_payment": false,
                    "allow_partial_payment": false,
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "The Best Barber Shop",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-09-05",
                    "invoice_label": "INVOICE",
                    "invoice_number": "2",
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": "Best Hair Conditioner",
                        "discount": {
                          "amount": "10.0",
                          "percent": "50.0"
                        },
                        "entity_name": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "fee_type": null,
                        "grand_total": "10.0",
                        "item_index": 0,
                        "name": "Hair Conditioner",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 2.0,
                        "sub_total": "10.0",
                        "taxes": [],
                        "uid": "t7xz0abgv9ip9h6n",
                        "unit_amount": "10.0"
                      }
                    ],
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "xdnlwly0alkhctsx",
                    "metadata": {
                      "display_items_total": false,
                      "display_sections_total": false,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": "Thank you in advance!",
                    "payment_status_uid": "dmzu2spv4mcojatz",
                    "purchase_order": null,
                    "sections": [
                      {
                        "items": [
                          {
                            "cost": null,
                            "currency": "USD",
                            "description": "Best Hair Conditioner",
                            "discount": {
                              "amount": "10.0",
                              "percent": "50.0"
                            },
                            "entity_name": null,
                            "entity_type": null,
                            "entity_uid": null,
                            "fee_type": null,
                            "grand_total": "10.0",
                            "item_index": 0,
                            "name": "Hair Conditioner",
                            "orig_taxes": [],
                            "partial_payments_amount": "0.0",
                            "quantity": 2.0,
                            "sub_total": "10.0",
                            "taxes": [],
                            "uid": "ktahe298wvsgzzm7",
                            "unit_amount": "10.0"
                          }
                        ],
                        "name": "Taylor Swift",
                        "section_index": 0,
                        "total_amount": "10.0",
                        "uid": "yyl0mlay0kf357hb"
                      }
                    ],
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": "Payment is due on the specified due date.",
                    "total": 20,
                    "total_tax": 0,
                    "uid": "a410b2fhs8wwwxpk"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/invoices/{invoice_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "fetch a specific invoice",
        "parameters": [
          {
            "description": "Invoice UID",
            "in": "path",
            "name": "invoice_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "additional_recipients": [],
                    "allow_online_payment": false,
                    "allow_partial_payment": false,
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "businessbef050d548878525",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-08-05",
                    "invoice_label": "INVOICE",
                    "invoice_number": "1",
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_name": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "fee_type": null,
                        "grand_total": "20.0",
                        "item_index": null,
                        "name": "Hair Conditioner",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 2.0,
                        "sub_total": "20.0",
                        "taxes": [],
                        "uid": "hgfrb6a3zoat965y",
                        "unit_amount": "10.0"
                      }
                    ],
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "xdnlwly0alkhctsx",
                    "metadata": {
                      "display_items_total": true,
                      "display_sections_total": true,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": null,
                    "payment_status_uid": "lqg45ygzykxilgqd",
                    "purchase_order": null,
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": null,
                    "total": 20,
                    "total_tax": 0,
                    "uid": "59ny6pi00qjyww82"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/invoices/{invoice_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "update an existing invoice",
        "parameters": [
          {
            "description": "Invoice UID",
            "in": "path",
            "name": "invoice_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "invoice": {
                  "properties": {
                    "additional_recipients": {
                      "description": "An array of email addresses of additional recipients to notify",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "allow_online_payment": {
                      "description": "translation missing: en.payments-api.business.invoices.create.update.allow_online_payment",
                      "type": "boolean"
                    },
                    "allow_partial_payment": {
                      "description": "translation missing: en.payments-api.business.invoices.create.update.allow_partial_payment",
                      "type": "boolean"
                    },
                    "billing_address": {
                      "description": "Business billing address",
                      "type": "string"
                    },
                    "business_name": {
                      "description": "The business name",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "display_items_total": {
                      "description": "Indicates wheter items total amounts should be displayed in the invoice. Default is true",
                      "type": "boolean"
                    },
                    "display_sections_total": {
                      "description": "Indicates wheter sections total amounts should be displayed in the invoice. Default is true",
                      "type": "boolean"
                    },
                    "due_date": {
                      "description": "The date when the invoice payment is due, in YYYY-MM-DD format (based on the timezone of the business), must be equal or greater than the invoice issue date",
                      "type": "string"
                    },
                    "invoice_label": {
                      "description": "The invoice label",
                      "type": "string"
                    },
                    "invoice_number": {
                      "description": "A unique invoice number",
                      "type": "number"
                    },
                    "issue_date": {
                      "description": "Invoice date, in YYYY-MM-DD format (based on the timezone of the business)",
                      "type": "string"
                    },
                    "items": {
                      "description": "An array of invoice item information. At least one item is required. All invoice items will be replaced with the provided items. Exisitng item that won't be provided will be removed.",
                      "items": {
                        "properties": {
                          "description": {
                            "description": "The item description",
                            "type": "string"
                          },
                          "discount": {
                            "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                            "properties": {
                              "amount": {
                                "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                "type": "number"
                              },
                              "percent": {
                                "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "entity_type": {
                            "description": "Possible values: Service / Product / BookingPackage /  Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                            "type": "string"
                          },
                          "entity_uid": {
                            "description": "The UID of the entity",
                            "type": "string"
                          },
                          "name": {
                            "description": "The item name",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "The quantity of the item, must be greater than 0. The quantity of an item with one of the following entity types must be 1: Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                            "type": "number"
                          },
                          "tax_uids": {
                            "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "uid": {
                            "description": "The item UID. Provide when updating an existing item.",
                            "type": "string"
                          },
                          "unit_amount": {
                            "description": "The unit amount of the item",
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "quantity",
                          "unit_amount"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "note": {
                      "description": "A note for the invoice recipient",
                      "type": "string"
                    },
                    "notify_recipient": {
                      "description": "Indicates whether to send the invoice to the recipient. This can be set only on ISSUED invoice. Default value: true",
                      "type": "boolean"
                    },
                    "purchase_order": {
                      "description": "Purchase Order",
                      "type": "string"
                    },
                    "sections": {
                      "description": "An array of invoice sections information. requires if not general items provided.",
                      "items": {
                        "properties": {
                          "items": {
                            "description": "An array of invoice item information. At least one item is required (unless sections provided).",
                            "items": {
                              "properties": {
                                "description": {
                                  "description": "The item description",
                                  "type": "string"
                                },
                                "discount": {
                                  "description": "Discount as a percent or amount. The discount amount is subtracted from the item total.",
                                  "properties": {
                                    "amount": {
                                      "description": "Discount amount being applied to an item. Valus must be greater than 0.",
                                      "type": "number"
                                    },
                                    "percent": {
                                      "description": "Percentage discount being applied to an item. Value must be greater than 0 and less than or equal to 100.",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "entity_type": {
                                  "description": "Possible values: Service / Product / BookingPackage /  Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                                  "type": "string"
                                },
                                "entity_uid": {
                                  "description": "The UID of the entity",
                                  "type": "string"
                                },
                                "item_index": {
                                  "description": "the order of the item in the section / invoice (if not inside a section)",
                                  "type": "number"
                                },
                                "name": {
                                  "description": "The item name",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "The quantity of the item, must be greater than 0. The quantity of an item with one of the following entity types must be 1: Meeting / EventAttendance / ProductOrder / ClientBookingPackage",
                                  "type": "number"
                                },
                                "tax_uids": {
                                  "description": "An array of tax UIDs applied to an item. Up to 3 taxes per item are allowed.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "unit_amount": {
                                  "description": "The unit amount of the item",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "name",
                                "quantity",
                                "unit_amount",
                                "item_index"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "The section name",
                            "type": "string"
                          },
                          "section_index": {
                            "description": "the order of the section among all sections",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "section_index"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of the invoice. The possible values are: DRAFT / ISSUED.",
                      "type": "string"
                    },
                    "terms_and_conditions": {
                      "description": "The terms and conditions of the invoice",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "invoice"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "additional_recipients": [],
                    "allow_online_payment": false,
                    "allow_partial_payment": false,
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "businessbef050d548878525",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-08-05",
                    "invoice_label": "INVOICE",
                    "invoice_number": "1",
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_name": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "fee_type": null,
                        "grand_total": "20.0",
                        "item_index": null,
                        "name": "Hair Conditioner",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 2.0,
                        "sub_total": "20.0",
                        "taxes": [],
                        "uid": "hgfrb6a3zoat965y",
                        "unit_amount": "10.0"
                      }
                    ],
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "xdnlwly0alkhctsx",
                    "metadata": {
                      "display_items_total": true,
                      "display_sections_total": true,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": null,
                    "payment_status_uid": "lqg45ygzykxilgqd",
                    "purchase_order": null,
                    "status": "ISSUED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": null,
                    "total": 20,
                    "total_tax": 0,
                    "uid": "59ny6pi00qjyww82"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "update",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/invoices/{invoice_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/invoices/{invoice_uid}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Cancels an Invoice",
        "parameters": [
          {
            "description": "Invoice UID",
            "in": "path",
            "name": "invoice_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "unlink_activities": {
                  "description": "Define whether assocaited activities should be canceled of not. If true, assoicated activited will not be canceled and will be unlinked from the invoice. Otherwise, associated activities will remain attached to the invoice and get canceled.",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "additional_recipients": [],
                    "allow_online_payment": false,
                    "allow_partial_payment": false,
                    "billing_address": "1 Bay St, San Francisco, CA, United States",
                    "business_name": "businessbef050d548878525",
                    "client_name": "First name",
                    "contact_details": null,
                    "currency": "USD",
                    "due_date": "2025-08-05",
                    "invoice_label": "INVOICE",
                    "invoice_number": "1",
                    "issue_date": "2025-08-05",
                    "items": [
                      {
                        "cost": null,
                        "currency": "USD",
                        "description": null,
                        "discount": null,
                        "entity_name": null,
                        "entity_type": null,
                        "entity_uid": null,
                        "fee_type": null,
                        "grand_total": "20.0",
                        "item_index": null,
                        "name": "Hair Conditioner",
                        "orig_taxes": [],
                        "partial_payments_amount": "0.0",
                        "quantity": 2.0,
                        "sub_total": "20.0",
                        "taxes": [],
                        "uid": "hgfrb6a3zoat965y",
                        "unit_amount": "10.0"
                      }
                    ],
                    "matter_details": null,
                    "matter_name": "First name",
                    "matter_term": "Client",
                    "matter_uid": "xdnlwly0alkhctsx",
                    "metadata": {
                      "display_items_total": true,
                      "display_sections_total": true,
                      "pdf_customization": {
                        "color": null,
                        "cover": null,
                        "logo_size": null,
                        "template": null
                      },
                      "tax_mode": "exclude"
                    },
                    "note": null,
                    "payment_status_uid": "lqg45ygzykxilgqd",
                    "purchase_order": null,
                    "status": "CANCELLED",
                    "subtotal": "20.0",
                    "taxes": [],
                    "terms_and_conditions": null,
                    "total": 20,
                    "total_tax": 0,
                    "uid": "59ny6pi00qjyww82"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Cancel Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/invoices/{invoice_uid}/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/packages/reorder": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "packages": {
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Package ID",
                        "type": "string"
                      },
                      "order": {
                        "description": "The position of the package in the packages list.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "order",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Packages Updated",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Reorder packages [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/packages/order"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payment_requests": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "GET Payment Requests List",
        "parameters": [
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, due_date, state, entity_type.  available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: client_uid: filter[client_uid][eq]=123. \n                                                                                           matter_uid: filter[matter_uid][eq]=123.\n                                                                                           state: filter[state][in]=DUE/OVERDUE/NOT_YET_DUE/PAID/CANCELLED. \n                                                                                           created_at: filter[created_at][eq/lt/lte/gt/gte]=2019-01-01.\n                                                                                           updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2019-01-01.\n                                                                                           due_date: filter[due_date][eq/lt/lte/gt/gte]=2019-01-01.\n                                                                                           entity_type: filter[entity_type][in]=Cart,Invoice,Meeting,EventAttendance,ProductOrder,ClientBookingPackage,Payou,PendingBooking,PendingClientBookingPackage.\n                                                                                           entity_uid: allowed only with one matching entity_type. for example: filter[entity_uid][eq]=123&filter[entity_type][in]=Meeting\n                                                                                           amount_pending: filter[amount_pending][eq/lt/lte/gt/gte]=100.\n                                                                                           amount_paid: filter[amount_paid][eq/lt/lte/gt/gte]=100.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payment_requests": [
                    {
                      "amount": "100.0",
                      "amount_before_coupon": null,
                      "amount_paid": 0.0,
                      "amount_pending": null,
                      "created_at": "2025-08-05T09:54:24.230+03:00",
                      "currency": "USD",
                      "display": true,
                      "due_date": "2025-08-05T00:00:00.000+03:00",
                      "fees_amount": 0.0,
                      "matter_uid": "jhtunvqcadvvqiwu",
                      "net_amount": "100.0",
                      "paid_at": null,
                      "pait_at": null,
                      "payable_type": "ProductOrder",
                      "payable_uid": "667yhdpqpielqq7s",
                      "sellable_name": "Shampoo",
                      "staff_uid": "05a2a75fc9b4f022",
                      "state": "pending",
                      "tax_mode": "exclude",
                      "taxes": [],
                      "tips_amount": 0.0,
                      "uid": "05ivcq2c5o62vebm",
                      "updated_at": "2025-08-05T09:54:24.230+03:00"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "GET Payment Requests List",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payment_requests"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payment_requests/{payment_request_id}/send_link": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Send payment request link",
        "parameters": [
          {
            "description": "Payment Request UID",
            "in": "path",
            "name": "payment_request_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "channel": {
                  "description": "Email or sms.",
                  "type": "string"
                }
              },
              "required": [
                "channel"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Send payment request link",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payment_requests/{payment_request_id}/send_link"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payment_requests/{payment_request_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "GET Payment Request",
        "parameters": [
          {
            "description": "Payment Request UID",
            "in": "path",
            "name": "payment_request_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payment_request": {
                    "amount": "100.0",
                    "amount_before_coupon": null,
                    "amount_paid": 0.0,
                    "amount_pending": null,
                    "created_at": "2025-08-05T09:54:24.230+03:00",
                    "currency": "USD",
                    "display": true,
                    "due_date": "2025-08-05T00:00:00.000+03:00",
                    "fees_amount": 0.0,
                    "matter_uid": "jhtunvqcadvvqiwu",
                    "net_amount": "100.0",
                    "paid_at": null,
                    "pait_at": null,
                    "payable_type": "ProductOrder",
                    "payable_uid": "667yhdpqpielqq7s",
                    "sellable_name": "Shampoo",
                    "staff_uid": "05a2a75fc9b4f022",
                    "state": "pending",
                    "tax_mode": "exclude",
                    "taxes": [],
                    "tips_amount": 0.0,
                    "uid": "05ivcq2c5o62vebm",
                    "updated_at": "2025-08-05T09:54:24.230+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "GET Payment Request",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payment_requests/{payment_request_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "update an existing payment request",
        "parameters": [
          {
            "description": "Payment request uid",
            "in": "path",
            "name": "payment_request_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_request": {
                  "properties": {
                    "currency": {
                      "description": "The currency of the payment request",
                      "type": "string"
                    },
                    "net_price": {
                      "description": "net price of the payment request",
                      "type": "number"
                    },
                    "price": {
                      "description": "total price of the payment request",
                      "type": "number"
                    },
                    "price_before_coupon": {
                      "description": "The price before coupon. if the payment request contain taxes, then this field value is depended on the tax_mode. if taxes are included inside the value, then the price_before_coupon value should include taxes. otherwise, it should not include taxes.",
                      "type": "number"
                    },
                    "tax_uids": {
                      "description": "Array of tax_uids (strings)",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "payment_request"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payment_request": {
                    "amount": "100.0",
                    "amount_before_coupon": null,
                    "amount_paid": 0.0,
                    "amount_pending": null,
                    "created_at": "2025-08-05T09:54:24.230+03:00",
                    "currency": "USD",
                    "display": true,
                    "due_date": "2025-08-05T00:00:00.000+03:00",
                    "fees_amount": 0.0,
                    "matter_uid": "jhtunvqcadvvqiwu",
                    "net_amount": "100.0",
                    "paid_at": null,
                    "pait_at": null,
                    "payable_type": "ProductOrder",
                    "sellable_name": "Shampoo",
                    "staff_uid": "05a2a75fc9b4f022",
                    "state": "pending",
                    "tax_mode": "exclude",
                    "taxes": [],
                    "tips_amount": 0.0,
                    "uid": "05ivcq2c5o62vebm",
                    "updated_at": "2025-08-05T09:54:24.230+03:00"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "update",
        "tags": [
          "Payment Requests"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payment_requests/{payment_request_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "payments": [
                      {
                        "amount": 550,
                        "business_uid": "6bms9hebq9uv6ptm",
                        "created_at": "2023-03-29T17:07:11Z",
                        "currency": "ILS",
                        "marked_as_online": false,
                        "matter_uid": "aso2xnyeg1zytb4w",
                        "net_total": 500,
                        "other_payment_method": null,
                        "paid_online": false,
                        "payment_method": "Cash",
                        "payment_request_uid": "oic742ep8r7oxkl5",
                        "payment_time": "2023-03-29T17:06:59Z",
                        "provider_state": null,
                        "provider_transaction_id": null,
                        "reference": null,
                        "state": "paid",
                        "taxes": [
                          {
                            "name": "TTT",
                            "rate": 10,
                            "tax_total": 50
                          }
                        ],
                        "title": "INVOICE #0000011",
                        "uid": "49trm2x2vj43gita",
                        "updated_at": "2023-03-29T17:07:13Z"
                      }
                    ]
                  },
                  "success": true
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "missing",
                    "message": "Not Found"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "List Payments",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payments/{payment_uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "payment id",
            "in": "path",
            "name": "payment_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Payment found",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "payment": {
                      "amount": 550,
                      "business_uid": "6bms9hebq9uv6ptm",
                      "created_at": "2023-03-29T17:07:11Z",
                      "currency": "ILS",
                      "marked_as_online": false,
                      "matter_uid": "aso2xnyeg1zytb4w",
                      "net_total": 500,
                      "other_payment_method": null,
                      "paid_online": false,
                      "payment_method": "Cash",
                      "payment_request_uid": "oic742ep8r7oxkl5",
                      "payment_time": "2023-03-29T17:06:59Z",
                      "provider_state": null,
                      "provider_transaction_id": null,
                      "reference": null,
                      "state": "paid",
                      "taxes": [
                        {
                          "name": "TTT",
                          "rate": 10,
                          "tax_total": 50
                        }
                      ],
                      "title": "INVOICE #0000011",
                      "uid": "49trm2x2vj43gita",
                      "updated_at": "2023-03-29T17:07:13Z"
                    }
                  },
                  "success": true
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "missing",
                    "field": "payment_uid",
                    "message": "Not Found"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.payment_uid": "method.request.path.payment_uid"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payments/{payment_uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "If the payment's internal uid is known, use it. Otherwise, set it to be the transaction_id and set use_external_id to be true",
            "in": "path",
            "name": "payment_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment": {
                  "properties": {
                    "error_data": {
                      "properties": {
                        "message": {
                          "description": "Error message for a failed payment",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "provider_state": {
                      "description": "Custom state set by gateway provider",
                      "type": "string"
                    },
                    "state": {
                      "description": "The updated state of a payment. For 'pending' payment, it can be either 'paid' or 'failed'. For 'paid' payment, it can be either 'cancelled' or 'refunded' ",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "use_external_id": {
                  "description": "Set it to true if payment_uid is the transaction_id. Otherwise, ignore this parameter.",
                  "type": "boolean"
                }
              },
              "required": [
                "payment"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Payment Updated",
            "examples": {
              "application/json": {
                "data": {
                  "payment": {
                    "amount": 550,
                    "business_uid": "6bms9hebq9uv6ptm",
                    "created_at": "2023-03-29T17:07:11Z",
                    "currency": "ILS",
                    "marked_as_online": false,
                    "matter_uid": "aso2xnyeg1zytb4w",
                    "net_total": 500,
                    "other_payment_method": null,
                    "paid_online": false,
                    "payment_method": "Cash",
                    "payment_request_uid": "oic742ep8r7oxkl5",
                    "payment_time": "2023-03-29T17:06:59Z",
                    "provider_state": null,
                    "provider_transaction_id": "m73jkvg4bf2z71b2",
                    "reference": null,
                    "state": "paid",
                    "taxes": [
                      {
                        "name": "TTT",
                        "rate": 10,
                        "tax_total": 50
                      }
                    ],
                    "title": "INVOICE #0000011",
                    "uid": "49trm2x2vj43gita",
                    "updated_at": "2023-03-29T17:07:13Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.payment_uid": "method.request.path.payment_uid"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payments/{payment_uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payouts": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Payout",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payout": {
                  "properties": {
                    "account_number": {
                      "description": "Payout Account Number",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "fee": {
                      "description": "Payout Fee Amount",
                      "type": "string"
                    },
                    "net": {
                      "description": "Payout Net Amount",
                      "type": "string"
                    },
                    "other": {
                      "description": "Payout Remaining Amount",
                      "type": "string"
                    },
                    "processed_time": {
                      "description": "Payout processed time",
                      "type": "string"
                    },
                    "provider_created_time": {
                      "description": "Provider Create Time",
                      "type": "string"
                    },
                    "provider_payout_id": {
                      "description": "Provider Payout ID",
                      "type": "string"
                    },
                    "provider_updated_time": {
                      "description": "Provider Update Time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Payout Status",
                      "type": "string"
                    },
                    "total_amount": {
                      "description": "Total Amount",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider_payout_id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "payout"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payout": {
                    "account_number": "1111",
                    "business_uid": "34820dbe698926dd",
                    "created_at": "2025-08-05T06:54:29Z",
                    "currency": "USD",
                    "fee": "33.54",
                    "net": "300.0",
                    "other": "0.01",
                    "processed_time": "2022-12-02T18:00:00Z",
                    "provider_created_time": "2022-12-01T08:00:00Z",
                    "provider_payout_id": "a103c48a8c0f706c",
                    "provider_updated_time": "2022-12-02T18:00:00Z",
                    "status": "Processed",
                    "total_amount": "333.55",
                    "uid": "th5fm59vetqe0i7k",
                    "updated_at": "2025-08-05T06:54:29Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Payout",
        "tags": [
          "Payouts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payouts"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/payouts/{provider_payout_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a Payout",
        "parameters": [
          {
            "description": "Provider Payout ID",
            "in": "path",
            "name": "provider_payout_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payout": {
                    "account_number": "1111",
                    "business_uid": "34820dbe698926dd",
                    "created_at": "2025-08-05T06:54:29Z",
                    "currency": "USD",
                    "fee": "33.54",
                    "net": "300.0",
                    "other": "0.01",
                    "processed_time": "2022-12-02T18:00:00Z",
                    "provider_created_time": "2022-12-01T08:00:00Z",
                    "provider_payout_id": "d00d8d0fed649b9a",
                    "provider_updated_time": "2022-12-02T18:00:00Z",
                    "status": "Processed",
                    "total_amount": "333.55",
                    "uid": "o82mnnnz24ro2avo",
                    "updated_at": "2025-08-05T06:54:29Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Payout",
        "tags": [
          "Payouts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payouts/{provider_payout_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Payout",
        "parameters": [
          {
            "description": "Provider Payout ID",
            "in": "path",
            "name": "provider_payout_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payout": {
                  "properties": {
                    "account_number": {
                      "description": "Payout Account Number",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "fee": {
                      "description": "Payout Fee Amount",
                      "type": "string"
                    },
                    "net": {
                      "description": "Payout Net Amount",
                      "type": "string"
                    },
                    "other": {
                      "description": "Payout Remaining Amount",
                      "type": "string"
                    },
                    "processed_time": {
                      "description": "Payout processed time",
                      "type": "string"
                    },
                    "provider_created_time": {
                      "description": "Provider Create Time",
                      "type": "string"
                    },
                    "provider_updated_time": {
                      "description": "Provider Update Time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Payout Status",
                      "type": "string"
                    },
                    "total_amount": {
                      "description": "Total Amount",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "payout"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "payout": {
                    "account_number": "1111",
                    "business_uid": "34820dbe698926dd",
                    "created_at": "2025-08-05T06:54:29Z",
                    "currency": "USD",
                    "fee": "33.54",
                    "net": "300.0",
                    "other": "0.01",
                    "processed_time": "2022-12-02T18:00:00Z",
                    "provider_created_time": "2022-12-01T08:00:00Z",
                    "provider_payout_id": "d00d8d0fed649b9a",
                    "provider_updated_time": "2022-12-02T18:00:00Z",
                    "status": "Processed",
                    "total_amount": "333.55",
                    "uid": "o82mnnnz24ro2avo",
                    "updated_at": "2025-08-05T06:54:29Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Payout",
        "tags": [
          "Payouts"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/payouts/{provider_payout_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/product_orders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Product Order",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "product_order": {
                  "properties": {
                    "client_id": {
                      "description": "Client UID",
                      "type": "string"
                    },
                    "matter_uid": {
                      "description": "Matter UID",
                      "type": "string"
                    },
                    "price": {
                      "description": "Price. Default: product price.",
                      "type": "number"
                    },
                    "product_id": {
                      "description": "Product UID",
                      "type": "string"
                    },
                    "tax_ids": {
                      "description": "Tax UIDs. Default: product taxes. [] will remove the product's taxes. Up to 3 taxes per product are allowed.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "client_id",
                    "product_id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "product_order"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "product_order": {
                    "client_id": "u9mqcvkj4s4l5c44",
                    "cost": null,
                    "created_at": "2025-08-05T09:54:33.423+03:00",
                    "currency": "USD",
                    "description": "Best hair shampoo",
                    "id": "irtbidn0039v6c7e",
                    "matter_uid": "46nrcmt1lzeyccsg",
                    "name": "Shampoo",
                    "payment_request_id": "3nzp3dnyxwhu8glv",
                    "payment_request_state": "pending",
                    "price": "5.0",
                    "product_id": "kg3mnfc8j9qvqeu2",
                    "staff_id": "6d9ec6fb26d819cc",
                    "taxes": [
                      {
                        "name": "VAT",
                        "rate": 10.0,
                        "tax_total": 0.5
                      }
                    ],
                    "total_price": "5.5"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Product Order",
        "tags": [
          "Product Orders"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/product_orders"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/product_orders/{product_order_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a Product Order",
        "parameters": [
          {
            "description": "Product Order UID",
            "in": "path",
            "name": "product_order_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "product_order": {
                    "client_id": "u9mqcvkj4s4l5c44",
                    "cost": null,
                    "created_at": "2025-08-05T09:54:31.840+03:00",
                    "currency": "USD",
                    "description": "Best hair shampoo",
                    "id": "j1yv50998tacuuod",
                    "matter_uid": "46nrcmt1lzeyccsg",
                    "name": "Shampoo",
                    "payment_request_id": "oki75v7odnl6l9at",
                    "payment_request_state": "pending",
                    "price": "10.0",
                    "product_id": "kg3mnfc8j9qvqeu2",
                    "staff_id": "6d9ec6fb26d819cc",
                    "taxes": [
                      {
                        "name": "VAT",
                        "rate": 10.0,
                        "tax_total": 1.0
                      }
                    ],
                    "total_price": "11.0"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Product Order",
        "tags": [
          "Product Orders"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/product_orders/{product_order_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Product Order",
        "parameters": [
          {
            "description": "Product Order UID",
            "in": "path",
            "name": "product_order_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "product_order": {
                  "properties": {
                    "price": {
                      "description": "Price",
                      "type": "number"
                    },
                    "tax_ids": {
                      "description": "Tax UIDs. [] will remove the product order's taxes. Up to 3 taxes per product order are allowed.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "product_order"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "product_order": {
                    "client_id": "u9mqcvkj4s4l5c44",
                    "cost": null,
                    "created_at": "2025-08-05T09:54:31.840+03:00",
                    "currency": "USD",
                    "description": "Best hair shampoo",
                    "id": "j1yv50998tacuuod",
                    "matter_uid": "46nrcmt1lzeyccsg",
                    "name": "Shampoo",
                    "payment_request_id": "oki75v7odnl6l9at",
                    "payment_request_state": "pending",
                    "price": "100.0",
                    "product_id": "kg3mnfc8j9qvqeu2",
                    "staff_id": "6d9ec6fb26d819cc",
                    "taxes": [
                      {
                        "name": "VAT",
                        "rate": 10.0,
                        "tax_total": 10.0
                      }
                    ],
                    "total_price": "110.0"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Product Order",
        "tags": [
          "Product Orders"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/product_orders/{product_order_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/products": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: display=true / display=false (return only products with display set to true / false). Usage: filter[display]=true. contains=search_string (return only products containing the provided search_string in their name or in their SKU). Usage: filter[contains]=\u2018search_string.\u2019",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Products Returned",
            "examples": {
              "application/json": {
                "data": {
                  "products": [
                    {
                      "business_id": "vk8xo7s125mi1ln2",
                      "cost": "50.0",
                      "created_at": "2020-10-05T16:46:34.225+03:00",
                      "currency": "USD",
                      "description": "Classic",
                      "display": true,
                      "id": "5ea8ouxnkd4avj0c",
                      "image_url": "https://www.image.url",
                      "name": "Guitar",
                      "price": "100.0",
                      "sku": "ABC123",
                      "staff_id": "cx2ynjcmftohut0h",
                      "taxes": [
                        {
                          "id": "wz93stkj9vuicx4p",
                          "name": "VAT",
                          "rate": "10.0"
                        }
                      ],
                      "total_price": "110.0"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Products List",
        "tags": [
          "Products"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/products"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Each business has a limit of 8,500 products",
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "product": {
                  "properties": {
                    "cost": {
                      "description": "Product cost",
                      "type": "number"
                    },
                    "currency": {
                      "description": "Product currency",
                      "type": "string"
                    },
                    "description": {
                      "description": "Product description",
                      "type": "string"
                    },
                    "display": {
                      "description": "Display on products list. Default: true",
                      "type": "boolean"
                    },
                    "image_url": {
                      "description": "Product image URL",
                      "type": "string"
                    },
                    "name": {
                      "description": "Product name",
                      "type": "string"
                    },
                    "price": {
                      "description": "Product price",
                      "type": "number"
                    },
                    "sku": {
                      "description": "Product SKU - must be unique per business",
                      "type": "string"
                    },
                    "tax_ids": {
                      "description": "Product Tax IDs",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "name",
                    "price"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "product"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Product Created",
            "examples": {
              "application/json": {
                "data": {
                  "product": {
                    "business_id": "vk8xo7s125mi1ln2",
                    "cost": "50.0",
                    "created_at": "2020-10-05T16:46:34.225+03:00",
                    "currency": "USD",
                    "description": "Classic",
                    "display": true,
                    "id": "5ea8ouxnkd4avj0c",
                    "image_url": "https://www.image.url",
                    "name": "Guitar",
                    "price": "100.0",
                    "sku": "ABC123",
                    "staff_id": "cx2ynjcmftohut0h",
                    "taxes": [
                      {
                        "id": "wz93stkj9vuicx4p",
                        "name": "VAT",
                        "rate": "10.0"
                      }
                    ],
                    "total_price": "110.0"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Product",
        "tags": [
          "Products"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/products"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/products/{product_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Product Removed",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Remove Product [Alpha]",
        "tags": [
          "Products"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.product_id": "method.request.path.product_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/products/{product_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Product Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "product": {
                    "business_id": "vk8xo7s125mi1ln2",
                    "cost": "50.0",
                    "created_at": "2020-10-05T16:46:34.225+03:00",
                    "currency": "USD",
                    "description": "Classic",
                    "display": true,
                    "id": "5ea8ouxnkd4avj0c",
                    "image_url": "https://www.image.url",
                    "name": "Guitar",
                    "price": "100.0",
                    "sku": "ABC123",
                    "staff_id": "cx2ynjcmftohut0h",
                    "taxes": [
                      {
                        "id": "wz93stkj9vuicx4p",
                        "name": "VAT",
                        "rate": "10.0"
                      }
                    ],
                    "total_price": "110.0"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Product [Alpha]",
        "tags": [
          "Products"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.product_id": "method.request.path.product_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/products/{product_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "product_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "product": {
                  "properties": {
                    "cost": {
                      "description": "Product cost",
                      "type": "number"
                    },
                    "description": {
                      "description": "Product description",
                      "type": "string"
                    },
                    "display": {
                      "description": "Display on products list",
                      "type": "boolean"
                    },
                    "image_url": {
                      "description": "Product image URL",
                      "type": "string"
                    },
                    "name": {
                      "description": "Product name",
                      "type": "string"
                    },
                    "price": {
                      "description": "Product price",
                      "type": "number"
                    },
                    "sku": {
                      "description": "Product SKU - must be unique per business",
                      "type": "string"
                    },
                    "tax_ids": {
                      "description": "Product Tax IDs. [] will remove the product's taxes. Up to 3 taxes per product are allowed.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "product"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Product Updated",
            "examples": {
              "application/json": {
                "data": {
                  "product": {
                    "business_id": "vk8xo7s125mi1ln2",
                    "cost": "50.0",
                    "created_at": "2020-10-05T16:46:34.225+03:00",
                    "currency": "USD",
                    "description": "Classic",
                    "display": true,
                    "id": "5ea8ouxnkd4avj0c",
                    "image_url": "https://www.image.url",
                    "name": "Guitar",
                    "price": "100.0",
                    "sku": "ABC123",
                    "staff_id": "cx2ynjcmftohut0h",
                    "taxes": [
                      {
                        "id": "wz93stkj9vuicx4p",
                        "name": "VAT",
                        "rate": "10.0"
                      }
                    ],
                    "total_price": "110.0"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Product",
        "tags": [
          "Products"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.product_id": "method.request.path.product_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/products/{product_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/refunds": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Refund",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "refund": {
                  "properties": {
                    "amount": {
                      "description": "The amount to refund. If not specified, the remaining amount of the payment will be refunded (original payment amount minus previously refunded amount).",
                      "type": "number"
                    },
                    "payment_uid": {
                      "description": "The UID of the payment to refund. Either payment_uid or provider_transaction_id is required.",
                      "type": "string"
                    },
                    "provider_refund_id": {
                      "description": "Provider refund ID. Can be provided when record_refund is set to true.",
                      "type": "string"
                    },
                    "provider_transaction_id": {
                      "description": "The provider transaction ID of the payment to refund. Either payment_uid or provider_transaction_id is required.",
                      "type": "string"
                    },
                    "record_refund": {
                      "description": "Record refund. Set to true to record a previously processed refund. Default value: false",
                      "type": "boolean"
                    },
                    "refund_time": {
                      "description": "Refund time (in ISO 8601 format). Can be provided when record_refund is set to true.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "payment_uid",
                    "provider_transaction_id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "refund"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "refund": {
                    "amount": "10.0",
                    "created_at": "2025-08-05T06:54:43Z",
                    "currency": "USD",
                    "payment_uid": "j09s0ve386dnzjvw",
                    "provider_refund_id": null,
                    "refund_time": "2025-08-05T06:54:43Z",
                    "staff_uid": "4b58e5bb45c1b0ac",
                    "uid": "80rwbw4wehojb9nl",
                    "updated_at": "2025-08-05T06:54:43Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Refund",
        "tags": [
          "Refunds"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/refunds"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/scheduled_payments_rules": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get a list of Scheduled Payment Rules",
        "parameters": [
          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "scheduled_payments_rules": [
                    {
                      "amount": "50.0",
                      "amount_paid": "0.0",
                      "canceled_by": "",
                      "canceled_date": null,
                      "created_at": "2025-08-05T06:54:49Z",
                      "currency": "USD",
                      "cycles": 20,
                      "cycles_count": 0,
                      "description": "schedule payment rule example",
                      "end_date": "2025-12-17T07:56:00Z",
                      "frequency_type": "weekly",
                      "matter_uid": "js7c2h9g3zwbigf8",
                      "name": "schedule payment rule",
                      "next_payment_time": "2025-08-06T06:56:00Z",
                      "payment_method": {
                        "type": "card",
                        "uid": "tkej8m7xm6ixx6zt"
                      },
                      "rrule": "---\n:start_time: &1\n  :time: 2025-08-06 06:56:00.000000000 Z\n  :zone: Central Time (US & Canada)\n:start_date: *1\n:rrules:\n- :validations: {}\n  :rule_type: IceCube::WeeklyRule\n  :interval: 1\n  :week_start: 0\n  :count: 20\n:rtimes: []\n:extimes: []\n",
                      "staff_uid": "1c3ab579d2d31fbb",
                      "start_date": "2025-08-06T06:56:00Z",
                      "status": "active",
                      "uid": "skt1h1awrkiv6he1",
                      "updated_at": "2025-08-05T06:54:49Z"
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get list of Scheduled Payment Rules",
        "tags": [
          "Scheduled Payment Rule"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/scheduled_payments_rules"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Scheduled Payment Rule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "scheduled_payments_rule": {
                  "properties": {
                    "amount": {
                      "description": "Scheduled Payment amount",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "cycles": {
                      "description": "Scheduled Payment Rule cycles",
                      "type": "string"
                    },
                    "description": {
                      "description": "Scheduled Payment Rule description",
                      "type": "string"
                    },
                    "frequency_type": {
                      "description": "Scheduled Payment Rule frequency type. Possible values: OneTime / Weekly / Monthly",
                      "type": "string"
                    },
                    "matter_uid": {
                      "description": "Related Matter UID",
                      "type": "string"
                    },
                    "name": {
                      "description": "Scheduled Payment Rule name",
                      "type": "string"
                    },
                    "payment_method": {
                      "properties": {
                        "type": {
                          "description": "Scheduled Payment Rule payment method type. Possible values: card",
                          "type": "string"
                        },
                        "uid": {
                          "description": "Related Card UID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "send_receipt": {
                      "description": "Indicates whether to send a receipt to the client",
                      "type": "string"
                    },
                    "start_date": {
                      "description": "Scheduled Payment start date",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "amount",
                    "currency",
                    "start_date",
                    "frequency_type",
                    "cycles",
                    "send_receipt",
                    "matter_uid",
                    "payment_method"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "scheduled_payments_rule"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "scheduled_payments_rule": {
                    "amount": "50.0",
                    "amount_paid": "0.0",
                    "canceled_by": "",
                    "canceled_date": null,
                    "created_at": "2025-08-05T06:54:50Z",
                    "currency": "USD",
                    "cycles": 20,
                    "cycles_count": 0,
                    "description": "schedule payment rule example",
                    "end_date": "2025-12-17T07:56:00Z",
                    "frequency_type": "weekly",
                    "matter_uid": "js7c2h9g3zwbigf8",
                    "name": "schedule payment rule",
                    "next_payment_time": "2025-08-06T06:56:00Z",
                    "payment_method": {
                      "type": "card",
                      "uid": "tkej8m7xm6ixx6zt"
                    },
                    "rrule": "---\n:start_time: &1\n  :time: 2025-08-06 06:56:00.000000000 Z\n  :zone: Central Time (US & Canada)\n:start_date: *1\n:rrules:\n- :validations: {}\n  :rule_type: IceCube::WeeklyRule\n  :interval: 1\n  :week_start: 0\n  :count: 20\n:rtimes: []\n:extimes: []\n",
                    "staff_uid": "1c3ab579d2d31fbb",
                    "start_date": "2025-08-06T06:56:00Z",
                    "status": "active",
                    "uid": "7gilictbt12jir3v",
                    "updated_at": "2025-08-05T06:54:50Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Scheduled Payment Rule",
        "tags": [
          "Scheduled Payment Rule"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/scheduled_payments_rules"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/scheduled_payments_rules/{scheduled_payments_rule_uid}/cancel": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Cancels a Recurring Payments Rule",
        "parameters": [
          {
            "description": "Recurring Payments Rule uid",
            "in": "path",
            "name": "scheduled_payments_rule_uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "scheduled_payments_rule": {
                    "amount": "50.0",
                    "amount_paid": "0.0",
                    "canceled_by": "Josephine Harvey",
                    "canceled_date": "2025-08-05T06:54:50Z",
                    "created_at": "2025-08-05T06:54:49Z",
                    "currency": "USD",
                    "cycles": 20,
                    "cycles_count": 0,
                    "description": "schedule payment rule example",
                    "end_date": "2025-12-17T07:56:00Z",
                    "frequency_type": "weekly",
                    "matter_uid": "js7c2h9g3zwbigf8",
                    "name": "schedule payment rule",
                    "next_payment_time": null,
                    "payment_method": {
                      "type": "card",
                      "uid": "tkej8m7xm6ixx6zt"
                    },
                    "rrule": "---\n:start_time: &1\n  :time: 2025-08-06 06:56:00.000000000 Z\n  :zone: Central Time (US & Canada)\n:start_date: *1\n:rrules:\n- :validations: {}\n  :rule_type: IceCube::WeeklyRule\n  :interval: 1\n  :week_start: 0\n  :count: 20\n:rtimes: []\n:extimes: []\n",
                    "staff_uid": "1c3ab579d2d31fbb",
                    "start_date": "2025-08-06T06:56:00Z",
                    "status": "cancelled",
                    "uid": "skt1h1awrkiv6he1",
                    "updated_at": "2025-08-05T06:54:50Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Cancel Recurring Payments Rule",
        "tags": [
          "Scheduled Payment Rule"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/scheduled_payments_rules/{scheduled_payments_rule_uid}/cancel"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/scheduled_payments_rules/{uid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a Scheduled Payment Rule",
        "parameters": [
          {
            "description": "Scheduled Payment Rule UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "scheduled_payments_rule": {
                    "amount": "50.0",
                    "amount_paid": "0.0",
                    "canceled_by": "",
                    "canceled_date": null,
                    "created_at": "2025-08-05T06:54:49Z",
                    "currency": "USD",
                    "cycles": 20,
                    "cycles_count": 0,
                    "description": "schedule payment rule example",
                    "end_date": "2025-12-17T07:56:00Z",
                    "frequency_type": "weekly",
                    "matter_uid": "js7c2h9g3zwbigf8",
                    "name": "schedule payment rule",
                    "next_payment_time": "2025-08-06T06:56:00Z",
                    "payment_method": {
                      "type": "card",
                      "uid": "tkej8m7xm6ixx6zt"
                    },
                    "rrule": "---\n:start_time: &1\n  :time: 2025-08-06 06:56:00.000000000 Z\n  :zone: Central Time (US & Canada)\n:start_date: *1\n:rrules:\n- :validations: {}\n  :rule_type: IceCube::WeeklyRule\n  :interval: 1\n  :week_start: 0\n  :count: 20\n:rtimes: []\n:extimes: []\n",
                    "staff_uid": "1c3ab579d2d31fbb",
                    "start_date": "2025-08-06T06:56:00Z",
                    "status": "active",
                    "uid": "skt1h1awrkiv6he1",
                    "updated_at": "2025-08-05T06:54:49Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Scheduled Payment Rule",
        "tags": [
          "Scheduled Payment Rule"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/scheduled_payments_rules/{uid}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Scheduled Payment Rule",
        "parameters": [
          {
            "description": "Scheduled Payment Rule UID",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "scheduled_payments_rule": {
                  "properties": {
                    "payment_method": {
                      "properties": {
                        "type": {
                          "description": "Scheduled Payment Rule payment method type. Possible values: card",
                          "type": "string"
                        },
                        "uid": {
                          "description": "Related Card UID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "payment_method"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "scheduled_payments_rule"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "scheduled_payments_rule": {
                    "amount": "50.0",
                    "amount_paid": "0.0",
                    "canceled_by": "",
                    "canceled_date": null,
                    "created_at": "2025-08-05T06:54:49Z",
                    "currency": "USD",
                    "cycles": 20,
                    "cycles_count": 0,
                    "description": "schedule payment rule example",
                    "end_date": "2025-12-17T07:56:00Z",
                    "frequency_type": "weekly",
                    "matter_uid": "js7c2h9g3zwbigf8",
                    "name": "schedule payment rule",
                    "next_payment_time": "2025-08-06T06:56:00Z",
                    "payment_method": {
                      "type": "card",
                      "uid": "tkej8m7xm6ixx6zt"
                    },
                    "rrule": "---\n:start_time: &1\n  :time: 2025-08-06 06:56:00.000000000 Z\n  :zone: Central Time (US & Canada)\n:start_date: *1\n:rrules:\n- :validations: {}\n  :rule_type: IceCube::WeeklyRule\n  :interval: 1\n  :week_start: 0\n  :count: 20\n:rtimes: []\n:extimes: []\n",
                    "staff_uid": "1c3ab579d2d31fbb",
                    "start_date": "2025-08-06T06:56:00Z",
                    "status": "active",
                    "uid": "skt1h1awrkiv6he1",
                    "updated_at": "2025-08-05T06:54:49Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Scheduled Payment Rule",
        "tags": [
          "Scheduled Payment Rule"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/scheduled_payments_rules/{uid}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/tax_bulk": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Deletes some taxes",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Tax uids array[] to delete. \n In case of more than one id, query in URL will appear as: \n uids[]=ID1&uids[]=ID2",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "uids[]",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Delete Multiple Taxes",
        "tags": [
          "Bulk Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/tax_bulk"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates some taxes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "data": {
                  "description": "Taxes array",
                  "items": {
                    "properties": {
                      "default_for_categories": {
                        "description": "Determine fow what categories the tax will be applied as default. Can receive one or more from the following items: 'services', 'products', 'packages' ",
                        "type": "string"
                      },
                      "name": {
                        "description": "Tax name",
                        "type": "string"
                      },
                      "rate": {
                        "description": "Tax rate (percentage, up to 3 decimal places). The rate should be greater than 0 and less than or equal to 100.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "name",
                      "rate"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "default_for_categories": [
                      "packages"
                    ],
                    "id": "5nod2gdbux8g853x",
                    "name": "VAT",
                    "rate": 10.0
                  }
                ],
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Multiple Taxes",
        "tags": [
          "Bulk Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/tax_bulk"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates some taxes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "data": {
                  "description": "Taxes array",
                  "items": {
                    "properties": {
                      "default_for_categories": {
                        "description": "Determine fow what categories the tax will be applied as default. Can receive one or more from the following items: 'services', 'products', 'packages' ",
                        "type": "string"
                      },
                      "name": {
                        "description": "Tax name",
                        "type": "string"
                      },
                      "rate": {
                        "description": "Tax rate (percentage, up to 3 decimal places). The rate should be greater than 0 and less than or equal to 100.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "name",
                      "rate"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "data"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "tax": {
                      "default_for_categories": [
                        "packages"
                      ],
                      "id": "8uq6p8w5rhryuojn",
                      "name": "VAT",
                      "rate": 5.0
                    }
                  }
                ],
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Multiple Taxes",
        "tags": [
          "Bulk Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/tax_bulk"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/tax_bulk/apply_defaults": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Apply default taxes on items (Services/Products/Booking Packages) that don't have any taxes configured",

        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "data": {
                    "message": "Default taxes will be applied in the background"
                  },
                  "success": true
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Apply Default Taxes",
        "tags": [
          "Bulk Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/tax_bulk/apply_defaults"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/taxes": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "description": "Page offset (default: 1)",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Taxes Returned",
            "examples": {
              "application/json": {
                "data": {
                  "taxes": [
                    {
                      "default_for_categories": [
                        "packages"
                      ],
                      "id": "4k5v53fnmpdwe4ba",
                      "name": "VAT",
                      "rate": 10.0
                    }
                  ]
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Taxes List [Alpha]",
        "tags": [
          "Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/taxes"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "tax": {
                  "properties": {
                    "default_for_categories": {
                      "description": "Determine fow what categories the tax will be applied as default. Can receive one or more from the following items: 'services', 'products', 'packages' ",
                      "type": "string"
                    },
                    "name": {
                      "description": "Tax name",
                      "type": "string"
                    },
                    "rate": {
                      "description": "Tax rate (percentage, up to 3 decimal places). The rate should be greater than 0 and less than or equal to 100.",
                      "type": "number"
                    }
                  },
                  "required": [
                    "name",
                    "rate"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "tax"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Tax Created",
            "examples": {
              "application/json": {
                "data": {
                  "tax": {
                    "default_for_categories": [
                      "packages"
                    ],
                    "id": "5ea8ouxnkd4avj0c",
                    "name": "VAT",
                    "rate": 10.0
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Tax [Alpha]",
        "tags": [
          "Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/taxes"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/taxes/{tax_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "tax_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Tax Removed",
            "examples": {
              "application/json": {
                "data": {},
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Remove Tax [Alpha]",
        "tags": [
          "Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.tax_id": "method.request.path.tax_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/taxes/{tax_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "tax_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Tax Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "tax": {
                    "default_for_categories": [
                      "packages"
                    ],
                    "id": "4k5v53fnmpdwe4ba",
                    "name": "VAT",
                    "rate": 12.0
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Tax [Alpha]",
        "tags": [
          "Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.tax_id": "method.request.path.tax_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/taxes/{tax_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [

          {
            "in": "path",
            "name": "tax_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "tax": {
                  "properties": {
                    "default_for_categories": {
                      "description": "Determine fow what categories the tax will be applied as default. Can receive one or more from the following items: 'services', 'products', 'packages' ",
                      "type": "string"
                    },
                    "name": {
                      "description": "Tax name",
                      "type": "string"
                    },
                    "rate": {
                      "description": "Tax rate (percentage, up to 3 decimal places). The rate should be greater than 0 and less than or equal to 100.",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "tax"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Tax Updated",
            "examples": {
              "application/json": {
                "data": {
                  "tax": {
                    "default_for_categories": [
                      "packages"
                    ],
                    "id": "4k5v53fnmpdwe4ba",
                    "name": "VAT",
                    "rate": 12.0
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Tax [Alpha]",
        "tags": [
          "Taxes"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.tax_id": "method.request.path.tax_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/taxes/{tax_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/transactions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a Transaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "transaction": {
                  "properties": {
                    "card_bin": {
                      "description": "Payment Card BIN",
                      "type": "string"
                    },
                    "card_brand": {
                      "description": "Payment Card Brand",
                      "type": "string"
                    },
                    "card_issuing_bank": {
                      "description": "Payment Card Issuing Bank Name",
                      "type": "string"
                    },
                    "card_last4": {
                      "description": "Payment Card Last 4 digits",
                      "type": "string"
                    },
                    "cardholder_name": {
                      "description": "Cardholder Name",
                      "type": "string"
                    },
                    "create_time": {
                      "description": "Transaction Create Time",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "error_data": {
                      "description": "Transaction Error Data",
                      "type": "string"
                    },
                    "fee": {
                      "description": "Transaction Fee Amount",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Set of key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.",
                      "type": "string"
                    },
                    "net": {
                      "description": "Transaction Net Amount",
                      "type": "string"
                    },
                    "payment_method": {
                      "description": "The payment method used in the transaction",
                      "enum": [
                        "Credit Card",
                        "Bank Payment - ACH"
                      ],
                      "type": "string"
                    },
                    "provider": {
                      "description": "Provider Name",
                      "type": "string"
                    },
                    "provider_transaction_id": {
                      "description": "Provider Transaction ID",
                      "type": "string"
                    },
                    "related_provider_payout_id": {
                      "description": "The id of the provider payout that the transaction is a part of",
                      "type": "string"
                    },
                    "settle_time": {
                      "description": "Transaction Settle Time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Transaction Status",
                      "type": "string"
                    },
                    "total_amount": {
                      "description": "Total Amount",
                      "type": "string"
                    },
                    "transaction_type": {
                      "description": "Transaction Type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "provider_transaction_id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "transaction"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "transaction": {
                    "business_uid": "8696174e02faf5d4",
                    "card_bin": "411111",
                    "card_brand": "visa",
                    "card_issuing_bank": "Bank of America",
                    "card_last4": "2468",
                    "cardholder_name": "CARDHOLDER NAME",
                    "create_time": "2022-06-01T08:00:00Z",
                    "created_at": "2025-08-05T06:54:57Z",
                    "currency": "USD",
                    "error_data": null,
                    "fee": "5.5",
                    "metadata": {
                      "url_key": "aBcdejBOSMATlMnOpqrSTuvwxyz"
                    },
                    "net": "194.5",
                    "payment_method": "Credit Card",
                    "provider": "provider",
                    "provider_transaction_id": "3e04d954c105b280",
                    "related_provider_payout_id": "p1_dbm_aaaaaaaa111111111bbbbbb",
                    "settle_time": "2022-06-02T18:00:00Z",
                    "status": "settled",
                    "total_amount": "200.0",
                    "transaction_type": "sale",
                    "uid": "sep8qliw34xnw7et",
                    "updated_at": "2025-08-05T06:54:57Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Create Transaction",
        "tags": [
          "Transactions"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/transactions"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/v1/transactions/{provider_transaction_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a Transaction",
        "parameters": [
          {
            "description": "Provider Transaction ID",
            "in": "path",
            "name": "provider_transaction_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "transaction": {
                    "business_uid": "8696174e02faf5d4",
                    "card_bin": "411111",
                    "card_brand": "visa",
                    "card_issuing_bank": "Bank of America",
                    "card_last4": "2468",
                    "cardholder_name": "CARDHOLDER NAME",
                    "create_time": "2022-06-01T08:00:00Z",
                    "created_at": "2025-08-05T06:54:57Z",
                    "currency": "USD",
                    "error_data": null,
                    "fee": "5.5",
                    "metadata": {
                      "url_key": "aBcdejBOSMATlMnOpqrSTuvwxyz"
                    },
                    "net": "194.5",
                    "payment_method": "Bank Payment - ACH",
                    "provider": "provider",
                    "provider_transaction_id": "d0679d76fef9769d",
                    "related_provider_payout_id": "p1_dbm_aaaaaaaa111111111bbbbbb",
                    "settle_time": "2022-06-02T18:00:00Z",
                    "status": "settled",
                    "total_amount": "200.0",
                    "transaction_type": "sale",
                    "uid": "4lahbms0392q9cma",
                    "updated_at": "2025-08-05T06:54:57Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Get Transaction",
        "tags": [
          "Transactions"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/transactions/{provider_transaction_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates a Transaction",
        "parameters": [
          {
            "description": "Provider Transaction ID",
            "in": "path",
            "name": "provider_transaction_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "transaction": {
                  "properties": {
                    "card_bin": {
                      "description": "Payment Card BIN",
                      "type": "string"
                    },
                    "card_brand": {
                      "description": "Payment Card Brand",
                      "type": "string"
                    },
                    "card_issuing_bank": {
                      "description": "Payment Card Issuing Bank Name",
                      "type": "string"
                    },
                    "card_last4": {
                      "description": "Payment Card Last 4 digits",
                      "type": "string"
                    },
                    "cardholder_name": {
                      "description": "Cardholder Name",
                      "type": "string"
                    },
                    "create_time": {
                      "description": "Transaction Create Time",
                      "type": "string"
                    },
                    "currency": {
                      "description": "Three-letter ISO currency code",
                      "type": "string"
                    },
                    "error_data": {
                      "description": "Transaction Error Data",
                      "type": "string"
                    },
                    "fee": {
                      "description": "Transaction Fee Amount",
                      "type": "string"
                    },
                    "net": {
                      "description": "Transaction Net Amount",
                      "type": "string"
                    },
                    "payment_method": {
                      "description": "The payment method used in the transaction",
                      "enum": [
                        "Credit Card",
                        "Bank Payment - ACH"
                      ],
                      "type": "string"
                    },
                    "related_provider_payout_id": {
                      "description": "The id of the provider payout that the transaction is a part of",
                      "type": "string"
                    },
                    "settle_time": {
                      "description": "Transaction Settle Time",
                      "type": "string"
                    },
                    "status": {
                      "description": "Transaction Status",
                      "type": "string"
                    },
                    "total_amount": {
                      "description": "Total Amount",
                      "type": "string"
                    },
                    "transaction_type": {
                      "description": "Transaction Type",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "transaction"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "transaction": {
                    "business_uid": "8696174e02faf5d4",
                    "card_bin": "411111",
                    "card_brand": "visa",
                    "card_issuing_bank": "Bank of America",
                    "card_last4": "2468",
                    "cardholder_name": "CARDHOLDER NAME",
                    "create_time": "2022-06-01T08:00:00Z",
                    "created_at": "2025-08-05T06:54:57Z",
                    "currency": "USD",
                    "error_data": null,
                    "fee": "50.0",
                    "metadata": {
                      "url_key": "aBcdejBOSMATlMnOpqrSTuvwxyz"
                    },
                    "net": "150.0",
                    "payment_method": "Credit Card",
                    "provider": "provider",
                    "provider_transaction_id": "d0679d76fef9769d",
                    "related_provider_payout_id": "p1_dbm_aaaaaaaa111111111bbbbbb",
                    "settle_time": "2022-06-02T18:00:00Z",
                    "status": "settled",
                    "total_amount": "200.0",
                    "transaction_type": "sale",
                    "uid": "4lahbms0392q9cma",
                    "updated_at": "2025-08-05T06:54:58Z"
                  }
                },
                "success": true
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "Error Code",
                    "field": "Error Field (optional)",
                    "message": "Error Message"
                  }
                ],
                "success": false
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "business/payments"
            ]
          }
        ],
        "summary": "Update Transaction",
        "tags": [
          "Transactions"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///business/payments/v1/transactions/{provider_transaction_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "business/payments": "All payments related operations from the business side",
        "business/payments_create": "business/payments create scope",
        "business/payments_delete": "business/payments delete scope",
        "business/payments_read": "business/payments read scope",
        "business/payments_update": "business/payments update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "business/payments": "",
        "business/payments_create": "",
        "business/payments_delete": "",
        "business/payments_read": "",
        "business/payments_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}