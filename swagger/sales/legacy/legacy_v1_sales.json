{
  "basePath": "/platform/v1",
  "host": "api.vcita.biz",
  "info": {
    "title": "Sales Legacy API v1",
    "version": "v1.0",
    "description": "Legacy v1 Platform API endpoints for sales domain including payments, invoices, estimates, packages, and lead generation"
  },
  "paths": {
    "/leadgen": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A unique identifer of the business. Can be the Business UID or nickname\\external ID",
            "in": "header",
            "name": "X-On-Behalf-Of",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Lead's address",
                  "type": "string"
                },
                "business_id": {
                  "description": "A unique identifier of the business. Can be the Business UID or nickname\\external ID.",
                  "type": "string"
                },
                "email": {
                  "description": "Lead email address. Unique per business.",
                  "type": "string"
                },
                "first_name": {
                  "description": "Lead first name. Mandatory for a new lead.",
                  "type": "string"
                },
                "identifier_type": {
                  "description": "Defines which unique identifier will be used to search for an existing lead or create a new one. Possible values: \"email\" or \"unique_id\"",
                  "type": "string"
                },
                "last_name": {
                  "description": "Lead last name.",
                  "type": "string"
                },
                "message_data": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Key and value that will appear in message",
                  "type": "object"
                },
                "notifications": {
                  "description": "A list of notifications to send after processing of the lead. Possible values: \"auto-reply\" (thank you email to the end user), \"email\" (notify the business owner) or \"sms\" (text notification to the business owner). None if empty.",
                  "type": "string"
                },
                "opt_in": {
                  "description": "Send \"true\" if lead opted in for promotions. Make sure the \"opt-in\" client card field is added to the client card under Settings>Client card.",
                  "type": "string"
                },
                "opt_in_transactional_sms": {
                  "description": "Whether the client opts in to receive transactional SMS messages.",
                  "type": "boolean"
                },
                "phone": {
                  "description": "Lead phone number.",
                  "type": "string"
                },
                "request_data": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Key and value properties that will update new lead and appear in message",
                  "type": "object"
                },
                "request_title": {
                  "description": "Request title. Will also be the created conversation title.",
                  "type": "string"
                },
                "source": {
                  "description": "Will be displayed to the business owner as the lead source",
                  "type": "string"
                },
                "source_url": {
                  "description": "The URL of the page where the lead was created.",
                  "type": "string"
                },
                "status": {
                  "description": "Use a client status to categorize clients according to their relationship with your business, default is Lead.",
                  "type": "string"
                },
                "system_message": {
                  "description": "A message displayed to the business owner to introduce the lead. May contain links.",
                  "type": "string"
                },
                "tags": {
                  "description": "Customized labels that enbale you to sort your data using personalized words, phrases or themes that are meaningful to you and your business",
                  "type": "string"
                },
                "unique_id": {
                  "description": "Lead unique id. Unique per business.",
                  "type": "string"
                }
              },
              "required": [
                "identifier_type",
                "first_name",
                "request_title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "conversation_uid": "pehfh46jy6c9mlba",
                "status": "OK",
                "uid": "jg7vmlf2uwx5m6fy"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Creates a lead",
        "tags": [
          "LeadGen"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/leadgen"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/estimates": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, approved, draft, invoiced, rejected. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,rejected",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size (default: 25)",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Estimates Returned",
            "examples": {
              "application/json": {
                "data": {
                  "estimates": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "amount": 8.8,
                      "client_address": "Lombard St, San Francisco, CA",
                      "client_id": "kf9d91uh82bclson",
                      "client_name": "Alice Smith",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "estimate_date": "2018-06-14",
                      "estimate_number": "1",
                      "id": "aaabbbccc112233",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Estimate for your service",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d34uh92bclwzg",
                      "status": "draft/issued/approved/rejected/invoiced",
                      "title": "Estimate title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Estimates List",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "Business address",
                  "type": "string"
                },
                "client_address": {
                  "description": "Client's address",
                  "type": "string"
                },
                "client_id": {
                  "description": "Client ID",
                  "type": "string"
                },
                "client_name": {
                  "description": "Client's name",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "Conversation ID",
                  "type": "string"
                },
                "currency": {
                  "description": "Estimate currency: USD, ILS etc.",
                  "type": "string"
                },
                "due_date": {
                  "description": "Estimate due date, must be later than estimate_date (ISO 8601 format)",
                  "type": "string"
                },
                "estimate_date": {
                  "description": "Estimate date (ISO 8601 format)",
                  "type": "string"
                },
                "estimate_number": {
                  "description": "Estimate number",
                  "type": "number"
                },
                "items": {
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Estimate item amount",
                        "type": "number"
                      },
                      "description": {
                        "description": "Estimate item description",
                        "type": "string"
                      },
                      "discount": {
                        "description": "Estimate item discount",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "Estimate item quantity",
                        "type": "number"
                      },
                      "taxes": {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "Estimate item tax name",
                              "type": "string"
                            },
                            "rate": {
                              "description": "Estimate item tax rate in percentages",
                              "type": "number"
                            }
                          },
                          "required": [
                            "rate",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "description": "Estimate item title",
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "amount",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "note": {
                  "description": "Estimate note",
                  "type": "string"
                },
                "send_email": {
                  "description": "Set to true in order to send the estimate to the client (for issued estimate). Default: false",
                  "type": "boolean"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "status": {
                  "description": "Possible values: draft, issued, approved, rejected, invoiced. Default: issued",
                  "type": "string"
                },
                "title": {
                  "description": "Estimate title",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "due_date",
                "estimate_date",
                "currency",
                "address",
                "items",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Estimate Created",
            "examples": {
              "application/json": {
                "data": {
                  "estimate": {
                    "address": "habarzel 32\\nTel Aviv",
                    "amount": 8.8,
                    "client_address": "Lombard St, San Francisco, CA",
                    "client_id": "1kfvtps4a4wlh3lc",
                    "client_name": "Alice Smith",
                    "conversation_id": "rv28qk5ey5eretu9",
                    "created_at": "2018-06-14T09:31:21.000",
                    "currency": "USD",
                    "due_date": "2020-04-24",
                    "estimate_date": "2020-04-20",
                    "estimate_number": "1",
                    "id": "aaabbbccc112233",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Item title"
                      }
                    ],
                    "note": "Estimate for your service",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d34uh92bclwzg",
                    "status": "draft/issued/approved/rejected/invoiced",
                    "title": "Estimate title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Estimate",
        "tags": [
          "Estimates"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/estimates"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Available filters: state: filter[state][in]=paid,pending,failed,refunded,cancelled,archived,incompleted.\n                                                                                           created_at: filter[created_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                                           updated_at: filter[updated_at][eq/lt/lte/gt/gte]=2023-01-01 or 2023-01-01 09:30:00.\n                                                                                           client_id: filter[client_id][eq]=client_id.\n                                                                                           invoice_id: filter[invoice_id][eq]=invoice_id.",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at.\n                                                                      Available operators: asc, desc.\n                                                                      Example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payments Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payments": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payments List",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "amount": {
                  "description": "amount",
                  "type": "number"
                },
                "client_id": {
                  "description": "client ID",
                  "type": "string"
                },
                "currency": {
                  "description": "USD, ILS etc.",
                  "type": "string"
                },
                "fees": {
                  "description": "Array of fees (Max 1 fee)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Fee amount",
                        "type": "number"
                      },
                      "name": {
                        "description": "Fee name (Max 35 chars)",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "mark_as_online": {
                  "description": "Enable online refund. Default is disabled",
                  "type": "boolean"
                },
                "other_payment_method": {
                  "description": "Max 24 chars",
                  "type": "string"
                },
                "paid_at": {
                  "description": "default is now",
                  "type": "string"
                },
                "pay_key": {
                  "description": "Max 64 chars",
                  "type": "string"
                },
                "payment_method": {
                  "description": "'PayPal', 'Other', 'Cash', 'Credit Card', 'Bank Transfer', 'Cheque'",
                  "type": "string"
                },
                "payment_subject_id": {
                  "description": "The ID of the entity for which the payment has been made",
                  "type": "string"
                },
                "payment_subject_type": {
                  "description": "The type of entity for which the payment has been made. Available types: 'Meeting', 'EventAttendance', 'Invoice', 'ClientBookingPackage', 'ProductOrder'.",
                  "type": "string"
                },
                "reference": {
                  "description": "Max 24 chars",
                  "type": "string"
                },
                "send_receipt": {
                  "description": "true, false. default true",
                  "type": "boolean"
                },
                "staff_id": {
                  "description": "Default is set to the staff that performed the API call. Business owner is allowed to send staff_id",
                  "type": "string"
                },
                "state": {
                  "description": "The current payment state. This field can be used only for creating a pending payment. Value can be only 'pending'",
                  "type": "string"
                },
                "tips": {
                  "description": "Array of tips (Max 1 tip)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Tip amount",
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "title": {
                  "description": "paid for service or product",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "payment_method",
                "currency",
                "amount",
                "title"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment Created",
            "examples": {
              "application/json": {
                "data": {
                  "payment": {
                    "amount": 150,
                    "client_id": "aaabbbccc112233",
                    "conversation_id": "aaabbbccc112233",
                    "created_at": "2019-10-16T13:05:43Z",
                    "currency": "USD",
                    "fees": [
                      {
                        "amount": 13,
                        "name": "Taylor Swift Fee"
                      }
                    ],
                    "marked_as_online": false,
                    "other_payment_method": "bit",
                    "paid_at": "2019-10-15T13:05:43Z",
                    "paid_offline": true,
                    "pay_key": "123456",
                    "payment_action": "record_payment",
                    "payment_id": "aaabbbccc112233",
                    "payment_method": "credit_card",
                    "reference": "123",
                    "send_receipt": true,
                    "staff_id": "aaabbbccc112233",
                    "state": "paid",
                    "tips": [
                      {
                        "amount": 100
                      }
                    ],
                    "title": "Payment Title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments/{payment_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "payment's id",
            "in": "path",
            "name": "payment_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment Returned",
            "examples": {
              "application/json": {
                "data": {
                  "payment": [
                    {
                      "amount": 300,
                      "charged_at": "23/4/2019 09:00:00",
                      "client_id": "12344",
                      "conversation_id": "1234",
                      "currency": "USD",
                      "fees": [
                        {
                          "amount": 13,
                          "name": "Taylor Swift Fee"
                        }
                      ],
                      "id": "1234",
                      "note": "Payment Note",
                      "offline": true,
                      "other_payment_method": "bit",
                      "payment_method": "cash/check",
                      "payment_requests": [
                        {
                          "id": "1246"
                        }
                      ],
                      "reference": "123",
                      "state": "paid/refunded",
                      "tips": [
                        {
                          "amount": 100
                        }
                      ],
                      "title": "Payment Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Payment by ID",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.payment_id": "method.request.path.payment_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments/{payment_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payments/{payment_uid}/match": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "relevant payment UID",
            "in": "path",
            "name": "payment_uid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "matter_uid": {
                  "description": "The matter uid of the relevant payment",
                  "type": "string"
                },
                "payment_status_uid": {
                  "description": "The uid of the relevant payment request to match",
                  "type": "string"
                }
              },
              "required": [
                "matter_uid",
                "payment_status_uid"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payment Matched",
            "examples": {
              "application/json": {
                "data": {
                  "payment": {
                    "amount": 1,
                    "client_id": "jfcomkyykiz0mqkw",
                    "conversation_id": "lzxxiv5euh8z18qw",
                    "created_at": "2022-01-19T12:26:15Z",
                    "currency": "ILS",
                    "marked_as_online": false,
                    "other_payment_method": "bit",
                    "paid_at": "2022-01-19T12:26:05Z",
                    "paid_offline": true,
                    "payment_action": "record_payment",
                    "payment_id": "2ulfclwzu8yksj9u",
                    "payment_method": "Cash",
                    "reference": "123",
                    "send_receipt": true,
                    "source_data": {
                      "campaign": "1",
                      "channel": "1",
                      "name": "initiated_by_staff",
                      "website_url": "1"
                    },
                    "state": "paid"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Match Payment",
        "tags": [
          "Payments"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payments"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Filter by created_at, updated_at, state. state values: issued, draft, declined. available operators for created_at and updated_at: gt, gte, lt, lte, eq. available operators for state: in. example: filter[created_at][gt]=2019-01-01, filter[state][in]=issued,draft",
            "in": "query",
            "name": "filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "Sort by one of the following: created_at, updated_at, state. available operators: asc, desc. example: sort=created_at:asc,updated_at:desc",
            "in": "query",
            "name": "sort",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page offset",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "string"
          },
          {
            "description": "Page size",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoices": [
                    {
                      "address": "habarzel 32\\nTel Aviv",
                      "allow_online_payment": true,
                      "amount": 8.8,
                      "client_id": "aaabbbccc112233",
                      "conversation_id": "rv28qk5ey5eretu9",
                      "created_at": "2018-06-14T09:31:21.000",
                      "currency": "USD",
                      "due_date": "2018-06-14",
                      "id": "aaabbbccc112233",
                      "invoice_number": "6",
                      "issued_at": "2018-06-14",
                      "items": [
                        {
                          "amount": 10,
                          "description": "Service Description",
                          "discount": 2,
                          "quantity": 1,
                          "taxes": [
                            {
                              "name": "10 tax",
                              "rate": 10
                            }
                          ],
                          "title": "Item title"
                        }
                      ],
                      "note": "Invoice for your service",
                      "payment_balance": 5.0,
                      "payment_state": "pending",
                      "source_data": {
                        "campaign": null,
                        "channel": "",
                        "name": "client_portal",
                        "website_url": null
                      },
                      "staff_id": "mg9d91uh92bclwzg",
                      "status": "issued/draft",
                      "title": "Invoice Title"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoices List",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "description": "business address",
                  "type": "string"
                },
                "allow_online_payment": {
                  "description": "true, false, default: true if the business is connected to payment provider",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "client_uid",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "conversation_uid",
                  "type": "string"
                },
                "currency": {
                  "description": "USD, ILS etc.",
                  "type": "string"
                },
                "due_date": {
                  "description": "invoice due ,must be later than issued_at",
                  "type": "string"
                },
                "invoice_number": {
                  "description": "invoice number",
                  "type": "number"
                },
                "issued_at": {
                  "description": "invoice issue date",
                  "type": "string"
                },
                "items": {
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "invoice item amount",
                        "type": "number"
                      },
                      "description": {
                        "description": "invoice item description",
                        "type": "string"
                      },
                      "discount": {
                        "description": "invoice item discount",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "invoice item quantity",
                        "type": "number"
                      },
                      "taxes": {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "invoice item tax name",
                              "type": "string"
                            },
                            "rate": {
                              "description": "invoice item tax rate in percentages",
                              "type": "number"
                            }
                          },
                          "required": [
                            "rate",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "title": {
                        "description": "invoice item title",
                        "type": "string"
                      }
                    },
                    "required": [
                      "title",
                      "amount",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "note": {
                  "description": "invoice note",
                  "type": "string"
                },
                "send_email": {
                  "description": "true, false, default false",
                  "type": "boolean"
                },
                "source_campaign": {
                  "description": "Source campaign",
                  "type": "string"
                },
                "source_channel": {
                  "description": "Source channel",
                  "type": "string"
                },
                "source_name": {
                  "description": "Source name",
                  "type": "string"
                },
                "source_url": {
                  "description": "Source URL",
                  "type": "string"
                },
                "staff_id": {
                  "description": "owner is the default",
                  "type": "string"
                },
                "status": {
                  "description": "draft, issued, default issued",
                  "type": "string"
                },
                "title": {
                  "description": "invoice title",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "due_date",
                "issued_at",
                "currency",
                "address",
                "items"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoice Created",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "address": "Oxford st.",
                    "allow_online_payment": false,
                    "amount": 8.8,
                    "client_id": "1kfvtps4a4wlh3lc",
                    "conversation_id": "3brhv2288yuvfmfd",
                    "created_at": "2019-12-17T21:07:04.659Z",
                    "currency": "USD",
                    "due_date": "2019-04-24",
                    "id": "an29s26qnw2pfryh",
                    "invoice_number": 97,
                    "issued_at": "2019-04-20",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Service"
                      }
                    ],
                    "note": "Invoice for your service",
                    "payment_balance": 8.8,
                    "payment_state": "pending",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "status": "issued",
                    "title": "INVOICE #0000097"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create New Invoice",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/invoices/{invoice_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Invoice ID",
            "in": "path",
            "name": "invoice_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Invoices Returned",
            "examples": {
              "application/json": {
                "data": {
                  "invoice": {
                    "address": "habarzel 32\\nTel Aviv",
                    "allow_online_payment": true,
                    "amount": 8.8,
                    "client_id": "aaabbbccc112233",
                    "conversation_id": "rv28qk5ey5eretu9",
                    "created_at": "2018-06-14T09:31:21.000",
                    "currency": "USD",
                    "due_date": "2018-06-14",
                    "id": "aaabbbccc112233",
                    "invoice_number": "6",
                    "issued_at": "2018-06-14",
                    "items": [
                      {
                        "amount": 10,
                        "description": "Service Description",
                        "discount": 2,
                        "quantity": 1,
                        "taxes": [
                          {
                            "name": "10 tax",
                            "rate": 10
                          }
                        ],
                        "title": "Item title"
                      }
                    ],
                    "note": "Invoice for your service",
                    "payment_balance": 5.0,
                    "payment_state": "pending",
                    "source_data": {
                      "campaign": null,
                      "channel": "",
                      "name": "client_portal",
                      "website_url": null
                    },
                    "staff_id": "mg9d91uh92bclwzg",
                    "status": "issued/draft",
                    "title": "Invoice Title"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Invoice By ID",
        "tags": [
          "Invoices"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.invoice_id": "method.request.path.invoice_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/invoices/{invoice_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/cards/sync_card": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "client_id": {
                  "description": "client_uid",
                  "type": "string"
                },
                "customer_id": {
                  "description": "The customer ID at the payment gateway",
                  "type": "string"
                },
                "datails": {
                  "items": {
                    "properties": {
                      "card_brand": {
                        "description": "card_brand",
                        "type": "string"
                      },
                      "cardholder_name": {
                        "description": "cardholder_name",
                        "type": "string"
                      },
                      "exp_month": {
                        "description": "exp_month",
                        "type": "number"
                      },
                      "exp_year": {
                        "description": "exp_year",
                        "type": "number"
                      },
                      "last_4": {
                        "description": "last_4",
                        "type": "string"
                      }
                    },
                    "required": [
                      "client_id",
                      "external_card_id",
                      "default",
                      "details",
                      "items"
                    ],
                    "type": "object"
                  },
                  "type": "object"
                },
                "default": {
                  "description": "true/false. default: false (will be set to true if it is the client's first card)",
                  "type": "boolean"
                },
                "external_card_id": {
                  "description": "card id",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create sync card",
            "examples": {
              "application/json": {
                "data": {
                  "card": {
                    "active": true,
                    "business_id": "dk3wvzieadwjmojz",
                    "card_brand": "visa",
                    "cardholder_name": "test card",
                    "client_id": "9ev0ruk82bqk5oqa",
                    "created_at": "2021-02-18T11:09:54.000Z",
                    "default": true,
                    "exp_month": 11,
                    "exp_year": 2022,
                    "id": "so6k0ydbizask6cu",
                    "last_4": "1111",
                    "payment_provider": "stripe",
                    "staff_id": "hs6wse84tqv3kndi",
                    "staff_name": "multi matter pay"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create sync card",
        "tags": [
          "Card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/cards/sync_card"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/cards/{card_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Delete saved card.",
        "parameters": [
          {
            "description": "Card ID",
            "in": "path",
            "name": "card_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Delete saved card",
        "tags": [
          "Card"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "DELETE",
          "requestParameters": {
            "integration.request.path.card_id": "method.request.path.card_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/cards/{card_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a checkout process from webhook",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "amount": {
                  "description": "The charged amount  (You should send this only if you are in sync_flow)",
                  "type": "boolean"
                },
                "card": {
                  "description": "The saved card info - (You should send this only if client want to save the card) ",
                  "properties": {
                    "card_id": {
                      "description": "The card id - should be unique value",
                      "type": "string"
                    },
                    "card_info": {
                      "properties": {
                        "card_brand": {
                          "description": "The card brand",
                          "type": "string"
                        },
                        "cardholder_name": {
                          "description": "The card holder name",
                          "type": "string"
                        },
                        "exp_month": {
                          "description": "Expiration month (2 digits)",
                          "type": "string"
                        },
                        "exp_year": {
                          "description": "Expiration year (4 digits)",
                          "type": "string"
                        },
                        "last_4": {
                          "description": "Last 4 digits",
                          "type": "string"
                        }
                      },
                      "required": [
                        "card_brand",
                        "last_4",
                        "exp_month",
                        "exp_year",
                        "cardholder_name"
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "created": {
                  "description": "the date of the payment",
                  "type": "string"
                },
                "customer_id": {
                  "description": "The customer unique id (You should send this only if client want to save the card)",
                  "type": "string"
                },
                "fees": {
                  "description": "Array of fees (Max 1 fee) (Relevant only for when sync_flow is not true)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Fee amount",
                        "type": "number"
                      },
                      "name": {
                        "description": "Fee name (Max 35 chars)",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "payment_method": {
                  "description": "The payment method which was used in checkout. Available methods: 'Credit Card', 'Bank Payment - ACH'.",
                  "type": "string"
                },
                "ps_id": {
                  "description": "The payment status uid (You should send this only if you are in sync_flow)",
                  "type": "string"
                },
                "state": {
                  "description": "The current payment state. This field can be used only for creating a pending payment. Value can be only 'pending'",
                  "type": "string"
                },
                "sync_flow": {
                  "description": "You should send true in case it is a post checkout flow ",
                  "type": "boolean"
                },
                "tips": {
                  "description": "Array of tips (Max 1 tip) (Relevant only for when sync_flow is not true)",
                  "items": {
                    "properties": {
                      "amount": {
                        "description": "Tip amount",
                        "type": "number"
                      }
                    },
                    "required": [
                      "amount"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "transaction_id": {
                  "description": "The external payment gateway transaction id",
                  "type": "string"
                },
                "type": {
                  "description": "checkout.session.completed",
                  "type": "string"
                },
                "url_key": {
                  "description": "The url_key",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Payed by checkout",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Send checkout update by webhook ",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/checkout/{url_key}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "url_key",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Checkout Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "allow_save_card": false,
                  "amount": 20,
                  "client_id": "jdsfhfhjhsfg",
                  "client_store_card_for_business_use": false,
                  "currency": "USD",
                  "email": "nil",
                  "invoice_id": "yrg7iehgv",
                  "name": "XXX",
                  "return_url": "http://xxxx",
                  "terms_and_conditions_type": "text",
                  "terms_and_conditions_value": "terms and conditions"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Open Checkout For Specific url_key",
        "tags": [
          "Payment Checkout"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.url_key": "method.request.path.url_key"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/checkout/{url_key}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "client_id": {
                  "description": "Client ID",
                  "type": "string"
                },
                "conversation_id": {
                  "description": "Conversation ID",
                  "type": "string"
                },
                "package_id": {
                  "description": "Package ID",
                  "type": "string"
                },
                "price": {
                  "description": "Price. Default: package price.",
                  "type": "number"
                },
                "valid_from": {
                  "description": "First valid date of the client package (ISO 8601 format)",
                  "type": "string"
                },
                "valid_until": {
                  "description": "Last valid date of the client package (ISO 8601 format). Default: will be set according to package expiration.",
                  "type": "string"
                }
              },
              "required": [
                "client_id",
                "package_id",
                "valid_from"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Package added to the client",
            "examples": {
              "application/json": {
                "data": {
                  "client_package": {
                    "active": "true",
                    "amount": 100.0,
                    "booking_credits": [
                      {
                        "bookings_usage": "0",
                        "credit_items": [
                          {
                            "bookings_usage": 0,
                            "item_id": "mzuk2kkt7vjnxdwo",
                            "item_type": "SERVICE"
                          }
                        ],
                        "id": "vu1rovse0166a9d9",
                        "total_bookings": "10"
                      }
                    ],
                    "bookings_usage": "0",
                    "business_id": "vqzqruk6nyclxpp6",
                    "client_id": "9yxsdkr1hdjtocpv",
                    "conversation_id": "war7ow99zh14qlty",
                    "created_at": "2020-06-01T21:05:00.562Z",
                    "currency": "USD",
                    "id": "m73jkvg4bf2z71b2",
                    "image_path": "",
                    "name": "Music Lessons",
                    "package_id": "v2fvy50p8gjuvnvb",
                    "payment_status_id": "6v5ybwkavv0z9hff",
                    "payment_status_state": "pending",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "staff_id": "mg9d91uh92bclwzg",
                    "total_bookings": "10",
                    "valid_from": "2020-06-01",
                    "valid_until": "2020-07-01"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Add package to client [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/client_packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages/cancel_redemption": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_status_id": {
                  "description": "Payment status ID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client package credit updated",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Cancel Client Package Credit Redemption [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/cancel_redemption"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/client_packages/update_usage": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "matter_uid": {
                  "description": "Matter/Conversation UID. If not provided, the system will attempt to find the default matter for the client.",
                  "type": "string"
                },
                "payment_status_uid": {
                  "description": "Payment status UID",
                  "type": "string"
                }
              },
              "required": [
                "payment_status_uid"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Client package credit updated using payment_status_id",
            "examples": {
              "application/json": {
                "data": {
                  "package_name": "Package Name"
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure with payment_status_id",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Use Client Package Credit [Alpha]",
        "tags": [
          "Client Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/clients/payment/client_packages/update_usage"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "if exists the packages returns with their items",
            "in": "query",
            "name": "include_items",
            "required": false,
            "type": "string"
          },
          {
            "description": "if exists the packages returns only active packages",
            "in": "query",
            "name": "active_only",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Packages Info Retrieved with active packages only",
            "examples": {
              "application/json": {
                "data": {
                  "packages": [
                    {
                      "active": true,
                      "currency": "USD",
                      "description": "Package description",
                      "discount_amount": "25",
                      "discount_unit": "f",
                      "expiration": 1,
                      "expiration_unit": "m",
                      "id": "456687634585436",
                      "image_path": null,
                      "name": "Package name",
                      "online_payment_enabled": true,
                      "price": "223.5",
                      "products": [
                        {
                          "id": "03nmq2uih783ro0g",
                          "name": "product1_name",
                          "quantity": 2
                        },
                        {
                          "id": "57ndq2uih503rca8",
                          "name": "product2_name",
                          "quantity": 4
                        }
                      ],
                      "total_bookings": "10"
                    }
                  ]
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get all package of business",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {},
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create a package and its corresponding items",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "currency": {
                  "description": "The items currency",
                  "type": "string"
                },
                "description": {
                  "description": "The package description",
                  "type": "string"
                },
                "discount_amount": {
                  "description": "Package discount amount (Only for view purposes)",
                  "type": "number"
                },
                "discount_unit": {
                  "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                  "type": "string"
                },
                "expiration": {
                  "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit   ",
                  "type": "number"
                },
                "expiration_unit": {
                  "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                  "type": "string"
                },
                "image_path": {
                  "description": "The package's image path",
                  "type": "string"
                },
                "items": {
                  "items": {
                    "properties": {
                      "services": {
                        "items": {
                          "properties": {
                            "id": {
                              "description": "Item uid",
                              "type": "number"
                            }
                          },
                          "required": [
                            "total_bookings",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_bookings": {
                        "description": "Usage number allowed for specific item within the package",
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_bookings",
                      "services"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "The name of the package",
                  "type": "string"
                },
                "online_payment_enabled": {
                  "description": "Online payments enabled?",
                  "type": "boolean"
                },
                "price": {
                  "description": "The price of the package",
                  "type": "number"
                },
                "products": {
                  "description": "Products included in the package. Up to 3 different products allowed.",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "Product ID",
                        "type": "number"
                      },
                      "quantity": {
                        "description": "Product's quantity, must be greater than 0, up to 5 items allowed.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "quantity"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "name",
                "price",
                "currency",
                "items",
                "expiration",
                "expiration_unit"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Package Created",
            "examples": {
              "application/json": {
                "data": {},
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Create Package ",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/packages/{package_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package Info Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "package": {
                    "active": true,
                    "currency": "USD",
                    "description": "Package description",
                    "discount_amount": "25",
                    "discount_unit": "f",
                    "expiration": 1,
                    "expiration_unit": "m",
                    "id": "456687634585436",
                    "image_path": null,
                    "items": [
                      {
                        "services": [
                          {
                            "id": "6f156jl6z3bqwn1c",
                            "name": "Yoga Class"
                          }
                        ],
                        "total_bookings": "5"
                      },
                      {
                        "services": [
                          {
                            "id": "eeyt3rk4vk4abl5v",
                            "name": "Spinning Class"
                          }
                        ],
                        "total_bookings": "5"
                      }
                    ],
                    "name": "Package name",
                    "online_payment_enabled": true,
                    "price": "223.5",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "total_bookings": 10
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Show package info",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "package_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "package": {
                  "properties": {
                    "currency": {
                      "description": "The items currency",
                      "type": "string"
                    },
                    "description": {
                      "description": "The package description",
                      "type": "string"
                    },
                    "discount_amount": {
                      "description": "Package discount amount (Only for view purposes)",
                      "type": "number"
                    },
                    "discount_unit": {
                      "description": "Package discount unit [F-Fixed, P-Percentage] (Only for view purposes)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "Once package is instanced for a client, it will be valid for expiration number X expiration unit",
                      "type": "number"
                    },
                    "expiration_unit": {
                      "description": "The expiration unit (M-Month, D-Day, W-Week, Y-Year)",
                      "type": "string"
                    },
                    "image_path": {
                      "description": "The package's image path",
                      "type": "string"
                    },
                    "items": {
                      "items": {
                        "properties": {
                          "services": {
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "Item uid",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "total_bookings",
                                "id"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "total_bookings": {
                            "description": "Usage number allowed for specific item within the package",
                            "type": "number"
                          }
                        },
                        "required": [
                          "total_bookings",
                          "services"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the package",
                      "type": "string"
                    },
                    "online_payment_enabled": {
                      "description": "Online payments enabled?",
                      "type": "boolean"
                    },
                    "price": {
                      "description": "The price of the package",
                      "type": "number"
                    },
                    "products": {
                      "description": "Package's products. [] will remove the package's products",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Product ID",
                            "type": "number"
                          },
                          "quantity": {
                            "description": "Product's quantity, must be greater than 0.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "id",
                          "quantity"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "package"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Package Updated",
            "examples": {
              "application/json": {
                "data": {
                  "package": {
                    "active": true,
                    "currency": "USD",
                    "description": "Package description",
                    "discount_amount": "25",
                    "discount_unit": "f",
                    "expiration": 1,
                    "expiration_unit": "m",
                    "id": "456687634585436",
                    "image_path": null,
                    "items": [
                      {
                        "services": [
                          {
                            "id": "6f156jl6z3bqwn1c",
                            "name": "Yoga Class"
                          }
                        ],
                        "total_bookings": "5"
                      },
                      {
                        "services": [
                          {
                            "id": "eeyt3rk4vk4abl5v",
                            "name": "Spinning Class"
                          }
                        ],
                        "total_bookings": "5"
                      }
                    ],
                    "name": "Package name",
                    "online_payment_enabled": true,
                    "price": "223.5",
                    "products": [
                      {
                        "id": "03nmq2uih783ro0g",
                        "name": "product1_name",
                        "quantity": 2
                      },
                      {
                        "id": "57ndq2uih503rca8",
                        "name": "product2_name",
                        "quantity": 4
                      }
                    ],
                    "total_bookings": 10
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Failure",
            "examples": {
              "application/json": {
                "error": "Error Message",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update package [Alpha]",
        "tags": [
          "Packages"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.package_id": "method.request.path.package_id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/packages/{package_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/settings": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Settings Retrieved",
            "examples": {
              "application/json": {
                "data": {
                  "payment_settings": {
                    "allow_bank_debit_on_checkout": true,
                    "allow_bank_debit_on_checkout_enabled": true,
                    "allow_credit_card": true,
                    "allow_view_payments": true,
                    "billing_address": null,
                    "braintree_merchant_id": null,
                    "client_store_card_for_business_use": true,
                    "connected_payment_gateways": [
                      "stripe",
                      "paypal"
                    ],
                    "currency": "USD",
                    "enable_tips_for_bo": true,
                    "enable_tips_for_cp": true,
                    "estimate_terms": null,
                    "ewallet_type": "paypal",
                    "hide_powered_by": null,
                    "invoice_terms": null,
                    "matter_terms": null,
                    "multiple_currencies": true,
                    "partial_payments_enabled": true,
                    "payments_enabled": true,
                    "payments_gateway_type": "stripe",
                    "paypal_email": "fake@fake.com",
                    "pdf_customization_color": null,
                    "pdf_customization_cover": null,
                    "pdf_customization_logo_size": null,
                    "pdf_customization_template": null,
                    "show_taxes": true,
                    "store_card_for_business_use_enabled": true,
                    "stripe_access_token": "fake_token",
                    "stripe_email": "fake@fake.com",
                    "stripe_user_id": "fake_user_id",
                    "supported_currencies": [
                      "USD",
                      "EUR",
                      "GBP"
                    ],
                    "tax_mode": null,
                    "terms_and_conditions_type": "text",
                    "terms_and_conditions_value": "terms and conditions",
                    "tips": [
                      {
                        "type": "percent",
                        "value": 10
                      },
                      {
                        "type": "percent",
                        "value": 15
                      }
                    ],
                    "vcita_payments_business_profession_code": null
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Current Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "payment_settings": {
                  "properties": {
                    "allow_bank_debit_on_checkout": {
                      "description": "Allow Bank Debit on Checkout",
                      "type": "boolean"
                    },
                    "allow_credit_card": {
                      "description": "Allow Credit Card",
                      "type": "boolean"
                    },
                    "allow_view_payments": {
                      "description": "Allow View Payments",
                      "type": "boolean"
                    },
                    "braintree_access_token": {
                      "description": "Braintree Access Token",
                      "type": "string"
                    },
                    "braintree_merchant_id": {
                      "description": "Braintree Merchant ID",
                      "type": "string"
                    },
                    "braintree_refresh_token": {
                      "description": "Braintree Refresh Token",
                      "type": "string"
                    },
                    "client_store_card_for_business_use": {
                      "description": "Client Store Card for Business Use",
                      "type": "boolean"
                    },
                    "currency": {
                      "description": "3 Character Currency Code (PLN,GBP,EUR,USD,CSK,JPY,RUB)",
                      "type": "string"
                    },
                    "enable_tips_for_bo": {
                      "description": "Enable Tips for back office",
                      "type": "boolean"
                    },
                    "enable_tips_for_cp": {
                      "description": "Enable Tips for client portal",
                      "type": "boolean"
                    },
                    "ewallet_type": {
                      "description": "eWallet Type (valid: \"paypal\")",
                      "type": "string"
                    },
                    "multiple_currencies": {
                      "description": "Support Multiple Currencies",
                      "type": "boolean"
                    },
                    "payments_enabled": {
                      "description": "Enable Payments",
                      "type": "boolean"
                    },
                    "payments_gateway_type": {
                      "description": "Payments Gateway Type",
                      "type": "string"
                    },
                    "paypal_email": {
                      "description": "Paypal Payment Email",
                      "type": "string"
                    },
                    "stripe_access_token": {
                      "description": "Stripe Access Token",
                      "type": "string"
                    },
                    "stripe_email": {
                      "description": "Stripe Email",
                      "type": "string"
                    },
                    "stripe_user_id": {
                      "description": "Stripe User ID",
                      "type": "string"
                    },
                    "terms_and_conditions_type": {
                      "description": "Terms and Conditions Type",
                      "type": "string"
                    },
                    "terms_and_conditions_value": {
                      "description": "Terms and Conditions Value",
                      "type": "string"
                    },
                    "tips": {
                      "description": "Array of tips, can be empty or contain exactly 3 items",
                      "items": {
                        "properties": {
                          "type": {
                            "description": "Tip Type (valid: \"percent\")",
                            "type": "string"
                          },
                          "value": {
                            "description": "Tip Value (valid: 1-99)",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Settings Updated",
            "examples": {
              "application/json": {
                "data": {
                  "payment_settings": {
                    "allow_bank_debit_on_checkout": true,
                    "allow_bank_debit_on_checkout_enabled": true,
                    "allow_credit_card": true,
                    "allow_view_payments": true,
                    "billing_address": "123 Fake St",
                    "braintree_merchant_id": "fake_merchant_id",
                    "client_store_card_for_business_use": true,
                    "connected_payment_gateways": [
                      "stripe"
                    ],
                    "currency": "USD",
                    "enable_tips_for_bo": true,
                    "enable_tips_for_cp": true,
                    "estimate_terms": "30 days",
                    "ewallet_type": "paypal",
                    "hide_powered_by": true,
                    "invoice_terms": "30 days",
                    "matter_term": "Term",
                    "multiple_currencies": true,
                    "partial_payments_enabled": true,
                    "payments_enabled": true,
                    "payments_gateway_type": "stripe",
                    "paypal_email": "fake@fake.com",
                    "pdf_customization_color": "#000000",
                    "pdf_customization_cover": "default",
                    "pdf_customization_logo_size": "medium",
                    "pdf_customization_template": "default",
                    "show_taxes": true,
                    "store_card_for_business_use_enabled": true,
                    "stripe_access_token": "fake_token",
                    "stripe_email": "fake@fake.com",
                    "stripe_user_id": "fake_user_id",
                    "supported_currencies": [
                      "USD",
                      "EUR",
                      "GBP"
                    ],
                    "tax_mode": "exclude",
                    "terms_and_conditions_type": "text",
                    "terms_and_conditions_value": "terms and conditions",
                    "tips": [
                      {
                        "type": "percent",
                        "value": 10
                      },
                      {
                        "type": "percent",
                        "value": 15
                      },
                      {
                        "type": "percent",
                        "value": 20
                      }
                    ],
                    "vcita_payments_business_profession_code": "1234"
                  }
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Payment Settings",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment/settings"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment/settings/update_default_currency": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Default Currency Updated",
            "examples": {
              "application/json": {
                "data": {
                  "currency": "USD"
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Update Default Currency",
        "tags": [
          "Payment Settings"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/payment_statuses/{id}/apply_coupon": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Coupon Applied",
            "examples": {
              "application/json": {
                "data": {
                  "payment_status": {
                    "amount_to_pay_h": "$8.00 USD",
                    "balance_h": "$8.00 USD",
                    "currency": "USD",
                    "id": "ej27h4bjknw0g6dh",
                    "price": "8.0",
                    "price_before_coupon": "10",
                    "state": "pending"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Invalid Coupon",
            "examples": {
              "application/json": {
                "error": "Invalid Coupon",
                "error_code": "INVALID_COUPON",
                "status": "Error"
              }
            }
          }
        },
        "summary": "Apply Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "PUT",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        }
      }
    },
    "/payment_statuses/{id}/validate_coupon": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "payment status id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Coupon code",
            "in": "query",
            "name": "coupon_code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Valid Coupon",
            "examples": {
              "application/json": {
                "data": {
                  "payment_status": {
                    "amount_to_pay_h": "$8.00 USD",
                    "balance_h": "$8.00 USD",
                    "currency": "USD",
                    "id": "ej27h4bjknw0g6dh",
                    "price": "8.0",
                    "price_before_coupon": "10",
                    "state": "pending"
                  }
                },
                "status": "OK"
              }
            }
          },
          "422": {
            "description": "Invalid Coupon",
            "examples": {
              "application/json": {
                "error": "Invalid Coupon",
                "error_code": "INVALID_COUPON",
                "status": "Error"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Validate Coupon",
        "tags": [
          "Payment Statuses"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "requestParameters": {
            "integration.request.path.id": "method.request.path.id"
          },
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/payment_statuses/{id}/validate_coupon"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get services list",
        "parameters": [
          {
            "description": "Page number of results. Default: 1",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "How many items to return per page. Default: 25. Max: 100",
            "in": "query",
            "name": "per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "services": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services List",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/availability": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get services availability",
        "parameters": [
          {
            "description": "Service ID filter",
            "in": "query",
            "name": "service_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Staff ID filter",
            "in": "query",
            "name": "staff_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "availability": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Services Availability",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get specific service details",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "service": {}
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service Details",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}"
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/services/{service_id}/availability": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get specific service availability",
        "parameters": [
          {
            "description": "Service ID",
            "in": "path",
            "name": "service_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Staff ID filter",
            "in": "query",
            "name": "staff_id",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "data": {
                  "availability": []
                },
                "status": "OK"
              }
            }
          }
        },
        "security": [
          {
            "default": [
              "platform"
            ]
          }
        ],
        "summary": "Get Service Specific Availability",
        "tags": [
          "Services"
        ],
        "x-amazon-apigateway-auth": {
          "type": "NONE"
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "GET",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "http_proxy",
          "uri": "https:///platform/v1/services/{service_id}/availability"
        },
        "x-auth-type": "Application & Application User"
      }
    }
  },
  "securityDefinitions": {
    "default": {
      "authorizationUrl": "https://ignore.myclients.io",
      "flow": "implicit",
      "scopes": {
        "platform": "All platform related operations",
        "platform_create": "platform create scope",
        "platform_delete": "platform delete scope",
        "platform_read": "platform read scope",
        "platform_update": "platform update scope"
      },
      "type": "oauth2",
      "x-scopes-bindings": {
        "platform": "",
        "platform_create": "",
        "platform_delete": "",
        "platform_read": "",
        "platform_update": ""
      }
    }
  },
  "swagger": "2.0",
  "x-throttling-tier": "8ReqPerSec"
}