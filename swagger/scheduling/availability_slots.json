{
  "openapi": "3.0.0",
  "info": {
    "title": "Availability Slots API",
    "description": "API for retrieving availability slots for scheduling",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.vcita.biz",
      "description": "API Gateway server"
    }
  ],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Provide a valid bearer token in the Authorization header. Example: 'Authorization: Bearer {app_token}'"
      }
    },
    "schemas": {
      "AvailabilitySlotList": {
        "type": "object",
        "properties": {
          "availability_slots": {
            "description": "List of AvailabilitySlots",
            "type": "array",
            "items": {
              "$ref": "https://vcita.github.io/developers-hub/entities/scheduling/availabilitySlot.json"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v3/scheduling/availability_slots": {
      "get": {
        "summary": "Get all AvailabilitySlots",
        "description": "Retrieve availability slots for scheduling based on specified criteria. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
        "tags": [
          "Availability Slots"
        ],
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "description": "Start time for availability search",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "description": "End time for availability search",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "service_uid",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the service",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_type_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of resource type UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of resource UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "staff_uids",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of staff UIDs. At least one of resource_type_uids, resource_uids, or staff_uids must be provided.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slot_duration",
            "in": "query",
            "required": false,
            "description": "Duration of each slot in minutes",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "slot_interval",
            "in": "query",
            "required": false,
            "description": "Interval between slots in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "padding_before",
            "in": "query",
            "required": false,
            "description": "Padding time before each slot in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "padding_after",
            "in": "query",
            "required": false,
            "description": "Padding time after each slot in minutes (if relevant)",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "exclude_booking_uid",
            "in": "query",
            "required": false,
            "description": "Unique identifier of a booking to exclude from busy slots calculation when determining availability. When provided, the specified booking is temporarily removed from the busy slots list before calculating available time slots. This is essential for rescheduling scenarios where you need to check if the original time slot would be available without the current booking, or for conflict detection when validating potential overlaps. Example: If booking 'abc123' is scheduled from 2:00-3:00 PM and you want to reschedule it, passing exclude_booking_uid=abc123 will show 2:00-3:00 PM as available (assuming no other bookings conflict). If other bookings exist during that time, the slot remains busy.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Availability slots retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "https://vcita.github.io/developers-hub/entities/response.json"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "$ref": "#/components/schemas/AvailabilitySlotList"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters - missing required parameters or invalid values"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service or specified resources not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  }
} 